/*
Navicat MySQL Data Transfer

Source Server         : localhost_3306
Source Server Version : 50621
Source Host           : localhost:3306
Source Database       : blogspd

Target Server Type    : MYSQL
Target Server Version : 50621
File Encoding         : 65001

Date: 2018-03-12 23:18:57
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `article`
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) CHARACTER SET utf8 NOT NULL,
  `content` longtext CHARACTER SET utf8 NOT NULL,
  `href` varchar(255) CHARACTER SET utf8 NOT NULL,
  `arttype` int(3) NOT NULL,
  `artfrom` varchar(255) CHARACTER SET utf8 NOT NULL,
  `gettime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=463 DEFAULT CHARSET=gbk;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('1', 'Linux运维必会的MySQL企业面试题大全荐 ', '1、下载tomcat &lt;br&gt; tar&amp;nbsp; -zxvf&amp;nbsp; apache-tomcat-8.0.14.tar.gz &lt;br&gt;mv apache-tomcat-8.0.14 tomcat-xwiki-8.0 &lt;br&gt;2、下载xwiki的war包 &lt;br&gt;wget http://download.forge.ow2.org/xwiki/xwiki-enterprise-web-8.4.5.war &lt;br&gt;unzip xwiki-enterprise-web-6.3.war &lt;br&gt;mv xwiki-enterprise-web-6.3 xwiki &lt;br&gt;3、创建数据库 &lt;br&gt; create database xwiki &lt;br&gt; grant all privileges on xwiki.* to xwiki@127.0.0.1 identified by &#039;xwiki&#039;; &lt;br&gt;4、下载mysql驱动 &lt;br&gt; wget  &lt;br&gt;http://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar &lt;br&gt; mv mysql-connector-java-5.1.34.jar ./tomcat-xwiki-8.0/webapps/xwiki/WEB-INF/lib/ &lt;br&gt;5、修改xwiki配置 &lt;br&gt;cp -p hibernate.cfg.xml hibernate.cfg.xml-bak &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; vi&amp;nbsp; hibernate.cfg.xml&amp;nbsp; 删除所有多余的配置文件。 &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [root@fanxh WEB-INF]# cat hibernate.cfg.xml &lt;br&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt; &lt;br&gt;&amp;lt;!DOCTYPE hibernate-configuration PUBLIC &lt;br&gt;&amp;nbsp; &quot;-//Hibernate/Hibernate Configuration DTD//EN&quot; &lt;br&gt;&amp;nbsp; &quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&amp;gt; &lt;br&gt;&amp;lt;hibernate-configuration&amp;gt; &lt;br&gt;&amp;nbsp; &amp;lt;session-factory&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- MySQL configuration. &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Uncomment if you want to use MySQL and comment out other database configurations. &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; --&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;property name=&quot;connection.url&quot;&amp;gt;jdbc:mysql://localhost/xwiki&amp;lt;/property&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;property name=&quot;connection.username&quot;&amp;gt;xwiki&amp;lt;/property&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;property name=&quot;connection.password&quot;&amp;gt;xwiki&amp;lt;/property&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;property name=&quot;connection.driver_class&quot;&amp;gt;com.mysql.jdbc.Driver&amp;lt;/property&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;property name=&quot;dialect&quot;&amp;gt;org.hibernate.dialect.MySQL5InnoDBDialect&amp;lt;/property&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;property name=&quot;dbcp.ps.maxActive&quot;&amp;gt;20&amp;lt;/property&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;mapping resource=&quot;xwiki.hbm.xml&quot;/&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;mapping resource=&quot;feeds.hbm.xml&quot;/&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;mapping resource=&quot;activitystream.hbm.xml&quot;/&amp;gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;mapping resource=&quot;instance.hbm.xml&quot;/&amp;gt; &lt;br&gt;&amp;nbsp; &amp;lt;/session-factory&amp;gt; &lt;br&gt;&amp;lt;/hibernate-configuration&amp;gt; &lt;br&gt;a.XWIKI字符集编码配置 &lt;br&gt;&amp;nbsp; 修改 web.xml文件 &lt;br&gt; /data/app_platform/xwiki_tomcat/webapps/xwiki/WEB-INF/xwiki.cfg &lt;br&gt;#-# The encoding to use when transformin strings to and from byte arrays. This causes the jvm encoding to be ignored, &lt;br&gt;#-# since we want to be independend of the underlying system. &lt;br&gt;xwiki.encoding=UTF-8 &lt;br&gt;b.修改hibernate.cfg.xml &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; hibernate.cfg.xml中添加 &lt;br&gt;&amp;lt;property name=&quot;connection.useUnicode&quot;&amp;gt;true&amp;lt;/property&amp;gt; &lt;br&gt;&amp;lt;property name=&quot;connection.characterEncoding&quot;&amp;gt;UTF-8&amp;lt;/property&amp;gt; &lt;br&gt;c.MySQL的配置文件my.cnf &lt;br&gt;[client] &lt;br&gt;default-character-set=utf8 &lt;br&gt;[mysqld] &lt;br&gt;default-character-set=utf8 &lt;br&gt;character-set-server=utf8 &lt;br&gt;collation-server=utf8_bin &lt;br&gt;d.管理附件(/var/local/xwiki/) &lt;br&gt;默认情况下，XWIKI使用数据库存储附件，上传的附件最大为30M左右，同时MySQL的配置文件my.cnf中要设置max_allowed_packet为最大值的3倍左右，因为存储历史版本也会耗费空间 &lt;br&gt;使用文件系统存储可以上传更大的附件，XWIKI使用一个临时目录来存储从数据库中调出的图片或附件。 &lt;br&gt;附件的存储目录在xwiki.properties中设定，不可以随意增加或删除这个目录下的内容，因为每个附件在数据库中都有相应的元数据 &lt;br&gt;#-# Note if the system property xwiki.data.dir is set then this property is not used. &lt;br&gt;#-# If neither the system property nor this configuration value here are set then the Servlet container&#039;s temporary &lt;br&gt;#-# directory is used; This is absolutely not recommended since that directory could be wiped out at any time and you &lt;br&gt;#-# should specify a value. &lt;br&gt;environment.permanentDirectory=/var/local/xwiki/ &lt;br&gt;最好在第一次运行XWIKI的时候就设定好附件的存储方式 &lt;br&gt;在xwik.cfg文件中设置 &lt;br&gt;xwiki.store.attachment.hint=file &lt;br&gt;xwiki.store.attachment.versioning.hint=file &lt;br&gt;xwiki.store.attachment.recyclebin.hint=file &lt;br&gt;用管理员登陆的话，需要修改xwiki.cfg，将xwiki.superadminpassword=system 前面#去掉， 用superadmin/system登陆即可。 &lt;br&gt; &lt;br&gt;e、开启管理员管理功能 &lt;br&gt;　　XWiki默认安装是没开启管理员帐号的，要打开管理员帐号，需要到安装目录“X:PXWiki EnterprisewebappsxwikiWEB-INFxwiki.cfg“文件中，把“xwiki.superadminpassword=system”用帐号superadmin/system登陆了 &lt;br&gt;f、更改语言配置 &lt;br&gt;　　XWiki默认是英文的，要更改为中文，需要进入管理页面 Wiki Administration-&amp;gt;Configuration-&amp;gt;General-&amp;gt;DEFAULT LANGUAGE，把原有的en改为zh，再保存就自动切换到熟悉的中文界面了。 &lt;br&gt;6、安装相应版本的ui主题 &lt;br&gt;http://maven.xwiki.org/releases/org/xwiki/enterprise/xwiki-enterprise-ui-mainwiki-all/ &lt;br&gt;  &lt;br&gt;&lt;img src=&quot;http://dl2.iteye.com/upload/attachment/0128/8740/a058a84c-1ad0-33a8-b6e3-1961e79a3742.png&quot;&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;http://john88wang.blog.51cto.com/2165294/1605787 &lt;br&gt;http://www.linuxidc.com/Linux/2016-11/136751.htm &lt;br&gt;http://www.th7.cn/db/mysql/201611/211325.shtml &lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;img src=&quot;http://dl2.iteye.com/upload/attachment/0128/8742/2f89d461-912b-3bdc-bc83-a7d5d5829e44.jpg&quot;&gt; &lt;br&gt;   ', 'http://blog.51cto.com/mingongge/2066263', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('2', '我是一个CPU：这个世界慢！死！了！荐 ', '', 'http://blog.51cto.com/13188467/2065321', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('3', '爬取一个天气预报结合微信公总号发送荐 ', '&lt;div id=&quot;blog_content&quot; class=&quot;blog_content&quot;&gt;     &lt;div class=&quot;iteye-blog-content-contain&quot; style=&quot;font-size: 14px;&quot;&gt; &lt;p style=&quot;&quot;&gt;笔记仓库：&lt;a href=&quot;https://github.com/nnngu/LearningNotes&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;https://github.com/nnngu/LearningNotes&lt;/a&gt;&lt;/p&gt;  &lt;hr style=&quot;&quot;&gt; &lt;p style=&quot;&quot;&gt;&lt;a href=&quot;https://github.com/nnngu/LearningNotes/blob/master/React/04%20(%E9%A1%B9%E7%9B%AE)%20%E5%9F%BA%E4%BA%8E%20React%20%2B%20%20Webpack%20%E7%9A%84%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%86%8C%EF%BC%88%E4%B8%8A%EF%BC%89.md&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;上一篇完成了音乐相册里面的相册功能&lt;/a&gt;，这一篇主要总结的是音乐相册里面的音乐播放器功能。&lt;/p&gt;  &lt;h2 style=&quot;&quot;&gt; &lt;a class=&quot;anchor&quot; href=&quot;https://github.com/nnngu/LearningNotes/blob/master/React/05%20(%E9%A1%B9%E7%9B%AE)%20%E5%9F%BA%E4%BA%8E%20React%20%2B%20Webpack%20%E7%9A%84%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%86%8C%EF%BC%88%E4%B8%8B%EF%BC%89.md#%E6%95%B0%E6%8D%AE%E5%87%86%E5%A4%87&quot; style=&quot;&quot;&gt;&lt;/a&gt;数据准备&lt;/h2&gt;  &lt;p style=&quot;&quot;&gt;在&lt;code style=&quot;&quot;&gt;src/data&lt;/code&gt;目录添加音乐数据文件：&lt;code style=&quot;&quot;&gt;musicDatas.js&lt;/code&gt;&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;代码如下：&lt;/p&gt;  &lt;div class=&quot;highlight highlight-source-js&quot; style=&quot;&quot;&gt;  &lt;pre&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;MUSIC_LIST&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; [    {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;1&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;童话镇&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;陈一发儿&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;https://raw.githubusercontent.com/nnngu/SharedResource/master/music/%E7%AB%A5%E8%AF%9D%E9%95%87.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;https://raw.githubusercontent.com/nnngu/FigureBed/master/2018/2/6/tong_hua_zhen.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }, {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;2&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;天使中的魔鬼&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;田馥甄&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E9%AD%94%E9%AC%BC%E4%B8%AD%E7%9A%84%E5%A4%A9%E4%BD%BF.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E9%AD%94%E9%AC%BC%E4%B8%AD%E7%9A%84%E5%A4%A9%E4%BD%BF.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }, {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;3&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;风继续吹&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;张国荣&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E9%A3%8E%E7%BB%A7%E7%BB%AD%E5%90%B9.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E9%A3%8E%E7%BB%A7%E7%BB%AD%E5%90%B9.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }, {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;4&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;恋恋风尘&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;老狼&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E6%81%8B%E6%81%8B%E9%A3%8E%E5%B0%98.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E6%81%8B%E6%81%8B%E9%A3%8E%E5%B0%98.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }, {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;5&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;我要你&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;任素汐&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E6%88%91%E8%A6%81%E4%BD%A0.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E6%88%91%E8%A6%81%E4%BD%A0.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }, {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;6&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;成都&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;赵雷&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E6%88%90%E9%83%BD.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/%E6%88%90%E9%83%BD.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }, {      id&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;7&lt;/span&gt;,      title&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;sound of silence&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      artist&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;Simon &amp;amp; Garfunkel&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      file&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/sound-of-silence.mp3&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,      cover&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;http://oj4t8z2d5.bkt.clouddn.com/sound-of-silence.jpg&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;    }    ];  &lt;/pre&gt;  &lt;/div&gt;  &lt;h2 style=&quot;&quot;&gt; &lt;a class=&quot;anchor&quot; href=&quot;https://github.com/nnngu/LearningNotes/blob/master/React/05%20(%E9%A1%B9%E7%9B%AE)%20%E5%9F%BA%E4%BA%8E%20React%20%2B%20Webpack%20%E7%9A%84%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%86%8C%EF%BC%88%E4%B8%8B%EF%BC%89.md#%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%8A%9F%E8%83%BD&quot; style=&quot;&quot;&gt;&lt;/a&gt;进度条功能&lt;/h2&gt;  &lt;p style=&quot;&quot;&gt;1、在&lt;code style=&quot;&quot;&gt;src/index.html&lt;/code&gt;文件中添加一个div，作为jPlayer（音乐播放插件）的容器。如下图红色框里面的就是新添加的代码：&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;a href=&quot;https://camo.githubusercontent.com/4bef339dec91e800100f70111a0ebab294e6ccd4/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132313936353634322e6a7067&quot; target=&quot;_blank&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://camo.githubusercontent.com/4bef339dec91e800100f70111a0ebab294e6ccd4/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132313936353634322e6a7067&quot; style=&quot;border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;2、继续在&lt;code style=&quot;&quot;&gt;src/index.html&lt;/code&gt;文件中应用 jQuery 和 jPlayer 。&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;a href=&quot;https://camo.githubusercontent.com/954f4848e283214336cd8ec2f517a4222d6c1d26/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132323134353730392e6a7067&quot; target=&quot;_blank&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://camo.githubusercontent.com/954f4848e283214336cd8ec2f517a4222d6c1d26/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132323134353730392e6a7067&quot; style=&quot;border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;3、添加进度条组件：在&lt;code style=&quot;&quot;&gt;src/components/music&lt;/code&gt;?目录添加?&lt;code style=&quot;&quot;&gt;progress.js&lt;/code&gt;，如下图：&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;a href=&quot;https://camo.githubusercontent.com/7b5dec5f16536e0a96313aa8159aa3f53e5901e8/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132323333353031302e6a7067&quot; target=&quot;_blank&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://camo.githubusercontent.com/7b5dec5f16536e0a96313aa8159aa3f53e5901e8/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132323333353031302e6a7067&quot; style=&quot;border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;code style=&quot;&quot;&gt;progress.js&lt;/code&gt;的代码如下：&lt;/p&gt;  &lt;div class=&quot;highlight highlight-source-js&quot; style=&quot;&quot;&gt;  &lt;pre&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;react&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;./progress.less&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; Progress &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;createClass&lt;/span&gt;({      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;getDefaultProps&lt;/span&gt;() {      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;return&lt;/span&gt; {        barColor&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#2f9842&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;      }    },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;changeProgress&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;) {      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; progressBar &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progressBar&lt;/span&gt;;      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; progress &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;clientX&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progressBar&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;left&lt;/span&gt;) &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progressBar&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;clientWidth&lt;/span&gt;;      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;props&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;onProgressChange&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;props&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;onProgressChange&lt;/span&gt;(progress);    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; ......&lt;/span&gt;        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 省略了一部分代码&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 完整的代码请参照项目的源代码&lt;/span&gt;      });    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;Progress&lt;/span&gt;;  &lt;/pre&gt;  &lt;/div&gt;  &lt;p style=&quot;&quot;&gt;在同一个目录下创建Progress 的样式文件?&lt;code style=&quot;&quot;&gt;progress.less&lt;/code&gt;，代码如下：&lt;/p&gt;  &lt;div class=&quot;highlight highlight-source-css-less&quot; style=&quot;&quot;&gt;  &lt;pre&gt;&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.components-progress&lt;/span&gt; {  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;inline-block&lt;/span&gt;;  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;100&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt;;  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;3&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;relative&lt;/span&gt;;  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;#aaa&lt;/span&gt;;  	&lt;span class=&quot;pl-ent&quot; style=&quot;color: #22863a;&quot;&gt;cursor&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;pointer&lt;/span&gt;;    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.progress&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;3&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;;  	}  }  &lt;/pre&gt;  &lt;/div&gt;  &lt;h2 style=&quot;&quot;&gt; &lt;a class=&quot;anchor&quot; href=&quot;https://github.com/nnngu/LearningNotes/blob/master/React/05%20(%E9%A1%B9%E7%9B%AE)%20%E5%9F%BA%E4%BA%8E%20React%20%2B%20Webpack%20%E7%9A%84%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%86%8C%EF%BC%88%E4%B8%8B%EF%BC%89.md#%E5%88%9B%E5%BB%BA%E6%92%AD%E6%94%BE%E5%99%A8%E7%BB%84%E4%BB%B6&quot; style=&quot;&quot;&gt;&lt;/a&gt;创建播放器组件&lt;/h2&gt;  &lt;p style=&quot;&quot;&gt;播放器组件分别对应&lt;code style=&quot;&quot;&gt;player.js&lt;/code&gt;?和?&lt;code style=&quot;&quot;&gt;player.less&lt;/code&gt;?两个文件。如下图：&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;a href=&quot;https://camo.githubusercontent.com/7344be11fc46ddc0f6f59221ccf20f246d039a47/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132373230323431352e6a7067&quot; target=&quot;_blank&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://camo.githubusercontent.com/7344be11fc46ddc0f6f59221ccf20f246d039a47/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132373230323431352e6a7067&quot; style=&quot;border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;code style=&quot;&quot;&gt;player.js&lt;/code&gt;?的代码如下：&lt;/p&gt;  &lt;div class=&quot;highlight highlight-source-js&quot; style=&quot;&quot;&gt;  &lt;pre&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;react&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;Progress&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;./progress&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;import&lt;/span&gt; {&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;MUSIC_LIST&lt;/span&gt;} &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;../../data/musicDatas&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; PubSub &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;pubsub-js&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);  &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;./player.less&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; duration &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;null&lt;/span&gt;;    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; Player &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;createClass&lt;/span&gt;({      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 生命周期方法 componentDidMount&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;componentDidMount&lt;/span&gt;() {      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;timeupdate&lt;/span&gt;, (&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;) &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&amp;gt;&lt;/span&gt; {        duration &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;status&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;duration&lt;/span&gt;;        &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({          progress&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;status&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentPercentAbsolute&lt;/span&gt;,          volume&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;options&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;volume&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;100&lt;/span&gt;,          leftTime&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;formatTime&lt;/span&gt;(duration &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;*&lt;/span&gt; (&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;status&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentPercentAbsolute&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;100&lt;/span&gt;))        });      });        &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;ended&lt;/span&gt;, (&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;e&lt;/span&gt;) &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&amp;gt;&lt;/span&gt; {        &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;playNext&lt;/span&gt;();      });    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 生命周期方法 componentWillUnmount&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;componentWillUnmount&lt;/span&gt;() {      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;unbind&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;timeupdate&lt;/span&gt;);    },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;formatTime&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;time&lt;/span&gt;) {      time &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;floor&lt;/span&gt;(time);      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; miniute &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;floor&lt;/span&gt;(time &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;60&lt;/span&gt;);      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; seconds &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;floor&lt;/span&gt;(time &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;60&lt;/span&gt;);        &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;return&lt;/span&gt; miniute &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;+&lt;/span&gt; (seconds &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;0&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;+&lt;/span&gt; seconds &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; seconds);    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 进度条被拖动的处理方法&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;@param&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progress&lt;/span&gt;&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;changeProgressHandler&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progress&lt;/span&gt;) {      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;play&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;, duration &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;*&lt;/span&gt; progress);      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({        isPlay&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;true&lt;/span&gt;      });        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 获取转圈的封面图片&lt;/span&gt;      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; imgAnimation &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;;      &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;animation-play-state: running&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 音量条被拖动的处理方法&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;@param&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progress&lt;/span&gt;&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;changeVolumeHandler&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progress&lt;/span&gt;) {      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;volume&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;, progress);    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 播放或者暂停方法&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   *&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;play&lt;/span&gt;() {      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({        isPlay&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;isPlay&lt;/span&gt;      });        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 获取转圈的封面图片&lt;/span&gt;      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;var&lt;/span&gt; imgAnimation &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;;        &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;isPlay&lt;/span&gt;) {        &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;pause&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);        &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;animation-play-state: paused&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;      } &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;else&lt;/span&gt; {        &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;play&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);        &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;animation-play-state: running&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;      }      },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 下一首&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   *&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;next&lt;/span&gt;() {      &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;PubSub&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;publish&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;PLAY_NEXT&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);        &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({        isPlay&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;true&lt;/span&gt;      });        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 开始播放下一首&lt;/span&gt;      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;playNext&lt;/span&gt;();        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 获取转圈的封面图片&lt;/span&gt;      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; imgAnimation &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;;      &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;animation-play-state: running&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;      },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * 上一首&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   *&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;prev&lt;/span&gt;() {      &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;PubSub&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;publish&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;PLAY_PREV&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);        &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({        isPlay&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;true&lt;/span&gt;      });        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 开始播放上一首&lt;/span&gt;      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;playNext&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;prev&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);        &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 获取转圈的封面图片&lt;/span&gt;      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; imgAnimation &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;;      &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;animation-play-state: running&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;;      },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;playNext&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;next&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;) {      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; index &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;findMusicIndex&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentMusitItem&lt;/span&gt;);      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;if&lt;/span&gt; (type &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;next&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;) {        index &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; (index &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;length&lt;/span&gt;;      } &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;else&lt;/span&gt; {        index &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; (index &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;length&lt;/span&gt;;      }      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; musicItem &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;musicList&lt;/span&gt;[index];      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({        currentMusitItem&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; musicItem      });      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;playMusic&lt;/span&gt;(musicItem);    },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;playMusic&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;item&lt;/span&gt;) {      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;#player&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;setMedia&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;, {        mp3&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;file&lt;/span&gt;      }).&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;play&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;setState&lt;/span&gt;({        currentMusitItem&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; item      });    },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;findMusicIndex&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;music&lt;/span&gt;) {      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;let&lt;/span&gt; index &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;indexOf&lt;/span&gt;(music);      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;, index);    },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;changeRepeat&lt;/span&gt;() {      &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;PubSub&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;publish&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;CHANAGE_REPEAT&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;);    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; constructor() {&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;   return {&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;     progress: 0,&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;     volume: 0,&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;     isPlay: true,&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;     leftTime: &#039;&#039;&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;   }&lt;/span&gt;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; },&lt;/span&gt;      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;componentWillMount&lt;/span&gt;() {      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;getInitialState&lt;/span&gt;();    },      &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;getInitialState&lt;/span&gt;() {      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;return&lt;/span&gt; {        musicList&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;MUSIC_LIST&lt;/span&gt;,        currentMusitItem&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;MUSIC_LIST&lt;/span&gt;[&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;],        repeatType&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;cycle&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;,          progress&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;,        volume&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;,        isPlay&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;true&lt;/span&gt;,        leftTime&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;      }    },      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;/**&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * render 渲染方法&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   * &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;@returns&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;{*}&lt;/span&gt;&lt;/span&gt;  &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;   &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;    &lt;span class=&quot;pl-en&quot; style=&quot;color: #6f42c1;&quot;&gt;render&lt;/span&gt;() {      &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;return&lt;/span&gt; (        &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;player-page&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt; row&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;            &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;controll-wrapper&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;h2 className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;music-title&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;title&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;h2&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;h3 className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;music-artist mt10&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;artist&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;h3&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;row mt10&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;left-time -col-auto&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;-&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;leftTime&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;volume-container&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;icon-volume rt&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; style&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{{top&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;5&lt;/span&gt;, left&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;5&lt;/span&gt;}}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;i&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;volume-wrapper&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                      {&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;/*&lt;/span&gt; 音量条 &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;}                    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;Progress                      progress&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;volume&lt;/span&gt;}                      onProgressChange&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;changeVolumeHandler&lt;/span&gt;}                      &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; barColor=&#039;#aaa&#039;&lt;/span&gt;                    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;Progress&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div style&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{{height&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;10&lt;/span&gt;, lineHeight&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;10px&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;}}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  {&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;/*&lt;/span&gt; 播放进度条 &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;}                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;Progress                  progress&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;progress&lt;/span&gt;}                  onProgressChange&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;changeProgressHandler&lt;/span&gt;}                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;Progress&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;mt35 row&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;icon prev&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; onClick&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;prev&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;i&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;`&lt;/span&gt;icon ml20 &lt;span class=&quot;pl-s1&quot; style=&quot;color: #24292e;&quot;&gt;&lt;span class=&quot;pl-pse&quot; style=&quot;&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;&quot;&gt;isPlay&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;pause&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;play&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pse&quot; style=&quot;&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;`&lt;/span&gt;&lt;/span&gt;} onClick&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;play&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;i&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;icon next ml20&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; onClick&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;next&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;i&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;-col-auto&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                  {&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;/*&lt;/span&gt; 播放模式按钮：单曲、循环、随机 &lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;}                  &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;`&lt;/span&gt;repeat-&lt;span class=&quot;pl-s1&quot; style=&quot;color: #24292e;&quot;&gt;&lt;span class=&quot;pl-pse&quot; style=&quot;&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;&quot;&gt;repeatType&lt;/span&gt;&lt;span class=&quot;pl-pse&quot; style=&quot;&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;`&lt;/span&gt;&lt;/span&gt;} onClick&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;changeRepeat&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;i&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;                &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;            &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;            &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;-col-auto cover&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;img ref&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot; style=&quot;color: #032f62;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;imgAnimation&lt;span class=&quot;pl-pds&quot; style=&quot;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; src&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;cover&lt;/span&gt;} alt&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;title&lt;/span&gt;}&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;            &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;        &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;&amp;gt;&lt;/span&gt;      );    }  });    &lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;Player&lt;/span&gt;;  &lt;/pre&gt;  &lt;/div&gt;  &lt;p style=&quot;&quot;&gt;&lt;code style=&quot;&quot;&gt;player.less&lt;/code&gt;?的代码如下：&lt;/p&gt;  &lt;div class=&quot;highlight highlight-source-css-less&quot; style=&quot;&quot;&gt;  &lt;pre&gt;&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.player-page&lt;/span&gt; {  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;550&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;210&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;margin: auto;&lt;/span&gt;  	&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;margin-top: 0px;&lt;/span&gt;      &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;absolute&lt;/span&gt;;    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;50&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt;;    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;-50&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;);    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;20&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;101&lt;/span&gt;;    &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;width: 100%;&lt;/span&gt;    	&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;.caption {&lt;/span&gt;  	&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;	font-size: 16px;&lt;/span&gt;  	&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;	color: rgb(47, 152, 66);&lt;/span&gt;  	&lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt;}&lt;/span&gt;    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.cover&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;180&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;180&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;20&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;    		&lt;span class=&quot;pl-ent&quot; style=&quot;color: #22863a;&quot;&gt;img&lt;/span&gt; {  			&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;180&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  			&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;180&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  			&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;50&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt;;  			&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;animation&lt;/span&gt;: roate &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;20&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;s&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;linear&lt;/span&gt;; &lt;span class=&quot;pl-c&quot; style=&quot;color: #6a737d;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;&quot;&gt;//&lt;/span&gt; 旋转专辑封面&lt;/span&gt;  			&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;2&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;#808080b8&lt;/span&gt;;  		}  	}    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.volume-container&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;relative&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;20&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;-3&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	}    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.volume-container&lt;/span&gt; &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.volume-wrapper&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;;  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;transition&lt;/span&gt;: opacity &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;.5&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;s&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;linear&lt;/span&gt;;  	}    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.volume-container&lt;/span&gt;&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.volume-wrapper&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;1&lt;/span&gt;;  	}    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.music-title&lt;/span&gt; {  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;25&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;400&lt;/span&gt;;  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;rgb&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;3&lt;/span&gt;);  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;6&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;6&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	}    	&lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.music-artist&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;15&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;400&lt;/span&gt;;  	    &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;rgb&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;74&lt;/span&gt;);      }        &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.left-time&lt;/span&gt; {      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;14&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;#999&lt;/span&gt;;      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;400&lt;/span&gt;;      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;40&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;      }        &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.icon&lt;/span&gt; {      	&lt;span class=&quot;pl-ent&quot; style=&quot;color: #22863a;&quot;&gt;cursor&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;pointer&lt;/span&gt;;      }        &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.ml20&lt;/span&gt; {      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;20&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;      }        &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.mt35&lt;/span&gt; {      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;35&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;      }        &lt;span class=&quot;pl-e&quot; style=&quot;color: #6f42c1;&quot;&gt;.volume-wrapper&lt;/span&gt; {      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;60&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;px&lt;/span&gt;&lt;/span&gt;;      	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;inline-block&lt;/span&gt;;      }  }    &lt;span class=&quot;pl-smi&quot; style=&quot;color: #24292e;&quot;&gt;@keyframes&lt;/span&gt; roate {  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;rotateZ&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;0&lt;/span&gt;)  	}  	&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;100&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;%&lt;/span&gt;&lt;/span&gt; {  		&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;rotateZ&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;color: #005cc5;&quot;&gt;360&lt;span class=&quot;pl-k&quot; style=&quot;color: #d73a49;&quot;&gt;deg&lt;/span&gt;&lt;/span&gt;)  	}  }  &lt;/pre&gt;  &lt;/div&gt;  &lt;p style=&quot;&quot;&gt;然后在&lt;code style=&quot;&quot;&gt;src/components/Main.js&lt;/code&gt;中添加音乐播放器组件?&lt;code style=&quot;&quot;&gt;Player&lt;/code&gt;?，完整的代码请参照我发布到 Github 上的源代码。&lt;/p&gt;  &lt;h2 style=&quot;&quot;&gt; &lt;a class=&quot;anchor&quot; href=&quot;https://github.com/nnngu/LearningNotes/blob/master/React/05%20(%E9%A1%B9%E7%9B%AE)%20%E5%9F%BA%E4%BA%8E%20React%20%2B%20Webpack%20%E7%9A%84%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%86%8C%EF%BC%88%E4%B8%8B%EF%BC%89.md#%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C&quot; style=&quot;&quot;&gt;&lt;/a&gt;最终效果&lt;/h2&gt;  &lt;p style=&quot;&quot;&gt;到此，基于 React 的音乐相册的全部功能已经完成了。最终的运行效果如下：&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;&lt;a href=&quot;https://camo.githubusercontent.com/bf247e882d6ab261c64b36f3c818004bd475f289/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132383433373130352e6a7067&quot; target=&quot;_blank&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://camo.githubusercontent.com/bf247e882d6ab261c64b36f3c818004bd475f289/68747470733a2f2f7777772e6769746875622e636f6d2f6e6e6e67752f4669677572654265642f7261772f6d61737465722f323031382f322f392f313531383132383433373130352e6a7067&quot; style=&quot;border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p style=&quot;&quot;&gt;源代码：&lt;a href=&quot;https://github.com/nnngu/MusicPhoto&quot; style=&quot;background-color: transparent; color: #0366d6;&quot;&gt;https://github.com/nnngu/MusicPhoto&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;   &lt;/div&gt;', 'http://blog.51cto.com/legehappy/2064616', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('4', 'ESXi6 在Thin 配置的LUN上释放存储空间荐 ', '', 'http://blog.51cto.com/beanxyz/2064459', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('5', '巧遇一次ESXI暴力口令破解（ssh)荐 ', '', 'http://blog.51cto.com/jdonghong/2063959', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('6', '了解区块链，从挖矿开始荐 ', '', 'http://blog.51cto.com/sery/2062811', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('7', '一个脚本引发的血案荐 ', '', 'http://blog.51cto.com/ityouknow/2061991', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('8', '记录徒手解决cranberry病毒的过程荐 ', '', 'http://blog.51cto.com/4436396/2061649', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('9', '一键打造你的Doker矿机荐 ', '', 'http://blog.51cto.com/storysky/2060369', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('10', '总结一下：运维工程师面试的经历及面试相关问题（续2）荐 ', '', 'http://blog.51cto.com/ganbing/2059541', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('11', '智能运维就是由 AI 代替运维人员？荐 ', '', 'http://blog.51cto.com/xjsunjie/2059289', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('12', 'Nagios 监控 ESXi荐 ', '', 'http://blog.51cto.com/beanxyz/2059287', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('13', '分布式文件系统FastDFS详解荐 ', '', 'http://blog.51cto.com/ityouknow/2058495', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('14', '总结一下：运维工程师面试的经历及面试相关问题（会持续更新）荐 ', '', 'http://blog.51cto.com/ganbing/2057482', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('15', '如何使用PowerShell下载必应每日图片荐 ', '', 'http://blog.51cto.com/msroger/2056964', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('16', '翻旧账，评规划---看看土豪公司怎么做系统架构荐 ', '', 'http://blog.51cto.com/sery/2055843', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('17', '一次网站性能排查实录荐 ', '', 'http://blog.51cto.com/sery/2053947', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('18', '我把Linux系统上面误删的数据找回来了荐 ', '', 'http://blog.51cto.com/wzlinux/2052835', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('19', 'CrazyWing：Python自动化运维开发实战 十七、Python异常荐 ', '', 'http://blog.51cto.com/fklinux/2050881', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('20', '使用Prometheus+grafana打造高逼格监控平台荐 ', '', 'http://blog.51cto.com/youerning/2050543', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('21', '恢复误删除的ESXi服务器存储VMFS卷荐 ', '', 'http://blog.51cto.com/wangchunhai/2054146', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('22', '容器技术在企业落地的9个关键问题荐 ', '', 'http://blog.51cto.com/xjsunjie/2052872', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('23', '短视频 SDK 架构设计实践荐 ', '', 'http://blog.51cto.com/7741292/2046054', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('24', 'Kubernetes(K8S)集群管理Docker容器（部署篇）荐 ', '', 'http://blog.51cto.com/lizhenliang/1983392', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('25', 'Docker技术这些应用场景，你知道吗？荐 ', '', 'http://blog.51cto.com/lizhenliang/1978081', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('26', 'micro-datasource分布式事务数据源荐 ', '', 'http://blog.51cto.com/13442277/1977843', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('27', 'Docker 最常用的监控方案 - 每天5分钟玩转 Docker 容器技术（78）荐 ', '', 'http://blog.51cto.com/cloudman/1970815', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('28', '一文搞懂各种 Docker 网络 - 每天5分钟玩转 Docker 容器技术（72）荐 ', '', 'http://blog.51cto.com/cloudman/1968287', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('29', '一位架构师用服务打动客户的故事之二荐 ', '', 'http://blog.51cto.com/allen686/1968113', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('30', 'Hyper-V 2016 系列教程50 某德国制造型企业上线案例分享荐 ', '', 'http://blog.51cto.com/hangtc/1967437', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('31', '如何快速构建中小企业应用上云架构的应对思路荐 ', '', 'http://blog.51cto.com/allen686/1954247', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('32', '解决VMware View虚拟桌面“黑屏”问题荐 ', '', 'http://blog.51cto.com/wangchunhai/1949583', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('33', '跟阿里云技术专家阙寒一起深度了解视频直播CDN技术荐 ', '', 'http://blog.51cto.com/13145856/1948848', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('34', 'Kubernetes容器编排的三大支柱荐 ', '', 'http://blog.51cto.com/12462495/1929181', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('35', 'supervisor工具实现自动化docker服务运行荐 ', '', 'http://blog.51cto.com/xiaorenwutest/1928799', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('36', 'docker中遇到的问题及解决方法荐 ', '', 'http://blog.51cto.com/landm/1928590', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('37', '如何在Rancher上运行Elasticsearch荐 ', '', 'http://blog.51cto.com/12462495/1924924', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('38', 'docker镜像的制作和容器的运行荐 ', '', 'http://blog.51cto.com/xiaorenwutest/1923129', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('39', 'docker 指定ip开容器，并且和内网在同一个网段荐 ', '', 'http://blog.51cto.com/lvnian/1922385', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('40', 'docker—适用于中小企业的生产、测试、开发环境荐 ', '', 'http://blog.51cto.com/super12138/1916435', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('41', 'Hadoop运维记录系列(二十一)荐 ', '', 'http://blog.51cto.com/slaytanic/1978521', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('42', '大数据实践总结－－两个故障的处理及思路总结 荐 ', '', 'http://blog.51cto.com/bingyang/1968998', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('43', 'HBase在阿里搜索中的应用实践荐 ', '', 'http://blog.51cto.com/wangxy/1952591', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('44', '亿级推广流量仍能精准推荐？解读核心算法的应用实践荐 ', '', 'http://blog.51cto.com/wangxy/1948408', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('45', '大数据平台一键安装OS【搭建脚本篇】荐 ', '', 'http://blog.51cto.com/chenhao6/1943235', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('46', '大数据平台一键安装OS【定制化OS镜像制作】荐 ', '', 'http://blog.51cto.com/chenhao6/1943183', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('47', 'MySQL大数据的优化以及分解存储荐 ', '', 'http://blog.51cto.com/xiaorenwutest/1940381', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('48', '数据驱动安全架构升级---“花瓶”模型迎来V5.0(二)荐 ', '', 'http://blog.51cto.com/zhaisj/1921936', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('49', 'Gartner：自建大数据安全分析平台恐难逃失败厄运！荐 ', '', 'http://blog.51cto.com/yepeng/1915824', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('50', '美团大数据平台架构实践荐 ', '', 'http://blog.51cto.com/jackwxh/1899802', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('51', 'Apache Bigtop再论与卖书求生存荐 ', '', 'http://blog.51cto.com/slaytanic/1887685', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('52', '挨踢部落第二期：大数据在医疗领域的应用和实践荐 ', '', 'http://blog.51cto.com/51ctoeditor/1887675', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('53', '挨踢部落第一期：Spark离线分析维度荐 ', '', 'http://blog.51cto.com/51ctoeditor/1887670', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('54', '大数据Hadoop快速入门荐 ', '', 'http://blog.51cto.com/huaxin/1867119', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('55', 'hadoop源码解析---INodeReference机制荐 ', '', 'http://blog.51cto.com/xlows/1811689', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('56', 'logstash将Kafka中的日志数据订阅到HDFS荐 ', '', 'http://blog.51cto.com/heqin/1796776', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('57', '企业混合云的VERITAS数据保护方案荐 ', '', 'http://blog.51cto.com/xjsunjie/1770446', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('58', 'hadoop+zookepper实现namenode的高可用荐 ', '', 'http://blog.51cto.com/gdutccd/1741198', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('59', '大数据时代里，运维工程师的自我修养i荐 ', '', 'http://blog.51cto.com/youerning/1726349', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('60', 'Hadoop运维记录系列(十七)荐 ', '', 'http://blog.51cto.com/slaytanic/1712597', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('61', '通过 ES6 Promise 和 jQuery Deferred 的异同学习 Promise荐 ', '', 'http://blog.51cto.com/jamesfancy/2062425', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('62', '前后分离模型之封装 Api 调用荐 ', '', 'http://blog.51cto.com/jamesfancy/2061675', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('63', 'JavaScript中错误正确处理方式，你用对了吗？荐 ', '', 'http://blog.51cto.com/powertoolsteam/1971099', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('64', '56张图详细分解Flash CS6中对齐面板的使用荐 ', '', 'http://blog.51cto.com/mmanong/1965052', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('65', 'PHPWAMP内置IIS管理器一键搭建PHP网站，支持无限个不同PHP版本同时运行荐 ', '', 'http://blog.51cto.com/lccee/1961732', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('66', 'Java实现Web页面前数字字母验证码实现荐 ', '', 'http://blog.51cto.com/12080873/1959906', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('67', '关于搜索功能的实现原理（laravel框架）荐 ', '', 'http://blog.51cto.com/kangjunfei/1958240', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('68', 'Django 中 cookie的使用荐 ', '', 'http://blog.51cto.com/beanxyz/1956951', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('69', 'RabbitMQ入门与使用篇荐 ', '', 'http://blog.51cto.com/sflyq/1954641', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('70', 'Django 获取前端发送的头文件荐 ', '', 'http://blog.51cto.com/beanxyz/1954354', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('71', '大话WEB前端性能优化基本套路荐 ', '', 'http://blog.51cto.com/sflyq/1947541', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('72', '熊猫直播Rancho发布系统构建之路荐 ', '', 'http://blog.51cto.com/jiechao2012/1945787', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('73', 'jQuery温度计，支持摄氏度华氏度同时展示荐 ', '', 'http://blog.51cto.com/zl0828/1937182', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('74', '日程日历系统，顶级插件FullCalendar使用说明荐 ', '', 'http://blog.51cto.com/zl0828/1934813', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('75', '高并发业务接口开发思路(实战)荐 ', '', 'http://blog.51cto.com/sflyq/1934787', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('76', 'PHP实现Collection数据集类及其原理荐 ', '', 'http://blog.51cto.com/12942149/1932756', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('77', 'javascript中函数的5个高级技巧荐 ', '', 'http://blog.51cto.com/33997k7k/1923990', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('78', '阿里云WindowsServer2016安装独立的Apache和PHP荐 ', '', 'http://blog.51cto.com/12643313/1918013', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('79', '详解Centos源码编译安装Apache、PHP荐 ', '', 'http://blog.51cto.com/qq512430/1914420', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('80', '电商项目总结荐 ', '', 'http://blog.51cto.com/sihai/1909878', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('81', 'DES--------Golang对称加密之模式问题实战荐 ', '', 'http://blog.51cto.com/lisea/2065657', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('82', 'Java高级特性——注解，这也许是最简单易懂的文章了荐 ', '', 'http://blog.51cto.com/13586365/2065324', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('83', 'Python爬虫知识点梳理荐 ', '', 'http://blog.51cto.com/9478652/2064880', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('84', 'Java定时任务调度详解荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2064092', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('85', '自动登录TP-LINK路由器，获取所有信息，重启等等，实用方法荐 ', '', 'http://blog.51cto.com/mapengfei/2063279', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('86', 'Python 2 和 Python 3 主要区别有哪些（一）荐 ', '', 'http://blog.51cto.com/9478652/2062653', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('87', '解决XORM的时区问题荐 ', '', 'http://blog.51cto.com/qiangmzsx/2061278', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('88', '细说智能指针荐 ', '', 'http://blog.51cto.com/chen0547/2060896', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('89', '图解Python变量与赋值荐 ', '', 'http://blog.51cto.com/9478652/2060200', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('90', '关于Python列表中10个最常见的问题荐 ', '', 'http://blog.51cto.com/9478652/2058836', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('91', '详解Python 采用 requests + Beautiful Soup 爬取房天下新楼盘推荐荐 ', '', 'http://blog.51cto.com/yuanzhitang/2058281', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('92', '深入理解Python字符编码荐 ', '', 'http://blog.51cto.com/9478652/2057896', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('93', '那一定都是你的错！- 一次FastDFS并发问题的排查经历荐 ', '', 'http://blog.51cto.com/ityouknow/2054992', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('94', '细说C++的友元荐 ', '', 'http://blog.51cto.com/chen0547/2053705', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('95', '使用PyQtGraph进行Python数据可视化：绘制精美折线图（以 上证指数走势为例）荐 ', '', 'http://blog.51cto.com/6230973/2052761', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('96', '为“Python将纳入高考”降温荐 ', '', 'http://blog.51cto.com/yangsir/2049842', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('97', 'C/C++中一次性执行多个DOS命令荐 ', '', 'http://blog.51cto.com/lancelot/2046167', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('98', 'spring rest 容易被忽视的后端服务 chunked 性能问题荐 ', '', 'http://blog.51cto.com/wangqingpei557/2044336', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('99', '编程语言经典小例题—Python版【持续更新】荐 ', '', 'http://blog.51cto.com/zero01/2043709', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('100', '使用Python编写一个渗透测试探测器荐 ', '', 'http://blog.51cto.com/6230973/1983975', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('101', '对高并发流量控制的一点思考荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2066683', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('102', 'Token 认证的来龙去脉荐 ', '', 'http://blog.51cto.com/jamesfancy/2065665', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('103', '程序员不可不知的Linux性能工具荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2064932', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('104', '深入浅出Nginx荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2064524', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('105', '对缓存击穿的一点思考荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2062192', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('106', '轻松学DDD之二：如何高效消化知识荐 ', '', 'http://blog.51cto.com/wulingdong/2061614', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('107', '分析动态代理给Spring事务埋下的坑荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2059602', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('108', '优秀软件测试工程师必备的8个能力！-（附思维导图）荐 ', '', 'http://blog.51cto.com/13559040/2059204', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('109', '实现一个迷你版的RPC荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2059194', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('110', '前后端分离实践有感荐 ', '', 'http://blog.51cto.com/jamesfancy/2058830', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('111', '冲顶大会APP技术选型及架构设计荐 ', '', 'http://blog.51cto.com/12240152/2057545', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('112', '如何确定线程池大小荐 ', '', 'http://blog.51cto.com/13527416/2056080', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('113', 'APM入门与实战荐 ', '', 'http://blog.51cto.com/jooben/2053453', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('114', '轻松学DDD之一：模型驱动设计荐 ', '', 'http://blog.51cto.com/wulingdong/2052820', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('115', '中式Dao开源框架(micro-dao)荐 ', '', 'http://blog.51cto.com/13442277/2052341', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('116', '从 ELK 到 EFK 演进荐 ', '', 'http://blog.51cto.com/13527416/2051506', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('117', 'ActiveMQ队列消息积压问题调研荐 ', '', 'http://blog.51cto.com/winters1224/2049432', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('118', '基于 Elasticsearch 搜索平台荐 ', '', 'http://blog.51cto.com/13527416/2049173', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('119', '分布式系统实战荐 ', '', 'http://blog.51cto.com/yaocoder/2047001', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('120', '后端服务性能压测实践荐 ', '', 'http://blog.51cto.com/wangqingpei557/2046649', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('121', '2013.11.9 总结考试心得体会(软考网规)荐 ', '', 'http://blog.51cto.com/junipers/1329860', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('122', '软考高级，考网规还是考项管？荐 ', '', 'http://blog.51cto.com/yttitan/1325085', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('123', '如何养成微软认证讲师（MCT）荐 ', '', 'http://blog.51cto.com/ghostlan/1302783', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('124', '软考网工难点分析之三 CRC循环冗余校验荐 ', '', 'http://blog.51cto.com/yttitan/1204604', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('125', '【我的软考之路】记大学历程（1）荐 ', '', 'http://blog.51cto.com/imperial/950176', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('126', '堕落的十年-软考之路荐 ', '', 'http://blog.51cto.com/xmmartin/940740', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('127', '那些年，我所经历的软考荐 ', '', 'http://blog.51cto.com/mipengsmile/929390', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('128', '【246期门诊集锦】专家解析：软考重点难点及应试技巧荐 ', '', 'http://blog.51cto.com/doctor/878130', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('129', '我的软考历程（二）网络规划师荐 ', '', 'http://blog.51cto.com/tangfangxiao/775799', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('130', '关于我的IT之路与51CTO荐 ', '', 'http://blog.51cto.com/szhn2011/711443', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('131', '再谈软考网工荐 ', '', 'http://blog.51cto.com/itauv/646791', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('132', '软考的心得荐 ', '', 'http://blog.51cto.com/wangqingpei557/600322', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('133', '每个程序员都应该经历一次软考荐 ', '', 'http://blog.51cto.com/wangqingpei557/588484', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('134', '我的学习工作经历，一个园林专业中专毕业生的IT之路荐 ', '', 'http://blog.51cto.com/agilelab/571342', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('135', '软考，我该怎么对待你荐 ', '', 'http://blog.51cto.com/favccxx/571073', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('136', '老男孩之五年软考路荐 ', '', 'http://blog.51cto.com/18617/470478', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('137', '软考网络工程师总结荐 ', '', 'http://blog.51cto.com/liu008qing/461637', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('138', '走在软考的小路上荐 ', '', 'http://blog.51cto.com/jiangxuezhi/422686', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('139', '网工老弗经验谈——网络工程师考试，你是否具备基础荐 ', '', 'http://blog.51cto.com/police/400170', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('140', '小谈软考网工荐 ', '', 'http://blog.51cto.com/itauv/371546', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('141', 'Redis 数据结构与内存管理策略（上）荐 ', '', 'http://blog.51cto.com/wangqingpei557/2063316', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('142', 'DBA的40条军规荐 ', '', 'http://blog.51cto.com/hcymysql/2061451', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('143', 'ORA-00600 kcratr_nab_less_than_odr 处理小计荐 ', '', 'http://blog.51cto.com/hsbxxl/2060888', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('144', 'SQL自动审核-自助上线平台荐 ', '', 'http://blog.51cto.com/hcymysql/2053798', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('145', '避免MySQL替换逻辑SQL的坑爹操作荐 ', '', 'http://blog.51cto.com/suifu/2049455', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('146', '3分钟看完MongoDB3.6新特性荐 ', '', 'http://blog.51cto.com/suifu/2047437', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('147', '利用binlog2sql快速闪回误删除数据 - 别拿豆包不当干粮荐 ', '', 'http://blog.51cto.com/sumongodb/2046073', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('148', 'MariaDB ColumnStore一些限制和BUG总结荐 ', '', 'http://blog.51cto.com/hcymysql/1980452', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('149', 'Postgres-XL 集群详细创建步骤荐 ', '', 'http://blog.51cto.com/hsbxxl/1980423', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('150', '3分钟完成MongoDB2.6升级3.0荐 ', '', 'http://blog.51cto.com/suifu/1978466', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('151', 'MySQL数据库root账户密码忘记两种处理方法（保有效）荐 ', '', 'http://blog.51cto.com/lizhenliang/1977881', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('152', 'MySQL 组复制介绍荐 ', '', 'http://blog.51cto.com/ylw6006/1971139', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('153', 'Oracle RAC集群本地时间和远程时间不一致？荐 ', '', 'http://blog.51cto.com/renzhiyuan/1968653', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('154', 'MySQL危险而诡异的update操作和惊魂5分钟荐 ', '', 'http://blog.51cto.com/suifu/1967542', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('155', '想要Freestyle？先要遵守 MySQL 这十大铁律！荐 ', '', 'http://blog.51cto.com/sumongodb/1965216', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('156', '浅析开源数据库MySQL架构荐 ', '', 'http://blog.51cto.com/13031991/1964993', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('157', '一次核心线上磁盘差点爆满坑人事件...荐 ', '', 'http://blog.51cto.com/renzhiyuan/1959660', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('158', 'MySQL主从延迟解决方案荐 ', '', 'http://blog.51cto.com/sumongodb/1958723', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('159', '不专业的“漏洞扫描软件”，是否吓到你？荐 ', '', 'http://blog.51cto.com/hsbxxl/1958595', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('160', '企业主流MySQL高可用集群架构三部曲之PXC荐 ', '', 'http://blog.51cto.com/sumongodb/1956086', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('161', 'Linux SSH密码暴力破解技术及攻击实战荐 ', '', 'http://blog.51cto.com/simeon/2066269', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('162', '“借刀杀人”一次恶意解析带来的网站瘫痪！荐 ', '', 'http://blog.51cto.com/storysky/2065158', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('163', '网络攻击肆虐-给你的网络设备来套防弹衣吧！荐 ', '', 'http://blog.51cto.com/gingerbeer/2063500', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('164', '浅谈同城双中心的网络部署模型荐 ', '', 'http://blog.51cto.com/chenpengpeng/2063280', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('165', '无线网络部署与规划要点及案例分享荐 ', '', 'http://blog.51cto.com/ciscolulu/2062801', '5', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('166', '趣谈网络工程师面试大全系列1，用图文和段子的方式来解决网工面试问题荐 ', '', 'http://blog.51cto.com/enderjoe/2056716', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('167', '一次垃圾邮件的分析荐 ', '', 'http://blog.51cto.com/skytina/2051426', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('168', 'Facebook Open/R，新一代路由平台与网工的未来荐 ', '', 'http://blog.51cto.com/gingerbeer/2050382', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('169', '利用文件上传漏洞渗透某传销服务器荐 ', '', 'http://blog.51cto.com/simeon/2050056', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('170', 'Gartner：2017年SIEM（安全信息与事件管理）市场分析荐 ', '', 'http://blog.51cto.com/yepeng/2048155', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('171', '如何借助Anycast技术拯救运维工程师的睡眠？荐 ', '', 'http://blog.51cto.com/gingerbeer/2045214', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('172', '再谈SIEM和安全管理平台项目的失败因素（1）荐 ', '', 'http://blog.51cto.com/yepeng/1983449', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('173', 'MySQL数据库渗透及漏洞利用总结荐 ', '', 'http://blog.51cto.com/simeon/1981572', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('174', 'IT设备的救命稻草-如何正确构建OOB带外网络荐 ', '', 'http://blog.51cto.com/gingerbeer/1980615', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('175', 'TCP-MSS, PMTU 详解- MTU工具解析与常见问题汇总-下篇荐 ', '', 'http://blog.51cto.com/gingerbeer/1976737', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('176', 'OpenFire后台插件上传获取webshell及免密码登录linux服务器荐 ', '', 'http://blog.51cto.com/simeon/1975430', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('177', '踢走绊脚石，MTU解析与常见问题汇总-上篇荐 ', '', 'http://blog.51cto.com/gingerbeer/1970602', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('178', '思路很重要！不同厂商Spanning-tree对接案例思考荐 ', '', 'http://blog.51cto.com/gingerbeer/1967718', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('179', '回车恐惧症？13个 JUNOS 技巧助你轻松无忧配置网络荐 ', '', 'http://blog.51cto.com/gingerbeer/1965480', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('180', '[冇眼睇]揭秘地下&#39;se&#39;情&#39;诱&#39;导网站，上车吧！荐 ', '', 'http://blog.51cto.com/chenxinjie/1965198', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('181', '一个单词统计的实例，怎样通过MapReduce完成排序？荐 ', '', 'http://blog.51cto.com/tcit1987/1961302', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('182', '机器学习实战精读--------决策树荐 ', '', 'http://blog.51cto.com/9399369/1956936', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('183', '有关微刊的一些想法荐 ', '', 'http://blog.51cto.com/lazycai/926774', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('184', '让你的产品像人一样去思考荐 ', '', 'http://blog.51cto.com/19881205/762072', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('185', '智能搜索的问题所在荐 ', '', 'http://blog.51cto.com/wenbomao/143911', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('186', 'Java版战棋（SLG）游戏AI及寻径处理入门荐 ', '', 'http://blog.51cto.com/cping1982/133392', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('187', 'Android带有粘性头部的ScrollView荐 ', '', 'http://blog.51cto.com/7091572/2066690', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('188', 'java动态代理机制--那些让你面试脱颖而出的技能荐 ', '', 'http://blog.51cto.com/13586365/2065317', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('189', 'Android View 的工作流程和原理荐 ', '', 'http://blog.51cto.com/13562787/2062858', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('190', 'iOS开发，Bluetooth你应该了解一些！荐 ', '', 'http://blog.51cto.com/13533483/2050346', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('191', '关于Swift中Struct，Class和Enum的哪些事儿荐 ', '', 'http://blog.51cto.com/13533483/2050344', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('192', 'iOS+PHP实现登录功能荐 ', '', 'http://blog.51cto.com/winners/2048908', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('193', 'iOS开发之0行代码加载NSBundle中的@2x与@3x图片荐 ', '', 'http://blog.51cto.com/965678322/1982197', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('194', 'Android Studio 第五十四期 - 超级巨图Glide3.7和Glide4.1.1优化加载方案荐 ', '', 'http://blog.51cto.com/liangxiao/1966795', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('195', '移动动态化方案在蜂鸟的架构演进（含React Native与Weex对比）荐 ', '', 'http://blog.51cto.com/wangxy/1957349', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('196', 'Android Studio - 第四十八期 模块ViewPager+Fragment荐 ', '', 'http://blog.51cto.com/liangxiao/1957026', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('197', 'Android Studio - 第四十六期 不会ANR的轮播写法荐 ', '', 'http://blog.51cto.com/liangxiao/1953066', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('198', 'Android Studio - 第四十五期 Gradle manifestPlaceholders荐 ', '', 'http://blog.51cto.com/liangxiao/1951381', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('199', '自定义菜单，仿优酷菜单荐 ', '', 'http://blog.51cto.com/cm0425/1944222', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('200', 'iOS 裁剪圆形图像并显示(类似于微信头像)荐 ', '', 'http://blog.51cto.com/winners/1941955', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('201', '微信公众平台网页开发实战--1.微信分享一个网页到朋友圈荐 ', '', 'http://blog.51cto.com/woiwoi/1937305', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('202', 'Js判断H5上下滑动方向及滑动到顶部和底部判断荐 ', '', 'http://blog.51cto.com/12351235/1934868', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('203', '十个网络优化改造案例之一 交换机由单机改造为双机热备荐 ', '', 'http://blog.51cto.com/wzjxzht/1932251', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('204', '混合式app ionic2.x 手动搭建开发环境教程分享(nodejs,jdk,ant,androidsdk)荐 ', '', 'http://blog.51cto.com/liuzhiying/1914690', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('205', 'docker registry接入ceph Swift API 荐 ', '', 'http://blog.51cto.com/bingdian/1893658', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('206', 'nagios报错：./stdio.h:456:1: error: &#39;gets&#39; undeclared here (not in a function)荐 ', '', 'http://blog.51cto.com/ityunwei2017/1893212', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('207', 'cocos2d-x 3.8.1的骨骼动画加载方法addArmatureFileInfo仍然存在问题荐 ', '', 'http://blog.51cto.com/zhuxianzhong/1713824', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('208', 'Cocos2d-x 3.8.1+Cocos Studio 2.3.2捉虫记之控制场景文件中的骨骼动画荐 ', '', 'http://blog.51cto.com/zhuxianzhong/1713250', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('209', '【UNITY3D 游戏开发之八】Unity编译到iPhone运行 Collider 无法正常触发事件解决方案荐 ', '', 'http://blog.51cto.com/xiaominghimi/1654509', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('210', 'Cocos2d-x《雷电大战》-双层地图无限滚动荐 ', '', 'http://blog.51cto.com/linbingwen/1615804', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('211', 'Cocos2d-x《赵云要格斗》--虚拟摇杆控制精灵上下左右运动荐 ', '', 'http://blog.51cto.com/linbingwen/1615530', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('212', 'Unity3D静态对象优化系列二荐 ', '', 'http://blog.51cto.com/jxwgame/1605373', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('213', 'Unity3D移动端海水的实时绘制荐 ', '', 'http://blog.51cto.com/jxwgame/1597183', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('214', 'Lua(8) ——Cocos之_Lua调用C++类荐 ', '', 'http://blog.51cto.com/shahdza/1568051', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('215', 'cocos2dx[3.2](19)——裁剪节点ClippingNode荐 ', '', 'http://blog.51cto.com/shahdza/1561937', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('216', 'cocos2d-x CCArray使用中避免出现野指针问题荐 ', '', 'http://blog.51cto.com/zhuxianzhong/1550989', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('217', ' 【挨踢人物传】关东升：成功的路上很寂寞，贵在坚持（第20期）荐 ', '', 'http://blog.51cto.com/51ctobbs/1546628', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('218', '[Unity3D]Unity4新的动画系统Mecanim荐 ', '', 'http://blog.51cto.com/dingxiaowei/1434682', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('219', '[Unity3D+算法]一小时做个2048荐 ', '', 'http://blog.51cto.com/dingxiaowei/1433716', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('220', '【开源计划】 kzfont——bmfont 的 texturepacker 导出插件荐 ', '', 'http://blog.51cto.com/kingzeus/1404848', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('221', ' [Unity3D]自制UnityForAndroid二维码扫描插件荐 ', '', 'http://blog.51cto.com/dingxiaowei/1404352', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('222', '【UNITY3D 游戏开发之二】高级组件(GUI:LABEL、SCROLLVIEW、TEXTFIELD…等)入门篇荐 ', '', 'http://blog.51cto.com/xiaominghimi/1403085', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('223', 'Cocos2d-x 3.0正式版及android环境搭建详细教程荐 ', '', 'http://blog.51cto.com/xuzhiwei/1401434', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('224', '【cocos2d-x从c++到js】22：使用非侵入方式扩展UI系统接口的举例荐 ', '', 'http://blog.51cto.com/goldlion/1401261', '6', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('225', '【cocos2d-x从c++到js】21：使用CocosCode调试JSB荐 ', '', 'http://blog.51cto.com/goldlion/1390167', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('226', '【cocos2d-x从c++到js】20：脚本语言风格的JS代码荐 ', '', 'http://blog.51cto.com/goldlion/1388618', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('227', 'IPC之消息队列·即时通讯小程序（一）荐 ', '', 'http://blog.51cto.com/13097817/2051365', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('228', 'OpenWRT嵌入式Linux故障排除一例荐 ', '', 'http://blog.51cto.com/slaytanic/1601469', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('229', '&lt;家庭物联网&gt;与&lt;移动互联网&gt;衔接 的架构设计与实践荐 ', '', 'http://blog.51cto.com/8204129/1341363', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('230', '嵌入式Linux开发环境中双网卡使用过程杂记荐 ', '', 'http://blog.51cto.com/enjoymcu/1341323', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('231', '高老师的&lt;集装箱&gt;思维，2008年初预测Android蓬勃发展荐 ', '', 'http://blog.51cto.com/8204129/1340821', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('232', '物联网时代更要注意信息安全荐 ', '', 'http://blog.51cto.com/hexiaini235/1335694', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('233', '浅析ARM公司在物联网领域的战略布局荐 ', '', 'http://blog.51cto.com/yfsoft/1333166', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('234', ' ARM开发板 嵌入式Linux 修改开机启动LOGO荐 ', '', 'http://blog.51cto.com/yiluohuanghun/1118598', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('235', '【物联网中间件平台-05】YFIOs策略开发指南荐 ', '', 'http://blog.51cto.com/yfsoft/1108715', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('236', 'IB《智能建筑与城市信息》2012布线发展趋势采访稿荐 ', '', 'http://blog.51cto.com/rosaphdcs/1085387', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('237', '找工作总结荐 ', '', 'http://blog.51cto.com/liangqiu/1080942', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('238', '【物联网智能网关-12】以网关为核心，互联网为基础构建物联网平台荐 ', '', 'http://blog.51cto.com/yfsoft/1053368', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('239', '驾驭你的“职场布朗运动”荐 ', '', 'http://blog.51cto.com/yunli/1049286', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('240', 'Android应用开发以及设计思想深度剖析（4）荐 ', '', 'http://blog.51cto.com/21cnbao/1006631', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('241', '【物联网智能网关-10】构建.NET MF平台下的流式驱动模型荐 ', '', 'http://blog.51cto.com/yfsoft/1004388', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('242', '《Essential Linux Device Drivers》中文版第1章 荐 ', '', 'http://blog.51cto.com/21cnbao/995302', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('243', '【物联网智能网关-09】CAN总线通信演示(TinyGUI触屏)荐 ', '', 'http://blog.51cto.com/yfsoft/966558', '2', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('244', '学嵌入式Linux软件开发需要的知识荐 ', '', 'http://blog.51cto.com/yiluohuanghun/949597', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('245', '对新手学习嵌入式软件开发的基本建议荐 ', '', 'http://blog.51cto.com/yiluohuanghun/942761', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('246', '2012 ARM嵌入式开发应用研讨会杂谈荐 ', '', 'http://blog.51cto.com/yfsoft/935630', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('247', 'WSFC 维护模式操作粒度控制荐 ', '', 'http://blog.51cto.com/wzde2012/2066235', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('248', 'PoW挖矿算法原理及其在比特币、以太坊中的实现荐 ', '', 'http://blog.51cto.com/11821908/2059711', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('249', 'WSFC2016 延伸群集荐 ', '', 'http://blog.51cto.com/wzde2012/2049922', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('250', 'WSFC多站点与灾难恢复荐 ', '', 'http://blog.51cto.com/wzde2012/1976857', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('251', '一个简单的主机管理模拟程序荐 ', '', 'http://blog.51cto.com/beanxyz/1967122', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('252', 'WSFC2016 跨站点运行状况检测荐 ', '', 'http://blog.51cto.com/wzde2012/1965135', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('253', '数据驱动到底是什么？如何驱动，又能驱动什么？荐 ', '', 'http://blog.51cto.com/itrustdata/1961018', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('254', '华为5700系列交换机常用配置示例荐 ', '', 'http://blog.51cto.com/wangchunhai/1959724', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('255', '最稳定的Nginx绿色环境，可无限自定义PHP和mysql版本、同时运行N个版本荐 ', '', 'http://blog.51cto.com/lccee/1945799', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('256', '使用USB直接方式解决ESXi识别加密狗的问题荐 ', '', 'http://blog.51cto.com/wangchunhai/1942197', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('257', '直击传统运维痛点，京东金融智能运维实践荐 ', '', 'http://blog.51cto.com/wangxy/1941850', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('258', 'centos6.5下使用lnmp架构安装nextcloud云盘荐 ', '', 'http://blog.51cto.com/thedream/1940531', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('259', '基于CentOS7.3构建企业级Vsftpd文件服务器荐 ', '', 'http://blog.51cto.com/wgkgood/1937458', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('260', '分布式文件系统--------GlusterFS最佳实战荐 ', '', 'http://blog.51cto.com/lisea/1937242', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('261', '新浪微博基于混合云的PHP服务化与弹性扩容荐 ', '', 'http://blog.51cto.com/wangxy/1936673', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('262', 'RHEL7构建Rsync数据同步服务器荐 ', '', 'http://blog.51cto.com/manual/1935165', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('263', '使用python实现统计Nginx进程所占用的物理内存荐 ', '', 'http://blog.51cto.com/270142877/1934859', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('264', '阿里云常见问题分析与解答荐 ', '', 'http://blog.51cto.com/hujiangtao/1934825', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('265', 'Kafka-manager部署与测试（完整）荐 ', '', 'http://blog.51cto.com/kaliarch/1934696', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('266', 'HP P2000 RAID-5两块盘离线的数据恢复报告荐 ', '', 'http://blog.51cto.com/sun510/1933389', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('267', 'Microsoft Project Honolulu上手体验荐 ', '', 'http://blog.51cto.com/wzde2012/1968212', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('268', '中控考勤机二次开发小记荐 ', '', 'http://blog.51cto.com/t4513/1961609', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('269', 'Powershell 修改Office365和AD账户荐 ', '', 'http://blog.51cto.com/beanxyz/1944991', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('270', 'corosync+pacemaker+http高可用操作手记荐 ', '', 'http://blog.51cto.com/renzhiyuan/1942676', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('271', '一位架构师用服务打动客户的故事荐 ', '', 'http://blog.51cto.com/allen686/1936996', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('272', '案例 - 一个IP切换引发的数据不一致荐 ', '', 'http://blog.51cto.com/dadaman/1930003', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('273', 'RHEL/CentOS 6/7重置root用户密码&mdash;&mdash;方法与过程荐 ', '', 'http://blog.51cto.com/dgd2010/1903006', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('274', 'Ansible批量部署zabbix-agent荐 ', '', 'http://blog.51cto.com/215687833/1897506', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('275', '主流区块链技术特点及Fabric V0.6&V1.0版本特点荐 ', '', 'http://blog.51cto.com/newthink/1897379', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('276', '数据仓库的未来 MariaDB ColumnStore荐 ', '', 'http://blog.51cto.com/suifu/1886417', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('277', '如何激活已过试用期的System Center 2012 Operations Manager荐 ', '', 'http://blog.51cto.com/wenzhongxiang/1886179', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('278', 'VBS获取指定目录下最新文件拷贝然后以当前日期命名荐 ', '', 'http://blog.51cto.com/gaowenlong/1884458', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('279', 'Powershell管理系列（三十八）PowerShell操作之文件查找和操作 荐 ', '', 'http://blog.51cto.com/yuntcloud/1879445', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('280', '运维监控平台之zabbix详解2荐 ', '', 'http://blog.51cto.com/huaxin/1839313', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('281', '面试 企业shell编程基础问题解决实践（亲测）荐 ', '', 'http://blog.51cto.com/ycentos/1827378', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('282', 'RedHat 7.2 KVM通过V2V迁移VMware的虚拟机荐 ', '', 'http://blog.51cto.com/jiangjianlong/1812311', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('283', '破墙而入看电视荐 ', '', 'http://blog.51cto.com/sery/1755451', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('284', 'Corosync+Pacemaker+DRBD+NFS高可用实例配置荐 ', '', 'http://blog.51cto.com/koumm/1738795', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('285', '脑洞文之去火星搞IT!荐 ', '', 'http://blog.51cto.com/3060674/1722269', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('286', '思杰的雄心——软件定义的工作空间荐 ', '', 'http://blog.51cto.com/rickyfang/1705573', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('287', 'Android 仿 PPT 进入动画效果合集荐 ', '', 'http://blog.51cto.com/283859701/1945248', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('288', 'jquery.fileDownload.js插件导出excel荐 ', '', 'http://blog.51cto.com/ciyorecord/1934849', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('289', '使用“一键清理”功能要防止删除WORD文档荐 ', '', 'http://blog.51cto.com/wangchunhai/1930678', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('290', 'Docker compose v3版本构建跨主机容器编排构建wordpress集群荐 ', '', 'http://blog.51cto.com/xiaoluoge/1922134', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('291', '使用Docker swarm构建wordpress集群荐 ', '', 'http://blog.51cto.com/xiaoluoge/1920377', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('292', 'Dockerfile构建LNMP分离环境部署wordpress荐 ', '', 'http://blog.51cto.com/xiaoluoge/1902501', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('293', 'Skype For Business Server 2016 无法共享PPT和白板荐 ', '', 'http://blog.51cto.com/stephen1991/1888692', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('294', 'zabbix企业应用之定时获取监控数据做报表荐 ', '', 'http://blog.51cto.com/dl528888/1877246', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('295', 'Heartbeat-Gui V2 实现HA LAMP 搭建wordpress博客荐 ', '', 'http://blog.51cto.com/sunshineboyszf/1866385', '4', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('296', '解决Excel打开UTF-8编码的CSV文件乱码的问题荐 ', '', 'http://blog.51cto.com/ultrasql/1851117', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('297', 'Powershell AWS 自动化管理 (11) - 创建一个高可用的WordPress博客（中）荐 ', '', 'http://blog.51cto.com/beanxyz/1827752', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('298', 'Powershell 创建炫丽美观的Html报表荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;我们通过PowerShell可以获取各种信息，如何保存这些获取的信息呢？最简单的方法是保存为csv或者是xml文件，这样可以轻松的导入导出。不过这两种文件在人眼的可读性上都不够美观。xml从程序的角度非常方便，但是看起来很不舒服；同样的，尽管csv文件可以通过Excel打开，但是最重要的一点，他没有颜色！对于很多习惯把Excel表格标注的五颜六色的人来说，csv的世界实在是太昏暗了。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;那么直接保存为XLSX文件如何呢？传统的PowerShell对Office的支持很不好，只能通过ComObject来操作。但是微软官方直接告诉你这种方式有bug，很慢而且很不稳定。幸运的是，最新的PowerShell 5可以直接下载Excel的模块了，这是直接通过.Net的一个dll文件来调用的，迅速稳定，可以说是一个巨大的福音。有兴趣的可以从PowerShell Gallery下载使用。他可以直接生成报表甚至是图表。&lt;/p&gt;&lt;p&gt;具体的使用方法可以参考&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/heyscriptingguy/2015/11/25/introducing-the-powershell-excel-module-2/&quot; target=&quot;_blank&quot;&gt;https://blogs.technet.microsoft.com/heyscriptingguy/2015/11/25/introducing-the-powershell-excel-module-2/&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;本文主要是关注第三种方式，把结果保存为HTML的网页格式。把PS对象转换成HTML对象并不是什么新东西，PS自带的ConvertTo-HTML命令就能做到，不过这个命令的性能不够强，只是泛泛的生成一个结果，并不能根据条件对一些特定的表格或者列表设定格式或者颜色，因此又有很多人开发了自己的高级函数。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;首先来看一个很传统的笨方法。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;比如说下面截取自某网友提供的片段&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s5.51cto.com/wyfs02/M00/82/72/wKioL1dVYgHDh3y5AAAVVQtU4CM380.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s5.51cto.com/wyfs02/M00/82/72/wKioL1dVYgHDh3y5AAAVVQtU4CM380.png&quot; title=&quot;QQ图片20160606213413.png&quot; alt=&quot;wKioL1dVYgHDh3y5AAAVVQtU4CM380.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;这种方法是通过一个一个的表格单元硬写成HTML的格式。首先这就违反了一个编写PowerShell function的基本原则，每一个function的输出对象应该有且只有一个，获取对象和输出对象的方式应该属于不同的function，很明显，上面的例子把获取对象和输出对象强行的拧在一个地方实现了，不仅混乱而且写的很难看。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;PowerShell本身具有一个简单但是很实用的命令 ConvertTo-Htm，可以把整个对象转换成HTML格式。事实上，虽然很多人诟病他不够强大，作为基本的功能他已经可以实现一些漂亮的界面了。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;比如说 我首先定义一个简单的style，然后执行一个function获取指定计算机的磁盘信息，转换成Html然后保存&lt;/p&gt;&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;$style=@&quot; &amp;lt;style&amp;gt; BODY{background-color:Lavender&amp;nbsp;;} TABLE{border-width:&amp;nbsp;1px;border-style:&amp;nbsp;solid;border-color:&amp;nbsp;black;border-collapse:&amp;nbsp;collapse;} TH{border-width:&amp;nbsp;1px;padding:&amp;nbsp;0px;border-style:&amp;nbsp;solid;border-color:&amp;nbsp;black;b ackground-color:thistle} TD{border-width:&amp;nbsp;1px;padding:&amp;nbsp;0px;border-style:&amp;nbsp;solid;border-color:&amp;nbsp;black;background-color:PaleGoldenrod}&amp;lt;/style&amp;gt; &quot;@ Get-DiskInfo&amp;nbsp;-computername&amp;nbsp;yli-ise&amp;nbsp;|&amp;nbsp;ConvertTo-Html&amp;nbsp;-Body&amp;nbsp;&quot;&amp;lt;H1&amp;gt;DiskInfo&amp;lt;/H1&amp;gt;&quot;&amp;nbsp;-Head&amp;nbsp;$style&amp;nbsp;|&amp;nbsp;out-file&amp;nbsp;C:	empdisk.html invoke-item&amp;nbsp;c:	empdisk.html&lt;/pre&gt;&lt;p&gt;效果如下所示&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M02/82/73/wKiom1dVYrHD-nE0AACIEOvnLXA686.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M02/82/73/wKiom1dVYrHD-nE0AACIEOvnLXA686.png&quot; style=&quot;float:none;&quot; title=&quot;1.PNG&quot; alt=&quot;wKiom1dVYrHD-nE0AACIEOvnLXA686.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;这种方式可以通过指定head或者css文件生成美轮美奂的Html效果，不过很明显的缺点是，我无法指定具体某一个单元格的效果。这种默认的命令只能指定一个整体的表格的效果，那么怎么破呢？&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;第一个方式是直接修改现有的Html文件。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;已经有人写了一个现成的function，下载之后直接调用就行了&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://community.spiceworks.com/scripts/show/2450-change-cell-color-in-html-table-with-powershell-set-cellcolor&quot; target=&quot;_blank&quot;&gt;https://community.spiceworks.com/scripts/show/2450-change-cell-color-in-html-table-with-powershell-set-cellcolor&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;比如说，我在上面的例子里面希望把剩余空间低于20G的都标红，那么可以做下面的简单修改即可&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;Get-DiskInfo&amp;nbsp;-computername&amp;nbsp;yli-ise&amp;nbsp;|&amp;nbsp;ConvertTo-Html&amp;nbsp;-Body&amp;nbsp;&quot;&amp;lt;H1&amp;gt;DiskInfo&amp;lt;/H1&amp;gt;&quot;&amp;nbsp;-Head&amp;nbsp;$style&amp;nbsp;| Set-CellColor&amp;nbsp;-Property&amp;nbsp;FreeSpace&amp;nbsp;-color&amp;nbsp;red&amp;nbsp;-filter&amp;nbsp;&quot;FreeSpace&amp;nbsp;-lt&amp;nbsp;20&quot;&amp;nbsp;|&amp;nbsp;out-file&amp;nbsp;C:	empdisk.html&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;效果如下&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/82/73/wKiom1dVYqaz4t2pAACIUIxQ5x4702.png&quot; style=&quot;white-space:normal;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s3.51cto.com/wyfs02/M00/82/73/wKiom1dVYqaz4t2pAACIUIxQ5x4702.png&quot; title=&quot;2.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1dVYqaz4t2pAACIUIxQ5x4702.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;上面这种修改html文件的方式比较简单容易，另外还可以直接生成对应的html文件。这样的高级函数网上也有好几个版本，不过目前公认比较好的是 Jon David大神写的 ConvertTo-EnhancedHtmlFragment和ConvertTo-EnhancedHtml 两个高级function。ps5的话 这个模块可以直接下载安装。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.powershellgallery.com/packages/EnhancedHTML2/2.0&quot; target=&quot;_blank&quot;&gt;https://www.powershellgallery.com/packages/EnhancedHTML2/2.0&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Jon自己在powershell.org论坛上还专门出了一本免费的电子书来解释如何使用这两个函数。不过这个论坛最近改版弄得面目全非，很多文章不知道跑哪里去了。豆子之前下载过，大概花了1个半小时来看这本书电子书的案例和两个function的源代码，基本理解了怎么使用。 简单的说，自己先定义一个css以方便后面某个单元格或者行或者表列调用，然后通过ConvertTo-Enhancedhtmlfragment生成对应的HTML块，这个HTML块是自己根据各种条件定义颜色，类型等等定义hash表转换而成的HTML文件，每一个tag对应的效果其实是调用最开始在css中定义的class；最后所有的HTML块放一起，通过ConvertTo-EnhancedHtml 生成对应的HTML文件。建议耐心的通读一遍例子，然后在看看对应function的源代码，这样才能知道定义hash表的时候到底应该提供什么内容。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;下面来个简单的例子。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;我直接导入某用户信息列表，这个是我之前通过Get-ADUser获取的。然后我把senior（高级）职务的都标成绿色，Rapp部门的标成红色，转换成Html输出，奇偶行交错更改颜色&lt;/p&gt;&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;$style2&amp;nbsp;=&amp;nbsp;@&quot; &amp;lt;style&amp;gt; body&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:#333333; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-family:Calibri,Tahoma; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-size:&amp;nbsp;10pt; } h1&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;text-align:center; } h2&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border-top:1px&amp;nbsp;solid&amp;nbsp;#666666; } th&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-weight:bold; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:#eeeeee; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;background-color:#333333; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cursor:pointer; } .odd&amp;nbsp;&amp;nbsp;{&amp;nbsp;background-color:#ffffff;&amp;nbsp;} .even&amp;nbsp;{&amp;nbsp;background-color:#dddddd;&amp;nbsp;} .paginate_enabled_next,&amp;nbsp;.paginate_enabled_previous&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cursor:pointer;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border:1px&amp;nbsp;solid&amp;nbsp;#222222;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;background-color:#dddddd;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;padding:2px;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;margin:4px; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border-radius:2px; } .paginate_disabled_previous,&amp;nbsp;.paginate_disabled_next&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:#666666;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cursor:pointer; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;background-color:#dddddd;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;padding:2px;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;margin:4px; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border-radius:2px; } .dataTables_info&amp;nbsp;{&amp;nbsp;margin-bottom:4px;&amp;nbsp;} .sectionheader&amp;nbsp;{&amp;nbsp;cursor:pointer;&amp;nbsp;} .sectionheader:hover&amp;nbsp;{&amp;nbsp;color:red;&amp;nbsp;} .grid&amp;nbsp;{&amp;nbsp;width:100%&amp;nbsp;} .red&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:red; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-weight:bold; }&amp;nbsp; .green{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:green; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-weight:bold; } &amp;lt;/style&amp;gt; &quot;@ $params&amp;nbsp;=&amp;nbsp;@{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;As&#039;=&#039;Table&#039;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;PreContent&#039;=&#039;&amp;lt;h2&amp;gt;Users&amp;nbsp;List&amp;lt;/h2&amp;gt;&#039;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;EvenRowCssClass&#039;=&#039;even&#039;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;OddRowCssClass&#039;=&#039;odd&#039; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;TableCssClass&#039;=&#039;grid&#039;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;Properties&#039;=&#039;Name&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@{n=&#039;Title&#039;;e={$_.title};css={if($_.title&amp;nbsp;-like&amp;nbsp;&quot;*Senior*&quot;){&#039;green&#039;}}}, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@{n=&#039;Email&#039;;e={$_.primarysmtp}}, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;Mobile&#039;,&#039;Extension&#039;,&#039;OU&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@{n=&#039;Company&#039;;e={$_.company};css={if($_.company&amp;nbsp;-eq&amp;nbsp;&quot;Rapp&quot;){&#039;red&#039;}}} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $user=import-csv&amp;nbsp;C:scriptsusers.csv&amp;nbsp;|&amp;nbsp;ConvertTo-EnhancedHTMLFragment&amp;nbsp;@params &amp;nbsp;$params&amp;nbsp;=&amp;nbsp;@{&#039;CssStyleSheet&#039;=$style2; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;Title&#039;=&quot;User&amp;nbsp;Lists&quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;PreContent&#039;=&quot;&amp;lt;h1&amp;gt;System&amp;nbsp;Report&amp;nbsp;for&amp;nbsp;Users&amp;lt;/h1&amp;gt;&quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;HTMLFragments&#039;=@($user); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;ConvertTo-EnhancedHTML&amp;nbsp;@params&amp;nbsp;| &amp;nbsp;Out-File&amp;nbsp;-FilePath&amp;nbsp;C:	emp	t.html&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;结果如下&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s5.51cto.com/wyfs02/M02/82/73/wKiom1dVaOLRllknAAJ9ciL-0Qo651.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s5.51cto.com/wyfs02/M02/82/73/wKiom1dVaOLRllknAAJ9ciL-0Qo651.png&quot; title=&quot;3.PNG&quot; alt=&quot;wKiom1dVaOLRllknAAJ9ciL-0Qo651.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;测试成功。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;通过上面的方式，我可以灵活的变通，把我获取的结果转换成更精致的网页界面展现出来。&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/beanxyz/1786712', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('299', 'Amazon aws云主机安装配置pptp，轻松实现FQ荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;一、使用需求&lt;/p&gt;&lt;p&gt;公司是国外网站，各种业务联系与推广都需要FQ,在众多FQ软件中，找到一款稳定的软件不容易，使用openvpn请参考：&lt;/p&gt;&lt;p&gt;http://linuxtech.blog.51cto.com/3670088/1739943&lt;/p&gt;&lt;p&gt;本文主要针对pptp实现FQ做讲解，pptp配置简单且稳定，是你FQ的必备良药。&lt;/p&gt;&lt;p&gt;aws实例创建请参考：&lt;/p&gt;&lt;p&gt;http://linuxtech.blog.51cto.com/3670088/1759323&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;二、PPTP简介&lt;/p&gt;&lt;p&gt;PPTP（Point to Point Tunneling Protocol），即点对点隧道协议。该协议是在PPP协议的基础上开发的一种新的增强型安全协议，支持多协议虚拟专用网（VPN），可以通过密码验证协议（PAP）、可扩展认证协议（EAP）等方法增强安全性。可以使远程用户通过拨入ISP、通过直接连接Internet或其他网络安全地访问企业网。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;三、安装版本说明&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1、系统版本：Red HatEnterprise Linux Server release 7.2&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2、ppp版本：ppp-2.4.5-33&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3、pptp版本：pptpd-1.4.0-3&lt;/p&gt;&lt;p style=&quot;text-indent:0;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;四、前期检查&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1、检查系统内核是否支持MPPE&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;modprobe ppp-compress-18 &amp;amp;&amp;amp; echo OK&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;显示OK说明系统支持MPPE&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2、检查系统是否开启TUN/TAP支持&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cat /dev/net/tun&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cat: /dev/net/tun: 文件描述符处于错误状态&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果这条指令显示结果为下面的文本，则表明通过&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cat: /dev/net/tun: File descriptor in bad state&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3、检查PPP是否支持MPPE&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strings &#039;/usr/sbin/pppd&#039;|grep -i mppe|wc -l&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;43&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果以上命令输出为“0”则表示不支持；输出为“30”或更大的数字就表示支持.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-size:20px;font-family:&#039;宋体&#039;;color:#555555;background:#FFFFFF;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;五、安装&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1、安装ppp和iptables &amp;nbsp; &amp;nbsp; #PPTP需要这两个软件包，一般系统自带&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;yum install -y ppp iptables&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2、安装PPTP&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rpm -ivhhttp://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;yum install pptpd&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;六、修改配置&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1、vi &amp;nbsp;/etc/ppp/options.pptpd #编辑，保存&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namepptpd &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #自定义VPN服务器的名称&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#refuse-pap &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #拒绝pap身份验证&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#refuse-chap &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#拒绝chap身份验证&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#refuse-mschap &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#拒绝mschap身份验证&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;require-mschap-v2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #为了最高的安全性，用mschap-v2身份验证&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#require-mppe-128 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #禁止使用128位MPPE加密，启用后会出现访问国内网站缓慢&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ms-dns8.8.8.8 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #设置DNS&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ms-dns8.8.4.4&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;proxyarp &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#启用ARP代理&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#debug &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#关闭debug&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lock&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nobsdcomp&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;novj&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;novjccomp&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nologfd &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#不输入运行信息到stderr&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logfile/var/log/pptpd.log &amp;nbsp; &amp;nbsp; &amp;nbsp;#存放pptpd服务运行的的日志&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:48px;margin-bottom:0;line-height:26px;background:#FFFFFF;&quot;&gt;&lt;span style=&quot;font-size:18px;font-family:Arial, sans-serif;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2、vi/etc/ppp/chap-secrets &amp;nbsp; &amp;nbsp; #编辑，保存&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;username&quot; * password&quot; * &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-size:14px;&quot;&gt;#设置用户名和密码，用“”号包含，第一个*表示限制访问的IP为不限,第二个*表示给该账户分配的IP地址为随机，一个账号一行，可以添加多个账号，添加保存完立即生效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3、vi /etc/pptpd.conf &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #编辑，保存&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;option/etc/ppp/options.pptpd&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logwtmp&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;localip10.10.1.1 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#设置VPN服务器虚拟IP地址&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;remoteip10.10.1.100-200 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #为拨入VPN的用户分配地址段&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:0;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:20px;color:#555555;background:#FFFFFF;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;七、开启系统路由模式&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sysctlnet.ipv4.ip_forward&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;net.ipv4.ip_forward = 0&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vi/etc/sysctl.conf &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#编辑&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;net.ipv4.ip_forward= 1 &amp;nbsp; &amp;nbsp;#找到此行去掉前面#，把0改成1 开启路由模式，如果没有就自行添加&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/sbin/sysctl-p &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#使设置立刻生效&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;八、配置iptables,设置网络地址转换&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; iptables -t nat -A POSTROUTING -oeth0 -j MASQUERADE&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;九、确保服务器重启后服务可用&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; sudo vim/etc/rc.local&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; 在exit 0上面加一行：&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; iptables -t nat-A POSTROUTING -o eth0 -j MASQUERADE&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;十、设置PPTP开机启动&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;servicepptpd start &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #启动pptpd&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;chkconfigpptpd on &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#设置开机启动&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pptpd服务使用的端口是1723，这个端口是系统固定分配的，可以通过查看该端口检查pptpd服务的运行情况。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令：netstat –ntpl&lt;a href=&quot;http://s4.51cto.com/wyfs02/M01/7E/85/wKioL1cDfn-xELlTAAA0CyO5XaE208.png&quot; style=&quot;font-family:Arial, sans-serif;font-size:14px;line-height:26px;text-indent:28px;background-color:rgb(255,255,255);&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s4.51cto.com/wyfs02/M01/7E/85/wKioL1cDfn-xELlTAAA0CyO5XaE208.png&quot; title=&quot;b.png&quot; alt=&quot;wKioL1cDfn-xELlTAAA0CyO5XaE208.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;特别说明：使用aws实例绑定的安全组一定要开放PPTP的端口，否则将导致连接失败。&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;至此PPTP服务端配置完成&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;接下来是客户端的使用说明&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、点击“设置新的连接或网络”，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/7E/89/wKiom1cDfo7RCi3BAAB_3cis-vU155.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s3.51cto.com/wyfs02/M00/7E/89/wKiom1cDfo7RCi3BAAB_3cis-vU155.png&quot; title=&quot;4 - 副本.png&quot; alt=&quot;wKiom1cDfo7RCi3BAAB_3cis-vU155.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、选择“连接到工作区”，然后下一步，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s4.51cto.com/wyfs02/M00/7E/85/wKioL1cDf1bxq2OdAACxPIg7iFY188.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s4.51cto.com/wyfs02/M00/7E/85/wKioL1cDf1bxq2OdAACxPIg7iFY188.png&quot; title=&quot;5 - 副本.png&quot; alt=&quot;wKioL1cDf1bxq2OdAACxPIg7iFY188.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、选择“使用我的&lt;/span&gt;Internet&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;连接（&lt;/span&gt;VPN&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;），如下图：“&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/7E/85/wKioL1cDf3WygnaCAABAoPrveCo601.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s3.51cto.com/wyfs02/M02/7E/85/wKioL1cDf3WygnaCAABAoPrveCo601.png&quot; title=&quot;6.png&quot; alt=&quot;wKioL1cDf3WygnaCAABAoPrveCo601.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、输入下面红色箭头处的内容，然后点击创建，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M00/7E/94/wKioL1cE6EGTtgSVAAGULKr9yvQ429.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M00/7E/94/wKioL1cE6EGTtgSVAAGULKr9yvQ429.png&quot; title=&quot;wKiom1cDf2STu8YXAABTGVwl7hQ598.png&quot; alt=&quot;wKioL1cE6EGTtgSVAAGULKr9yvQ429.png&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、接下来，打开无线信号列表，点击刚才创建的“&lt;/span&gt;VPN&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;连接“，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/7E/98/wKiom1cE57bBWl8-AADgz-Npwgs541.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s3.51cto.com/wyfs02/M01/7E/98/wKiom1cE57bBWl8-AADgz-Npwgs541.png&quot; title=&quot;wKiom1cDf6yxHrNbAADaBZVvPFU406.png&quot; alt=&quot;wKiom1cE57bBWl8-AADgz-Npwgs541.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;6&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、选择“高级选项“，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M02/7E/98/wKiom1cE58fxLTVEAAKGZqQce7g674.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M02/7E/98/wKiom1cE58fxLTVEAAKGZqQce7g674.png&quot; title=&quot;wKiom1cDf-ewSx3ZAADsMtgKGEQ319.png&quot; alt=&quot;wKiom1cE58fxLTVEAAKGZqQce7g674.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、&lt;/span&gt;VPN&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;类型选择“点对点隧道协议“，然后输入用户名和密码后点击“记住我的登录信息”然后点保存，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M02/7E/98/wKiom1cE59yxlLCxAAL04pc4OhY634.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M02/7E/98/wKiom1cE59yxlLCxAAL04pc4OhY634.png&quot; title=&quot;wKioL1cDgLLxpLu-AADta_zobls120.png&quot; alt=&quot;wKiom1cE59yxlLCxAAL04pc4OhY634.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;8&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、点击连接，连接&lt;/span&gt;FQ-VPN&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/7E/94/wKioL1cE6J3wFpVAAAKexb66Gbs603.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s3.51cto.com/wyfs02/M00/7E/94/wKioL1cE6J3wFpVAAAKexb66Gbs603.png&quot; title=&quot;wKioL1cDgOHBl4QgAAD4q0-61pw556.png&quot; alt=&quot;wKioL1cE6J3wFpVAAAKexb66Gbs603.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;9&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;、不使用时，选择断开连接，如下图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s1.51cto.com/wyfs02/M01/7E/98/wKiom1cE6AjR7H6zAAI40Y01EU0693.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s1.51cto.com/wyfs02/M01/7E/98/wKiom1cE6AjR7H6zAAI40Y01EU0693.png&quot; title=&quot;wKioL1cDgQKi5A1cAAD1Oz825P8151.png&quot; alt=&quot;wKiom1cE6AjR7H6zAAI40Y01EU0693.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;10、效果测试&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M01/7E/86/wKioL1cDgSXhjdBFAAMnEeXB8jQ263.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M01/7E/86/wKioL1cDgSXhjdBFAAMnEeXB8jQ263.png&quot; title=&quot;a.png&quot; alt=&quot;wKioL1cDgSXhjdBFAAMnEeXB8jQ263.png&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;&quot;&gt;（完）&lt;/span&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/linuxtech/1760533', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('300', '配置思科路由器Telnet 登陆荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p style=&quot;text-indent:24px;&quot;&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;我们之前学习了如何用&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;console&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;口去登陆路由器控制台，这种方式下我们每次都需要到机房去连接路由器。路由器为我们提供了&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;telnet&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;功能，我们可以在局域网内的通过&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;IP &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;连接到路由器进行配置，不用每次都去机房了。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:24px;&quot;&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1&amp;gt;enable&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1#&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config)#line vty 0 4&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config-line)#&lt;strong&gt;password guoyong&lt;/strong&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;设置&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;telnet&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;线路密码&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config-line)#exit&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;以上为复习&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config)#enable secret guoyong&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;设置&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;enable &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;密码&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;以上是设置端口及&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;telnet &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;密码和&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;enable&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config)#interface gigabitethernet 0/0&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;‘进入&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;s0&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;端口&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config-if)#ip address 192.168.12.2 255.255.255.0 &amp;nbsp;;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;设置&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;IP&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;地址和子网掩码&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;Yong1(config-if)#no shutdown&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;‘端口链路层开启&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;配置好端口ip口，我们用客户端来ping路由器的端口&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M02/7D/2D/wKioL1bharXgNItpAACQBlmfX04445.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;float:none;&quot; title=&quot;Capture.JPG&quot; src=&quot;http://s2.51cto.com/wyfs02/M02/7D/2D/wKioL1bharXgNItpAACQBlmfX04445.jpg&quot; alt=&quot;wKioL1bharXgNItpAACQBlmfX04445.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;注意，设置&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;enable&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;密码和&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;vty&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;密码后才能够被&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;pc telnet &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;连接&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;我们用&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;pc&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;来&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;telnet &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;路由器&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;，当然我们这里还是使用&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;putty.&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;另外我们也可以在一台路由器上&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;telnet&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;到远程的路由器上进行配置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M02/7D/2E/wKiom1bhajDAou-VAADBDuMAZKQ095.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;float:none;&quot; title=&quot;3.JPG&quot; src=&quot;http://s2.51cto.com/wyfs02/M02/7D/2E/wKiom1bhajDAou-VAADBDuMAZKQ095.jpg&quot; alt=&quot;wKiom1bhajDAou-VAADBDuMAZKQ095.jpg&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;登陆路由器之后我们用show users来显示当前telnet的用户&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&lt;img style=&quot;float:none;&quot; title=&quot;2.JPG&quot; src=&quot;http://s4.51cto.com/wyfs02/M02/7D/2E/wKiom1bhai_xoupxAABKS-s5yQE999.jpg&quot; alt=&quot;wKiom1bhai_xoupxAABKS-s5yQE999.jpg&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;margin:0px 0px 0px 42px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;margin:0px 0px 0px 42px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;text-indent:63px;margin:0px 0px 0px 42px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;*------------------------- &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;表示当前正在使用的线路&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;text-indent:63px;margin:0px 0px 0px 42px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;0-------------------------&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;表示第一个&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;VTY&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;线路&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;text-indent:63px;margin:0px 0px 0px 42px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;192.168.12.1------------&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;表示登陆端的&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;IP&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;宋体&#039;;font-size:16px;&quot;&gt;地址&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;margin:0px 0px 0px 42px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left;margin:0px 0px 0px 42px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;Times New Roman&#039;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/guoyong/1749723', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('301', 'python根据nagios配置文件将监控的服务联系人等信息导出到excel表格荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&amp;nbsp; 前阵子，遇到需要把nagios监控的服务统计到表格的需求，想着如果每一次改动，都要去维护表格的话，难免会有疏漏或者问题，于是观察了nagios的host.cfg,services.cfg等配置文件写了一个脚本，包含对多个主机关联到同一个服务的处理等，脚本也有局限性，就是需要把每个主机，都归类到某个组，比如Linux主机归类到Linux组，实际环境，一般也是有这样做归类的，脚本运行过程中会有文件产生，但都很小，以下是相应模块安装和脚本文件，建议在测试机上面跑完再到实际环境跑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&amp;nbsp;一，安装xlsxwriter&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&amp;nbsp; &amp;nbsp; 一个excel操作模块，可以操作多个工作表的文字、数字、公式、图表等。&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&amp;nbsp; &amp;nbsp; pip安装方法：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;#pip&amp;nbsp;install&amp;nbsp;XlsxWriter&lt;br /&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&amp;nbsp; &amp;nbsp;源码安装方法（需下载）&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;#tar&amp;nbsp;-zxvf&amp;nbsp;XlsxWriter-master.tar.gz&lt;br /&gt;#cd&amp;nbsp;XlsxWriter-master&lt;br /&gt;#python&amp;nbsp;setup.py&amp;nbsp;install&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&amp;nbsp;二，脚本文件： &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:python;toolbar:false&quot;&gt;import&amp;nbsp;xlsxwriter  import&amp;nbsp;sys reload(sys) sys.setdefaultencoding(&#039;utf8&#039;) #注意路径 os.system(&quot;cat&amp;nbsp;/usr/local/nagios/etc/hosts.cfg&amp;nbsp;|&amp;nbsp;grep&amp;nbsp;-E&amp;nbsp;&#039;host_name|address|hostgroups&#039;&amp;nbsp;|&amp;nbsp; sed&amp;nbsp;s/[[:space:]]//&amp;nbsp;|&amp;nbsp;awk&amp;nbsp;&#039;{print&amp;nbsp;$1,$2,$3}&#039;&amp;nbsp;|&amp;nbsp;sed&amp;nbsp;-e&amp;nbsp;&#039;s/[[:space:]]$//g&#039;&amp;nbsp;&amp;gt;&amp;nbsp;/root/autocount/hostip&quot;)  #####################处理一行多个host_name情况########################  os.system(&quot;cat&amp;nbsp;/usr/local/nagios/etc/services.cfg&amp;nbsp;|&amp;nbsp;grep&amp;nbsp;-E&amp;nbsp;&#039;host_name|service_description|contacts&#039;|sed&amp;nbsp;s/[[:space:]]//&amp;nbsp;|&amp;nbsp; awk&amp;nbsp;&#039;{print&amp;nbsp;$1,$2,$3,$4,$5,$6}&#039;&amp;nbsp;|&amp;nbsp;sed&amp;nbsp;-e&amp;nbsp;&#039;s/[[:space:]]*$//g&#039;&amp;nbsp;|&amp;nbsp;sed&amp;nbsp;-e&amp;nbsp;&#039;s/,[[:space:]]/,/g&#039;&amp;nbsp;&amp;gt;&amp;nbsp;/root/autocount/serviceip2&quot;) #含有完整行的文件，及host_name都有的 os.system(&quot;cat&amp;nbsp;/usr/local/nagios/etc/services.cfg&amp;nbsp;|&amp;nbsp;grep&amp;nbsp;&#039;host_name&#039;&amp;nbsp;|&amp;nbsp;sed&amp;nbsp;s/[[:space:]]//&amp;nbsp;|&amp;nbsp;awk&amp;nbsp;&#039;{print&amp;nbsp;$2,$3,$4,$5,$6}&#039;&amp;nbsp;|&amp;nbsp;sed&amp;nbsp;s/[[:space:]]//g&amp;nbsp;|&amp;nbsp;awk&amp;nbsp;&#039;/,/{print&amp;nbsp;$0}&#039;&amp;nbsp;&amp;gt;&amp;nbsp;/root/autocount/serviceip1&quot;) os.system(&quot;sort&amp;nbsp;-u&amp;nbsp;/root/autocount/serviceip1&amp;nbsp;&amp;gt;&amp;nbsp;/root/autocount/serviceip3&quot;) #去除重复行 with&amp;nbsp;open(&quot;/root/autocount/serviceip3&quot;)&amp;nbsp;as&amp;nbsp;f3: #a中保存有一行多个host_name的主机&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=f3.readlines() with&amp;nbsp;open(&quot;/root/autocount/serviceip2&quot;)&amp;nbsp;as&amp;nbsp;f4: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b=f4.readlines() j=0 for&amp;nbsp;&amp;nbsp;i&amp;nbsp;in&amp;nbsp;a: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k&amp;nbsp;=&amp;nbsp;i.strip(&#039;\n&#039;).split(&#039;,&#039;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l=3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;len(k): &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;k[j] &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;m&amp;nbsp;in&amp;nbsp;b: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;k[j]&amp;nbsp;in&amp;nbsp;m&amp;nbsp;: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#b中的某一行含有一行多主机中的一个主机 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;k[j] &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;i&amp;nbsp;in&amp;nbsp;m&amp;nbsp;: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.insert(len(b),&#039;host_name&amp;nbsp;&#039;+k[j]+&#039;\n&#039;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l=0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#插入到最后，然后进入下一次的for&amp;nbsp;m&amp;nbsp;in&amp;nbsp;b，即往后面继续for了，就到下面的那个service_description,设置l是把最近的service_description同contacts加入到b的后面，而不是所有。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;service_description&#039;&amp;nbsp;in&amp;nbsp;m&amp;nbsp;and&amp;nbsp;l&amp;nbsp;&amp;lt;=&amp;nbsp;2: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;m &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#此时的len(b)是加入了一个host_name之后的，所以会继续往后insert &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.insert(len(b),m) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;contacts&#039;&amp;nbsp;in&amp;nbsp;m&amp;nbsp;and&amp;nbsp;l&amp;nbsp;&amp;lt;=&amp;nbsp;2: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;m &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.insert(len(b),m) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l+=1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;j+=1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l=3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;j=0  testfile&amp;nbsp;=&amp;nbsp;open(&quot;/root/autocount/testfile&quot;,&#039;w&#039;)  for&amp;nbsp;bb&amp;nbsp;in&amp;nbsp;b: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;testfile,bb, testfile.close() #此时testfile中还是含有长主机名的，即多个主机在配置文件中显示为同一行的(关联服务) jiji=0  for&amp;nbsp;i&amp;nbsp;in&amp;nbsp;a: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try: 	while&amp;nbsp;True: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ind&amp;nbsp;=&amp;nbsp;b.index(&quot;host_name&amp;nbsp;&quot;+i) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.pop(ind) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.pop(ind) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.pop(ind) 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&quot;###############&quot; 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jiji+=1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;except: 	continue #利用a中先前存的类似host1,host2,host3这样关联的主机，从b中剔除。 print&amp;nbsp;&quot;jiji&amp;nbsp;is&amp;nbsp;%s&amp;nbsp;&quot;&amp;nbsp;%&amp;nbsp;jiji   finall&amp;nbsp;=&amp;nbsp;open(&quot;/root/autocount/serviceip&quot;,&#039;w&#039;)  for&amp;nbsp;kk&amp;nbsp;in&amp;nbsp;b: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;finall,kk, finall.close() #关闭保存文件，现在就是不存在类似多个主机名的行了。  file1=&quot;/root/autocount/hostip&quot; file2=&quot;/root/autocount/serviceip&quot;  f&amp;nbsp;=&amp;nbsp;open(&quot;/root/autocount/joinout&quot;,&#039;w&#039;) final&amp;nbsp;=&amp;nbsp;open(&quot;/root/autocount/final&quot;,&#039;w&#039;)  f1=file(file1,&quot;r&quot;) j=0 totalhost=0 for&amp;nbsp;i&amp;nbsp;in&amp;nbsp;f1.readlines(): &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;totalhost+=1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;f,i, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f2=file(file2,&quot;r&quot;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&amp;nbsp;=&amp;nbsp;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;k&amp;nbsp;in&amp;nbsp;f2.readlines(): 	if&amp;nbsp;i&amp;nbsp;==&amp;nbsp;k&amp;nbsp;:&amp;nbsp;#先判断是否主机名相等，要不如果serviceip文件服务无联系人，就会出现错乱 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&quot;testtesttest&quot; 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&amp;nbsp;=&amp;nbsp;0 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue 	elif&amp;nbsp;m&amp;nbsp;&amp;lt;&amp;nbsp;2&amp;nbsp;and&amp;nbsp;(&#039;host_name&#039;&amp;nbsp;not&amp;nbsp;in&amp;nbsp;k): 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;f,k, 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m+=1 	else: 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&amp;nbsp;=&amp;nbsp;2 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue  f1.close() f2.close() f.close() totalhost=totalhost/3  with&amp;nbsp;open(&quot;/root/autocount/joinout&quot;)&amp;nbsp;as&amp;nbsp;f: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=f.readlines()  linen=0 con=[] totalservice=0 for&amp;nbsp;i&amp;nbsp;in&amp;nbsp;a: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;service_description&#039;&amp;nbsp;in&amp;nbsp;i: 	totalservice+=1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;con.append(linen) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;linen+=1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;linen+=1 print&amp;nbsp;con  m=1 #处理一些没有contacts的情况 for&amp;nbsp;j&amp;nbsp;in&amp;nbsp;con: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;contacts&#039;&amp;nbsp;not&amp;nbsp;in&amp;nbsp;a[j+m]: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a.insert(j+m,&#039;contacts&amp;nbsp;none\n&#039;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m+=1  for&amp;nbsp;x&amp;nbsp;in&amp;nbsp;a: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;final,x,   title&amp;nbsp;=&amp;nbsp;[u&#039;序列号&#039;,u&#039;host&#039;,u&#039;ip&#039;,u&#039;service&#039;,u&#039;联系人&#039;,u&#039;所属部门&#039;]  workbook&amp;nbsp;=&amp;nbsp;xlsxwriter.Workbook(&#039;Nagios监控信息统计.xlsx&#039;) worksheet&amp;nbsp;=&amp;nbsp;workbook.add_worksheet()  worksheet.set_column(&#039;A:C&#039;,30) worksheet.set_column(&#039;D:F&#039;,30) worksheet.set_column(&#039;H:I&#039;,10) #worksheet.set_row(3,30) #worksheet.set_row(6,30) #worksheet.set_row(7,30) merge_format&amp;nbsp;=&amp;nbsp;workbook.add_format({ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;bold&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;border&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;align&#039;:&amp;nbsp;&#039;center&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;valign&#039;:&amp;nbsp;&#039;vcenter&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;fg_color&#039;:&amp;nbsp;&#039;#CC0033&#039;})  merge_format1&amp;nbsp;=&amp;nbsp;workbook.add_format({ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;bold&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;border&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;align&#039;:&amp;nbsp;&#039;center&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;valign&#039;:&amp;nbsp;&#039;vcenter&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;fg_color&#039;:&amp;nbsp;&#039;#D7E4BC&#039;})  bold&amp;nbsp;=&amp;nbsp;workbook.add_format({ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;bold&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;border&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;align&#039;:&amp;nbsp;&#039;center&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;valign&#039;:&amp;nbsp;&#039;vcenter&#039;})  merge_format2&amp;nbsp;=&amp;nbsp;workbook.add_format({ #&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;bold&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;border&#039;:&amp;nbsp;1, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;align&#039;:&amp;nbsp;&#039;center&#039;, &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#039;valign&#039;:&amp;nbsp;&#039;vcenter&#039;})  format_title=workbook.add_format() format_title.set_border(1) format_title.set_bg_color(&#039;#cccccc&#039;)  format_title.set_align(&#039;center&#039;)  worksheet.merge_range(&#039;A1:F1&#039;,&#039;Nagios监控信息&#039;,merge_format) worksheet.merge_range(&#039;H1:I1&#039;,&#039;主机总计&amp;nbsp;服务总计&#039;,merge_format1)  worksheet.write(&#039;H2&#039;,totalhost,bold)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; worksheet.write(&#039;I2&#039;,totalservice,bold)  worksheet.write_row(&#039;A2&#039;,title,format_title)  ####################################### service_list=[] count&amp;nbsp;=&amp;nbsp;0 slist_end&amp;nbsp;=&amp;nbsp;0 initline=3 def&amp;nbsp;writetoexecl(numb,host,ip,group,service_list):  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;global&amp;nbsp;initline &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;global&amp;nbsp;slist_end  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slist_len=str(len(service_list)) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;initl=str(initline) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slist_end&amp;nbsp;=&amp;nbsp;int(initl)&amp;nbsp;+&amp;nbsp;int(slist_len)&amp;nbsp;-&amp;nbsp;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slist_end1=str(slist_end) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#一行的就调用write方法 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;initl&amp;nbsp;==&amp;nbsp;slist_end1: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.write(&#039;A&#039;+initl,numb,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.write(&#039;B&#039;+initl,host,merge_format2) 	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.write(&#039;C&#039;+initl,ip,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.write(&#039;F&#039;+initl,group,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.merge_range(&#039;A&#039;+initl+&#039;:&#039;+&#039;A&#039;+slist_end1,numb,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.merge_range(&#039;B&#039;+initl+&#039;:&#039;+&#039;B&#039;+slist_end1,host,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.merge_range(&#039;C&#039;+initl+&#039;:&#039;+&#039;C&#039;+slist_end1,ip,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.merge_range(&#039;F&#039;+initl+&#039;:&#039;+&#039;F&#039;+slist_end1,group,merge_format2)  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;servicell&amp;nbsp;=&amp;nbsp;initl #&amp;nbsp;&amp;nbsp;&amp;nbsp;输出服务和联系人 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;element&amp;nbsp;in&amp;nbsp;service_list: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&#039;++++++++&#039; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service1=&#039;&#039;.join(element.keys()) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contacts1=&#039;&#039;.join(element.values()) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.write(&#039;D&#039;+servicell,service1,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;worksheet.write(&#039;E&#039;+servicell,contacts1,merge_format2) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;servicell&amp;nbsp;=&amp;nbsp;str(int(servicell)&amp;nbsp;+&amp;nbsp;1) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;&#039;++++++++&#039;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#worksheet.merge_range(&#039;A50:A60&#039;,num,merge_format) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#print&amp;nbsp;initl &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#print&amp;nbsp;slist_end1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;initline&amp;nbsp;=&amp;nbsp;int(initl)&amp;nbsp;+&amp;nbsp;int(slist_len)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for&amp;nbsp;i&amp;nbsp;in&amp;nbsp;a:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service_dict={}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#定义字典存放服务和联系人&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;host_name&#039;&amp;nbsp;in&amp;nbsp;i:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;host=i.split()[1]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;host&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;service_description&#039;&amp;nbsp;in&amp;nbsp;i:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;key=i.split()[1]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service_dict[key]=&#039;&#039;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;contacts&#039;&amp;nbsp;in&amp;nbsp;i:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service_dict[key]=i.split()[1]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#print&amp;nbsp;service_dict&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service_list.append(service_dict)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#print&amp;nbsp;service_list&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;address&#039;&amp;nbsp;in&amp;nbsp;i: 	ip&amp;nbsp;=&amp;nbsp;i.split()[1] 	print&amp;nbsp;ip &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;&#039;hostgroups&#039;&amp;nbsp;in&amp;nbsp;i:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;groups&amp;nbsp;=&amp;nbsp;i.split()[1]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;service_list&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&amp;nbsp;groups&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count&amp;nbsp;+=&amp;nbsp;1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;writetoexecl(count,host,ip,groups,service_list)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service_list=[]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue workbook.close()&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&lt;/span&gt;统计的效果如下：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; style=&quot;background-color:rgb(255,0,0);&quot; rowspan=&quot;1&quot; colspan=&quot;6&quot; align=&quot;center&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/yaonet/1745021', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('302', 'Apache POI处理excel文档荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;目前比较流行处理excel文档的方式一般有两种，分别是POI和JXL。&lt;strong&gt;重量级POI优缺点&lt;/strong&gt;：适合对excel文档细节有比较专业的要求，如使用公式、宏等高级功能；缺点是操作相对繁琐，非纯java编写的架包，跨平台性有待加强。&lt;strong&gt;轻量级JXL&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;优缺点&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;Jxl是纯javaAPI，跨平台性优越，操作相对简便；缺点是对excel文档的一些高级功能不支持，但可以满足日常需求。这里我们介绍&lt;a href=&quot;http://poi.apache.org/&quot; title=&quot;&quot; target=&quot;_blank&quot;&gt;POI&lt;/a&gt;的基本使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;1.首先导入相关架包，如图：&lt;a href=&quot;http://s4.51cto.com/wyfs02/M00/7A/4E/wKioL1anLpzSqqqLAAA_558tfbY405.jpg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://s1.51cto.com/wyfs02/M00/7A/4E/wKioL1anL0DSpV9QAAA_558tfbY381.jpg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/7A/4F/wKiom1anL0WRclXTAAA_558tfbY689.jpg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://s4.51cto.com/wyfs02/M00/7A/4F/wKiom1anL17yUrCrAAA_558tfbY801.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s4.51cto.com/wyfs02/M00/7A/4F/wKiom1anL17yUrCrAAA_558tfbY801.jpg&quot; title=&quot;002.jpg&quot; alt=&quot;wKiom1anL17yUrCrAAA_558tfbY801.jpg&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;这里还要注意你开发项目的JDK版本是什么，要根据相应JDK版本下载不同POI的版本。如图：&lt;a href=&quot;http://s5.51cto.com/wyfs02/M00/7A/4F/wKiom1anLsLwuZ9UAABPrTXyjSw409.jpg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://s5.51cto.com/wyfs02/M01/7A/4E/wKioL1anL-7zQHtgAABEcydbApk851.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s5.51cto.com/wyfs02/M01/7A/4E/wKioL1anL-7zQHtgAABEcydbApk851.jpg&quot; title=&quot;QQ截图20160126163432.jpg&quot; alt=&quot;wKioL1anL-7zQHtgAABEcydbApk851.jpg&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2.操作ExcelReader辅助类可以处理xls和xlsx文件，readExcelTitle(InputStream is)方法读取文件标题，也就是文件首行，readExcelContent(InputStream is)方法读取文件内容：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;import&amp;nbsp;java.io.IOException; import&amp;nbsp;java.io.InputStream; import&amp;nbsp;java.text.DecimalFormat; import&amp;nbsp;java.text.SimpleDateFormat; import&amp;nbsp;java.util.Date; import&amp;nbsp;java.util.LinkedHashMap; import&amp;nbsp;java.util.Map;  import&amp;nbsp;org.apache.log4j.Logger; import&amp;nbsp;org.apache.poi.ss.usermodel.Cell; import&amp;nbsp;org.apache.poi.ss.usermodel.DateUtil; import&amp;nbsp;org.apache.poi.ss.usermodel.Row; import&amp;nbsp;org.apache.poi.ss.usermodel.Sheet; import&amp;nbsp;org.apache.poi.ss.usermodel.Workbook; import&amp;nbsp;org.apache.poi.ss.usermodel.WorkbookFactory;  /** &amp;nbsp;*&amp;nbsp;操作Excel表格的功能类 &amp;nbsp;*/ public&amp;nbsp;class&amp;nbsp;ExcelReader&amp;nbsp;{ 	private&amp;nbsp;static&amp;nbsp;DecimalFormat&amp;nbsp;df&amp;nbsp;=&amp;nbsp;new&amp;nbsp;DecimalFormat(&quot;0&quot;); 	private&amp;nbsp;final&amp;nbsp;static&amp;nbsp;Logger&amp;nbsp;log&amp;nbsp;=&amp;nbsp;Logger.getLogger(ExcelReader.class); 	private&amp;nbsp;Workbook&amp;nbsp;wb=null; 	private&amp;nbsp;Sheet&amp;nbsp;sheet=null; 	private&amp;nbsp;Row&amp;nbsp;row=null;  	/** 	&amp;nbsp;*&amp;nbsp;读取Excel表格表头的内容 	&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;InputStream 	&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;String&amp;nbsp;表头内容的数组 	&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;IOException&amp;nbsp; 	&amp;nbsp;*/ 	public&amp;nbsp;String[]&amp;nbsp;readExcelTitle(InputStream&amp;nbsp;is)&amp;nbsp;throws&amp;nbsp;Exception&amp;nbsp;{ 		try&amp;nbsp;{ 			wb&amp;nbsp;=&amp;nbsp;WorkbookFactory.create(is); 		}&amp;nbsp;catch&amp;nbsp;(IOException&amp;nbsp;e)&amp;nbsp;{ 			log.error(&quot;读取Excel表格表头的内容异常&quot;,&amp;nbsp;e); 			throw&amp;nbsp;e; 		} 		sheet&amp;nbsp;=&amp;nbsp;wb.getSheetAt(0); 		row&amp;nbsp;=&amp;nbsp;sheet.getRow(0); 		//&amp;nbsp;标题总列数 		int&amp;nbsp;colNum&amp;nbsp;=&amp;nbsp;row.getPhysicalNumberOfCells(); 		String[]&amp;nbsp;title&amp;nbsp;=&amp;nbsp;new&amp;nbsp;String[colNum]; 		for&amp;nbsp;(int&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;colNum;&amp;nbsp;i++)&amp;nbsp;{ 			title[i]&amp;nbsp;=&amp;nbsp;getCellFormatValue(row.getCell(i)); 		} 		log.info(&quot;读取Excel表格表头的内容完毕&quot;); 		return&amp;nbsp;title; 	}  	/** 	&amp;nbsp;*&amp;nbsp;读取Excel数据内容 	&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;InputStream 	&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;Map&amp;nbsp;包含单元格数据内容的Map对象 	&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;IOException&amp;nbsp; 	&amp;nbsp;*/ 	public&amp;nbsp;Map&amp;lt;Integer,&amp;nbsp;String&amp;gt;&amp;nbsp;readExcelContent(InputStream&amp;nbsp;is)&amp;nbsp;throws&amp;nbsp;Exception&amp;nbsp;{ 		Map&amp;lt;Integer,&amp;nbsp;String&amp;gt;&amp;nbsp;content&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LinkedHashMap&amp;lt;Integer,&amp;nbsp;String&amp;gt;(); 		String&amp;nbsp;str&amp;nbsp;=&amp;nbsp;&quot;&quot;; 		try&amp;nbsp;{ 			wb&amp;nbsp;=&amp;nbsp;WorkbookFactory.create(is); 		}&amp;nbsp;catch&amp;nbsp;(IOException&amp;nbsp;e)&amp;nbsp;{ 			log.error(&quot;读取Excel数据内容&quot;,&amp;nbsp;e); 			throw&amp;nbsp;e; 		} 		sheet&amp;nbsp;=&amp;nbsp;wb.getSheetAt(0); 		//&amp;nbsp;得到总行数 		int&amp;nbsp;rowNum&amp;nbsp;=&amp;nbsp;sheet.getLastRowNum(); 		row&amp;nbsp;=&amp;nbsp;sheet.getRow(0); 		int&amp;nbsp;colNum&amp;nbsp;=&amp;nbsp;row.getPhysicalNumberOfCells(); 		//&amp;nbsp;正文内容应该从第二行开始,第一行为表头的标题 		for&amp;nbsp;(int&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;rowNum;&amp;nbsp;i++)&amp;nbsp;{ 			row&amp;nbsp;=&amp;nbsp;sheet.getRow(i); 			int&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0; 			while&amp;nbsp;(j&amp;nbsp;&amp;lt;&amp;nbsp;colNum)&amp;nbsp;{ 				//&amp;nbsp;每个单元格的数据内容用&quot;-&quot;分割开，以后需要时用String类的replace()方法还原数据 				//&amp;nbsp;也可以将每个单元格的数据设置到一个javabean的属性中，此时需要新建一个javabean 				//&amp;nbsp;str&amp;nbsp;+=&amp;nbsp;getStringCellValue(row.getCell((short)&amp;nbsp;j)).trim()&amp;nbsp;+ 				//&amp;nbsp;&quot;-&quot;; 				if&amp;nbsp;(row&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{ 					str&amp;nbsp;+=&amp;nbsp;getCellFormatValue(row.getCell(j)).trim()&amp;nbsp;+&amp;nbsp;&quot;,&quot;; 				}&amp;nbsp;else&amp;nbsp;{ 					str&amp;nbsp;+=&amp;nbsp;&quot;&quot;&amp;nbsp;+&amp;nbsp;&quot;,&quot;; 				} 				j++; 			} 			content.put(i,&amp;nbsp;str.substring(0,&amp;nbsp;str.length()&amp;nbsp;-&amp;nbsp;1)); 			str&amp;nbsp;=&amp;nbsp;&quot;&quot;; 		} 		log.info(&quot;读取Excel数据内容完毕&quot;); 		return&amp;nbsp;content; 	}  	/** 	&amp;nbsp;*&amp;nbsp;根据Cell类型设置数据 	&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;cell 	&amp;nbsp;*&amp;nbsp;@return 	&amp;nbsp;*/ 	private&amp;nbsp;String&amp;nbsp;getCellFormatValue(Cell&amp;nbsp;cell)&amp;nbsp;{ 		String&amp;nbsp;cellvalue&amp;nbsp;=&amp;nbsp;&quot;&quot;; 		if&amp;nbsp;(cell&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{ 			//&amp;nbsp;判断当前Cell的Type 			switch&amp;nbsp;(cell.getCellType())&amp;nbsp;{ 			//&amp;nbsp;如果当前Cell的Type为NUMERIC 			case&amp;nbsp;Cell.CELL_TYPE_NUMERIC: 			case&amp;nbsp;Cell.CELL_TYPE_FORMULA:&amp;nbsp;{ 				//&amp;nbsp;判断当前的cell是否为Date 				if&amp;nbsp;(DateUtil.isCellDateFormatted(cell))&amp;nbsp;{ 					//&amp;nbsp;如果是Date类型则，转化为Data格式  					//方法1：这样子的data格式是带时分秒的：2015-12-18&amp;nbsp;0:00:00 					//cellvalue&amp;nbsp;=&amp;nbsp;cell.getDateCellValue().toLocaleString();  					//方法2：这样子的data格式是不带带时分秒的：2011-10-12 					Date&amp;nbsp;date&amp;nbsp;=&amp;nbsp;cell.getDateCellValue(); 					SimpleDateFormat&amp;nbsp;sdf&amp;nbsp;=&amp;nbsp;new&amp;nbsp;SimpleDateFormat(&quot;yyyy-MM-dd&quot;); 					cellvalue&amp;nbsp;=&amp;nbsp;sdf.format(date);  				} 				//&amp;nbsp;如果是纯数字 				else&amp;nbsp;{ 					//&amp;nbsp;取得当前Cell的数值 					cellvalue&amp;nbsp;=&amp;nbsp;String.valueOf(df.format(cell.getNumericCellValue())); 				} 				break; 			} 			//&amp;nbsp;如果当前Cell的Type为STRIN 			case&amp;nbsp;Cell.CELL_TYPE_STRING: 				//&amp;nbsp;取得当前的Cell字符串 				cellvalue&amp;nbsp;=&amp;nbsp;cell.getRichStringCellValue().getString(); 				break; 			//&amp;nbsp;默认的Cell值 			default: 				cellvalue&amp;nbsp;=&amp;nbsp;&quot;&amp;nbsp;&quot;; 			} 		}&amp;nbsp;else&amp;nbsp;{ 			cellvalue&amp;nbsp;=&amp;nbsp;&quot;&quot;; 		} 		return&amp;nbsp;cellvalue;  	} }&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;简单实例代码，实际使用中应该加上异常处理机制：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FileInputStream&amp;nbsp;is&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileInputStream(file); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ExcelReader&amp;nbsp;excelReader&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ExcelReader(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String[]&amp;nbsp;title&amp;nbsp;=&amp;nbsp;excelReader.readExcelTitle(is);//读取文件标题（非文件名，而是文件第一行） &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(String&amp;nbsp;str&amp;nbsp;:&amp;nbsp;title)&amp;nbsp;{ 	&amp;nbsp;System.out.println(str);				 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is.close(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileInputStream(file); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Map&amp;lt;Integer,&amp;nbsp;String&amp;gt;&amp;nbsp;map&amp;nbsp;=&amp;nbsp;excelReader.readExcelContent(is);//读取文件内容 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(int&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;map.size();&amp;nbsp;i++)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(map.get(i)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is.close();&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-family:arial, helvetica, sans-serif;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;相关截图：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M00/7A/4F/wKioL1anOYiwZsOZAAAuqS2y-Gs426.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M00/7A/4F/wKioL1anOYiwZsOZAAAuqS2y-Gs426.jpg&quot; style=&quot;float:none;&quot; title=&quot;QQ截图20160126171342.jpg&quot; alt=&quot;wKioL1anOYiwZsOZAAAuqS2y-Gs426.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M00/7A/4F/wKioL1anOYiwZsOZAAAuqS2y-Gs426.jpg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://s2.51cto.com/wyfs02/M01/7A/4F/wKiom1anOWKRZdTaAAA-CSE9mNs678.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M01/7A/4F/wKiom1anOWKRZdTaAAA-CSE9mNs678.jpg&quot; title=&quot;QQ截图20160126171305.jpg&quot; alt=&quot;wKiom1anOWKRZdTaAAA-CSE9mNs678.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/zhanglunc/1738685', '1', 'ITEYE', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('303', 'linux搭建基于LNMP的wordpress博客荐 ', '', 'http://blog.51cto.com/wangwq/1715675', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('304', '基于heartbeat v2 crm实现HA高可用性的 LAMP+wordpress荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;一 Heartbeat 基本理论&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 提供冗余系统：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HA Cluster：为提升系统调用性，组合多台主机构建成为的集群；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; split brain, partitioned cluster&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; vote system：投票系统&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HA中的各节点无法探测彼此的心跳信息时，必须无法协调工作；此种状态即为partitioned cluster；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 少数服从多数的原则：quorum&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; with quorum &amp;gt; total/2 &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; without quorum &amp;lt;= total/2&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 仲裁设备：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; quorum disk = qdisk&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ping node&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; failover: 失效转移，故障转移&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; failback：失效转回，故障转回&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源类型：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HA-aware：资源自身可直接调用HA集群底层的HA功能；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 非HA-aware：必须借助于CRM完成在HA集群上实现HA功能；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源的约束关系：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; location：位置约束，定义资源对节点的倾向性；用数值来表示，-oo, +oo；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; colocation：排列约束，定义资源彼此间“在一起”倾向性；-oo, +oo&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 分组：亦能实现将多个资源绑定在一起；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; order：顺序约束，定义资源在同一个节点上启动时的先后顺序；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源类型：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; primitive：主资源，只能运行于集群内的某单个节点；(也称作native)；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; group：组资源，容器，包含一个或多个资源，这些资源可通过“组”这个资源统一进行调度；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; clone：克隆资源，可以在同一个集群内的多个节点运行多份克隆；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; master/slave：主从资源，在同一个集群内部于两个节点运行两份资源，其中一个主，一个为从；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源隔离：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 级别&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 节点：STONITH （Shooting The Other Node In The Head）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; power switch&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源：fencing&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FC SAN switch&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 解决方案：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Messaging Layer：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; v1, v2, v3&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; corosync&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cman (RedHat, RHCS)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; keepalived (完全不同上述三种)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CRM：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v1 haresources (配置接口：配置文件，文件名为haresources)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v2 crm (在各节点运行一个crmd进程，配置接口：命令行客户端程序crmsh，GUI客户端：hb_gui)；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v3, pacemaker (pacemaker可以以插件或独立方式运行；配置接口，CLI接口：crmsh, pcs; GUI: hawk(webgui), LCMC, pacemaker-mgmt)；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; rgmanager (配置接口，CLI：clustat, cman_tool; GUI: Conga(luci+ricci))&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 组合方式：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v2&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v3 + pacemaker&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; corosync + pacemaker&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cman + rgmanager (RHCS)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cman + pacemaker&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LRM: Local Resource Manager, 由CRM通过子程序提供；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; RA: Resouce Agent&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat legacy：heartbeat传统类型的RA，通常位于/etc/ha.d/haresources.d/目录下；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LSB：Linux Standard Base, /etc/rc.d/init.d目录下的脚本，至少接受4个参数：{start|stop|restart|status}；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; OCF：Open Cluster Framework&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 子类别：provider&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; STONITH：专用于实现调用STONITH设备功能的资源；通常为clone类型；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Heartbeat：心跳信息传递机制&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; serail cable：作用范围有限，不建议使用；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ethernet cable：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; UDP Unicast&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; UDP Multicast&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; UDP Broadcast&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 组播地址：用于标识一个IP组播域；IANA(Internet Assigned number authority)把D类地址空间分配给IP组播使用；其范围是：224.0.0.0-239.255.255.255; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 永久组播地址：224.0.0.0-224.0.0.255; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 临时组播地址：224.0.1.0-238.255.255.255; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 本地组播地址：239.0.0.0-239.255.255.255, 仅在特定本地范围内有效；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HA案例：ha web services&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源有三个：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ip, httpd, filesystem&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fip: floating ip，172.16.100.17&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; daemon: httpd&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 约束关系：使用“组”资源，或通过排列约束让资源运行于同一节点；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 顺序约束：有次序地启动资源；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 程序选型：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v2 + haresources&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; heartbeat v2 + crm (hb_gui)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 配置HA集群的前提：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (1) 节点间时间必须同步：使用ntp协议实现；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (2) 节点间需要通过主机名互相通信，必须解析主机至IP地址；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (a) 建议名称解析功能使用hosts文件来实现；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (b) 通信中使用的名字与节点名字必须保持一致：“uname -n”命令，或“hostname”展示出的名字保持一致；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (3) 考虑仲裁设备是否会用到；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (4) 建立各节点之间的root用户能够基于密钥认证；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; # ssh-keygen -t rsa -P &#039;&#039; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; # ssh-copy-id -i /root/.ssh/id_rsa.pub &lt;a href=&quot;mailto:root@HOSTNAME&quot;&gt;root@HOSTNAME&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 注意：定义成为集群服务中的资源，一定不能开机自动启动；因为它们将由crm管理；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; HA Cluster的工作模型：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A/P：两节点集群，active, passive；工作于主备模型；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HA Service通常只有一个：HA resources可能会有多个；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A/A：两节点集群，active/active，工作于双方模型；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; N-M: N个节点，M个服务；通常N&amp;gt;M；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; N-N：N个节点，N个服务；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源运行的倾向性：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; rgmanager:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; failover domain, node priority&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pacemaker：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源黏性：运行于当前节点的倾向性；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 资源约束：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 位置约束：资源对运行于某节点的倾向性&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; inf: 正无穷&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -inf: 负无穷&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; n: &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -n:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 排列约束：资源运行于一处的倾向性&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; inf&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -inf&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; n&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -n&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 顺序约束：启动的先后顺序&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A --&amp;gt; B --&amp;gt; C&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; C --&amp;gt; B --&amp;gt; A&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; DC: Designated Coordinator&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; corosync:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AIS: Application Interface Standard,&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SA Forum: OpenAIS&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; OpenAIS: 提供了一种集群模式，包含集群框架、集群成员管理、通信方式、集群监测，但没有集群资源管理功能；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 组件包括：AMF, CLM, CPKT, EVT等；分支不同，包含的组件略有区别；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 分支：picacho, whitetank, wilson, &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; corosync (集群管理引擎)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 只是openais的一个子组件；&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 分裂成为两个项目：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; corosync, wilson(ais的接口标准)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CentOS 5: &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cman + rgmanager&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CentOS 6: &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cman + rgmanager&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; corosync + pacemaker&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 命令行管理工具：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; crmsh: suse, CentOS 6.4-&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pcs: RedHat, CentOS 6.5+&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; crm的常用子命令：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; status&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; node&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; configure&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ra&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; resource&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; configure常用的子命令：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; primitive&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; group&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; clone&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ms&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; location&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; colocation&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; order&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; show&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; property&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; primitive &amp;lt;rsc_id&amp;gt; class:provider:ra params param1=value1 param2=value2 op op1 param1=value op op2 parma1=value1&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;二 测试heartbeat+httpd&lt;/p&gt;&lt;p&gt;基本环境设置&lt;br /&gt;10.10.10.50/24&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; node1.test.com&amp;nbsp; node1&lt;br /&gt;10.10.10.51/24&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; node2.test.com&amp;nbsp; node2&lt;/p&gt;&lt;p&gt;10.10.10.5/24&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; vip&lt;/p&gt;&lt;p&gt;&lt;br /&gt;关闭iptables &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;service&amp;nbsp;iptables&amp;nbsp;stop chkconfig&amp;nbsp;iptables&amp;nbsp;off&lt;/pre&gt;&lt;p&gt;关闭selinx &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;/etc/selinux/config SELINUX=disabled&lt;/pre&gt;&lt;p&gt;修改主机名 &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;/etc/sysconfig/network HOSTNAME=node2.test.com vim&amp;nbsp;/etc/hosts 10.10.10.50&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node1.test.com&amp;nbsp;&amp;nbsp;node1 10.10.10.51&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node2.test.com&amp;nbsp;&amp;nbsp;node2 reboot&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;~]#&amp;nbsp;uname&amp;nbsp;-n node1.test.com [root@node2&amp;nbsp;~]#&amp;nbsp;uname&amp;nbsp;-n node2.test.com&lt;/pre&gt;&lt;p&gt;安装httpd &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;yum&amp;nbsp;install&amp;nbsp;httpd [root@node1&amp;nbsp;~]#&amp;nbsp;vim&amp;nbsp;/var/www/html/index.html node1.test.com&amp;nbsp;10.10.10.50 [root@node2&amp;nbsp;~]#&amp;nbsp;vim&amp;nbsp;/var/www/html/index.html node2.test.com&amp;nbsp;10.10.10.51 service&amp;nbsp;httpd&amp;nbsp;start&lt;/pre&gt;&lt;p&gt;测试打开 &lt;a href=&quot;http://10.10.10.50&quot; target=&quot;_blank&quot;&gt;http://10.10.10.50&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://10.10.10.51&quot; target=&quot;_blank&quot;&gt;http://10.10.10.51&lt;/a&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;service&amp;nbsp;httpd&amp;nbsp;stop&lt;/pre&gt;&lt;p&gt;准备ssh 信任(不用输账号密码进入系统)&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;cd&amp;nbsp;~ ssh-keygen&amp;nbsp;-t&amp;nbsp;rsa ssh-copy-id&amp;nbsp;localhost ssh&amp;nbsp;node2&amp;nbsp;cat&amp;nbsp;~/.ssh/id_rsa.pub&amp;nbsp;&amp;gt;&amp;gt;.ssh/authorized_keys&amp;nbsp; scp&amp;nbsp;.ssh/authorized_keys&amp;nbsp;&amp;nbsp;node2:~/.ssh/&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;安装heartbeat &lt;br /&gt;设置epel源&amp;nbsp; libnet在epel&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;wget&amp;nbsp;http://mirrors.aliyun.com/epel/6/x86_64/epel-release-6-8.noarch.rpm rpm&amp;nbsp;-ivh&amp;nbsp;epel-release-6-8.noarch.rpm yum&amp;nbsp;install&amp;nbsp;net-snmp-libs&amp;nbsp;libnet&amp;nbsp;PyXML&amp;nbsp;libtool-ltdl&amp;nbsp; rpm&amp;nbsp;-ivh&amp;nbsp;heartbeat-2.1.4-12.el6.x86_64.rpm&amp;nbsp;heartbeat-pils-2.1.4-12.el6.x86_64.rpm&amp;nbsp;heartbeat-stonith-2.1.4-12.el6.x86_64.rpm&lt;/pre&gt;&lt;p&gt;配置heartbeat&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;cd&amp;nbsp;/etc/ha.d/ cp&amp;nbsp;-r&amp;nbsp;/usr/share/doc/heartbeat-2.1.4/&amp;nbsp;&amp;nbsp;/etc/ha.d/ cp&amp;nbsp;./heartbeat-2.1.4/{ha.cf,authkeys,haresources}&amp;nbsp;./ chmod&amp;nbsp;600&amp;nbsp;authkeys&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;authkeys auth&amp;nbsp;2 #1&amp;nbsp;crc 2&amp;nbsp;sha1&amp;nbsp;password #3&amp;nbsp;md5&amp;nbsp;Hello!&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;ha.cf debugfile&amp;nbsp;/var/log/ha-debug #logfacility&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;local0 keepalive&amp;nbsp;2 deadtime&amp;nbsp;30 warntime&amp;nbsp;10 udpport&amp;nbsp;694 mcast&amp;nbsp;eth0&amp;nbsp;225.10.0.1&amp;nbsp;694&amp;nbsp;1&amp;nbsp;0 auto_failback&amp;nbsp;on node&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node1.test.com node&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node2.test.com ping&amp;nbsp;10.10.10.2 compression&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bz2 compression_threshold&amp;nbsp;2&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;haresources node1.test.com&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;10.10.10.5/24/eth0/10.10.10.254&amp;nbsp;httpd&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;scp&amp;nbsp;-p&amp;nbsp;ha.cf&amp;nbsp;haresources&amp;nbsp;authkeys&amp;nbsp;node2:/etc/ha.d/ service&amp;nbsp;heartbeat&amp;nbsp;start;ssh&amp;nbsp;node2&amp;nbsp;service&amp;nbsp;heartbeat&amp;nbsp;start&lt;/pre&gt;&lt;p&gt;查看实时生成的日志&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;tail&amp;nbsp;-f&amp;nbsp;/var/log/ha-debug&lt;/pre&gt;&lt;p&gt;检测运行状态,所有资源在node1上 ，node2 上只有heartbeat服务&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;ifconfig eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.50&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe9f:ae0d/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:1469&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:1324&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:178040&amp;nbsp;(173.8&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:235325&amp;nbsp;(229.8&amp;nbsp;KiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.254&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB) [root@node1&amp;nbsp;ha.d]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80 tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;:::80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:::*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LISTEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3056/httpd&amp;nbsp; [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3056&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.3&amp;nbsp;175276&amp;nbsp;&amp;nbsp;3736&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ss&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3060&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2460&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3061&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3062&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3063&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3064&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3065&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3066&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3067&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3111&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:01&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2662&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2666&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2667&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2668&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2669&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2670&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3114&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:01&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat  [root@node2&amp;nbsp;ha.d]#&amp;nbsp;ifconfig eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:05:71:E9&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.51&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe05:71e9/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:22144&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:16634&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:24037006&amp;nbsp;(22.9&amp;nbsp;MiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:7355584&amp;nbsp;(7.0&amp;nbsp;MiB) lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB) [root@node2&amp;nbsp;ha.d]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80 [root@node2&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2823&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;856&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:02&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node2&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2733&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2738&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2739&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2740&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2741&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2742&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2825&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;856&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:02&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat&lt;/pre&gt;&lt;p&gt;打开网页 &lt;a href=&quot;http://10.10.10.5&quot; target=&quot;_blank&quot;&gt;http://10.10.10.5&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoNjymWesAACCVn04Vds870.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;001.PNG&quot; alt=&quot;wKiom1YsoNjymWesAACCVn04Vds870.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoNjymWesAACCVn04Vds870.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;停止第一个节点&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;heartbeat&amp;nbsp;stop Stopping&amp;nbsp;High-Availability&amp;nbsp;services:&amp;nbsp; Done.&lt;/pre&gt;&lt;p&gt;node1节点服务器全部停止 ，所有服务转移到node2&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node2&amp;nbsp;ha.d]#&amp;nbsp;ifconfig&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:05:71:E9&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.51&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe05:71e9/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:22411&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:16943&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:24082852&amp;nbsp;(22.9&amp;nbsp;MiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:7416808&amp;nbsp;(7.0&amp;nbsp;MiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:05:71:E9&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.254&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB) [root@node2&amp;nbsp;ha.d]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80 tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;:::80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:::*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LISTEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3139/httpd&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [root@node2&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3139&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.3&amp;nbsp;175276&amp;nbsp;&amp;nbsp;3736&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ss&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3141&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2460&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3143&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3145&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3146&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3149&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3151&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3153&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3157&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:05&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3168&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;856&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:06&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node2&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2733&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2738&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2739&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2740&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2741&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2742&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;19:59&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3170&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;852&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:06&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat&lt;/pre&gt;&lt;p&gt;打开网页 &lt;a href=&quot;http://10.10.10.5&quot; target=&quot;_blank&quot;&gt;http://10.10.10.5&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoP-QkXGrAACDm_MKk0U599.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;002.PNG&quot; alt=&quot;wKiom1YsoP-QkXGrAACDm_MKk0U599.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoP-QkXGrAACDm_MKk0U599.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;重新开启node1&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;ifconfig eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.50&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe9f:ae0d/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:2457&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:2066&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:299678&amp;nbsp;(292.6&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:365721&amp;nbsp;(357.1&amp;nbsp;KiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.254&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB) [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ifconfig eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.50&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe9f:ae0d/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:2465&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:2071&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:300586&amp;nbsp;(293.5&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:367585&amp;nbsp;(358.9&amp;nbsp;KiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.254&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB) [root@node1&amp;nbsp;ha.d]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80&amp;nbsp; tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;:::80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:::*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LISTEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3693/httpd&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3693&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.3&amp;nbsp;175276&amp;nbsp;&amp;nbsp;3728&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ss&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3695&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2460&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3696&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3698&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3700&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3701&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3702&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3703&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3704&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3713&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3405&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3410&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3411&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3412&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3413&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3414&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3715&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:07&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat&lt;/pre&gt;&lt;p&gt;所有资源又全部转移到node1&lt;/p&gt;&lt;p&gt;&lt;br /&gt;三 测试heartbeat+httpd+nfs&lt;/p&gt;&lt;p&gt;开启新的服务器，版本为cenos 7.1 ip地址为10.10.10.60&lt;br /&gt;关闭iptables &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;systemctl&amp;nbsp;stop&amp;nbsp;firewalld systemctl&amp;nbsp;disable&amp;nbsp;firewalld&lt;/pre&gt;&lt;p&gt;关闭selinx &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;/etc/selinux/config SELINUX=disabled&lt;/pre&gt;&lt;p&gt;安装nfs&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;m&amp;nbsp;install&amp;nbsp;nfs*&lt;/pre&gt;&lt;p&gt;创建nfs共享文件目录和文件&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;mkdir&amp;nbsp;-p&amp;nbsp;/home/data/html vim&amp;nbsp;/home/data/html/index.html html&amp;nbsp;on&amp;nbsp;nfs&amp;nbsp;server&amp;nbsp;10.10.10.60&lt;/pre&gt;&lt;p&gt;配置nfs&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;vim&amp;nbsp;/etc/exports /home/data&amp;nbsp;10.10.10.0/24(rw,no_root_squash) exportfs&amp;nbsp;-arv&lt;/pre&gt;&lt;p&gt;启动nfs&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;systemctl&amp;nbsp;start&amp;nbsp;nfs-server systemctl&amp;nbsp;status&amp;nbsp;nfs-server&lt;/pre&gt;&lt;p&gt;在node1 node2 上手动挂载测试&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;mount&amp;nbsp;-t&amp;nbsp;nfs&amp;nbsp;10.10.10.60:/home/data/html&amp;nbsp;/var/www/html [root@node1&amp;nbsp;ha.d]#&amp;nbsp;cat&amp;nbsp;/var/www/html/index.html&amp;nbsp; html&amp;nbsp;on&amp;nbsp;nfs&amp;nbsp;server&amp;nbsp;10.10.10.60 [root@node1&amp;nbsp;ha.d]#&amp;nbsp;umount&amp;nbsp;/var/www/html&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node2&amp;nbsp;ha.d]#&amp;nbsp;mount&amp;nbsp;-t&amp;nbsp;nfs&amp;nbsp;10.10.10.60:/home/data/html&amp;nbsp;/var/www/html [root@node2&amp;nbsp;ha.d]#&amp;nbsp;cat&amp;nbsp;/var/www/html/index.html html&amp;nbsp;on&amp;nbsp;nfs&amp;nbsp;server&amp;nbsp;10.10.10.60 [root@node2&amp;nbsp;/]#&amp;nbsp;umount&amp;nbsp;/var/www/html&lt;/pre&gt;&lt;p&gt;修改heartbeat 设置&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;vim&amp;nbsp;haresources node1.test.com&amp;nbsp;&amp;nbsp;&amp;nbsp;10.10.10.5/24&amp;nbsp;&amp;nbsp;&amp;nbsp;Filesystem::10.10.10.60:/home/data/html::/var/www/html::nfs&amp;nbsp;&amp;nbsp;httpd&lt;/pre&gt;&lt;p&gt;复制到node2并启动服务&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;scp&amp;nbsp;haresources&amp;nbsp;node2:/etc/ha.d/ service&amp;nbsp;heartbeat&amp;nbsp;start;ssh&amp;nbsp;node2&amp;nbsp;service&amp;nbsp;heartbeat&amp;nbsp;start&lt;/pre&gt;&lt;p&gt;node1节点 检查&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;ifconfig eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.50&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe9f:ae0d/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:4330&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:3581&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:561109&amp;nbsp;(547.9&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:658645&amp;nbsp;(643.2&amp;nbsp;KiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB) [root@node1&amp;nbsp;ha.d]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80 tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;:::80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:::*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LISTEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4808/httpd&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4808&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.3&amp;nbsp;175276&amp;nbsp;&amp;nbsp;3736&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ss&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4810&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2460&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4811&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4814&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4815&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4816&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4817&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4818&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4819&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4826&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:25&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4272&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4278&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4279&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4280&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4281&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4282&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4828&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:25&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat node2节点 [root@node2&amp;nbsp;/]#&amp;nbsp;ifconfig eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:05:71:E9&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.51&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe05:71e9/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:23901&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:18324&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:24337685&amp;nbsp;(23.2&amp;nbsp;MiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:7683518&amp;nbsp;(7.3&amp;nbsp;MiB) lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB) [root@node2&amp;nbsp;/]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80 [root@node2&amp;nbsp;/]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3735&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;852&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:26&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node2&amp;nbsp;/]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3684&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3689&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3690&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3691&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3692&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3693&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3739&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;852&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat&lt;/pre&gt;&lt;p&gt;打开网页 &lt;a href=&quot;http://10.10.10.5&quot; target=&quot;_blank&quot;&gt;http://10.10.10.5&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1YsofCjzSzmAAB_7YgkQR8509.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;003.PNG&quot; alt=&quot;wKiom1YsofCjzSzmAAB_7YgkQR8509.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1YsofCjzSzmAAB_7YgkQR8509.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;停止第一个节点 &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;heartbeat&amp;nbsp;stop Stopping&amp;nbsp;High-Availability&amp;nbsp;services:&amp;nbsp; Done.&lt;/pre&gt;&lt;p&gt;node1节点服务器全部停止 ，所有服务转移到node2&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node2&amp;nbsp;/]#&amp;nbsp;ifconfig&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:05:71:E9&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.51&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe05:71e9/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:24306&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:18704&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:24389056&amp;nbsp;(23.2&amp;nbsp;MiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:7747299&amp;nbsp;(7.3&amp;nbsp;MiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:05:71:E9&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:26550&amp;nbsp;(25.9&amp;nbsp;KiB) [root@node2&amp;nbsp;/]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80 tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;:::80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:::*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LISTEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4197/httpd&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [root@node2&amp;nbsp;/]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4197&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.3&amp;nbsp;175276&amp;nbsp;&amp;nbsp;3728&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ss&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4199&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2460&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4202&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4203&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4205&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4207&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4210&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4214&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4217&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2444&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:27&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4224&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;856&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:28&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node2&amp;nbsp;/]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3684&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3689&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3690&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3691&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3692&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3693&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:24&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4226&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103308&amp;nbsp;&amp;nbsp;&amp;nbsp;856&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:28&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat&lt;/pre&gt;&lt;p&gt;刷新网页 &lt;a href=&quot;http://10.10.10.5&quot; target=&quot;_blank&quot;&gt;http://10.10.10.5&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DA/wKioL1YsomTi1gINAAB_7YgkQR8748.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;003.PNG&quot; alt=&quot;wKioL1YsomTi1gINAAB_7YgkQR8748.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DA/wKioL1YsomTi1gINAAB_7YgkQR8748.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;重新开启node1&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;ifconfig&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eth0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.50&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;fe80::20c:29ff:fe9f:ae0d/64&amp;nbsp;Scope:Link &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:5051&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:4184&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:656248&amp;nbsp;(640.8&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:765685&amp;nbsp;(747.7&amp;nbsp;KiB) eth0:0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:0C:29:9F:AE:0D&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:10.10.10.5&amp;nbsp;&amp;nbsp;Bcast:10.10.10.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1 lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet6&amp;nbsp;addr:&amp;nbsp;::1/128&amp;nbsp;Scope:Host &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:65536&amp;nbsp;&amp;nbsp;Metric:1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:61&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:12332&amp;nbsp;(12.0&amp;nbsp;KiB) [root@node1&amp;nbsp;ha.d]#&amp;nbsp;netstat&amp;nbsp;-nlptu|grep&amp;nbsp;80&amp;nbsp; tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;:::80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:::*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LISTEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5614/httpd&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;http&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5614&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.3&amp;nbsp;175276&amp;nbsp;&amp;nbsp;3724&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ss&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5616&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2456&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5617&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5619&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5621&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5622&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5623&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5624&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd apache&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5625&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.2&amp;nbsp;175276&amp;nbsp;&amp;nbsp;2440&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;/usr/sbin/httpd root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5632&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;http [root@node1&amp;nbsp;ha.d]#&amp;nbsp;ps&amp;nbsp;aux&amp;nbsp;|grep&amp;nbsp;heartbeat&amp;nbsp; root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5185&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;1.4&amp;nbsp;&amp;nbsp;65496&amp;nbsp;14348&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SLs&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;master&amp;nbsp;control&amp;nbsp;process nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5188&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58764&amp;nbsp;&amp;nbsp;7616&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;FIFO&amp;nbsp;reader&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5189&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5190&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;mcast&amp;nbsp;eth0&amp;nbsp;&amp;nbsp;&amp;nbsp; nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5191&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;write:&amp;nbsp;ping&amp;nbsp;10.10.10.2 nobody&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5192&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.7&amp;nbsp;&amp;nbsp;58892&amp;nbsp;&amp;nbsp;7744&amp;nbsp;?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SL&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;heartbeat:&amp;nbsp;read:&amp;nbsp;ping&amp;nbsp;10.10.10.2 root&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5634&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;&amp;nbsp;0.0&amp;nbsp;103304&amp;nbsp;&amp;nbsp;&amp;nbsp;896&amp;nbsp;pts/0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S+&amp;nbsp;&amp;nbsp;&amp;nbsp;20:29&amp;nbsp;&amp;nbsp;&amp;nbsp;0:00&amp;nbsp;grep&amp;nbsp;heartbeat&lt;/pre&gt;&lt;p&gt;所有资源又全部转移到node1&lt;/p&gt;&lt;p&gt;四 测试heartbeat CRM LAMP Wordpress&lt;/p&gt;&lt;p&gt;安装mysql 和php &lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;m&amp;nbsp;install&amp;nbsp;mysql-server&amp;nbsp;php&amp;nbsp;&amp;nbsp;php-mysql&lt;/pre&gt;&lt;p&gt;测试php&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;vim&amp;nbsp;/var/www/html/info.php &amp;lt;?php&amp;nbsp;&amp;nbsp; phpinfo();&amp;nbsp;&amp;nbsp; ?&amp;gt;&amp;nbsp; [root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;httpd&amp;nbsp;start&lt;/pre&gt;&lt;p&gt;打开&lt;a href=&quot;http://10.10.10.50/info.php&quot; target=&quot;_blank&quot;&gt;http://10.10.10.50/info.php&lt;/a&gt;&amp;nbsp;测试PHP 信息&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;httpd&amp;nbsp;stop&lt;/pre&gt;&lt;p&gt;测试mysql&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;mysqld&amp;nbsp;start [root@node1&amp;nbsp;ha.d]#&amp;nbsp;mysql mysql&amp;gt;&amp;nbsp;show&amp;nbsp;databases; +--------------------+ |&amp;nbsp;Database&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| +--------------------+ |&amp;nbsp;information_schema&amp;nbsp;| |&amp;nbsp;mysql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| |&amp;nbsp;test&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| +--------------------+ 3&amp;nbsp;rows&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec) mysql&amp;gt;&amp;nbsp;exit Bye [root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;mysqld&amp;nbsp;stop&lt;/pre&gt;&lt;p&gt;设置mysql data on nfs&lt;br /&gt;在nfs 服务器&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;mkdir&amp;nbsp;/home/data/mysql&lt;/pre&gt;&lt;p&gt;在节点1&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;mkdir&amp;nbsp;/data vim&amp;nbsp;/etc/my.cnf [mysqld] datadir=/data/ mount&amp;nbsp;-t&amp;nbsp;nfs&amp;nbsp;10.10.10.60:/home/data/mysql&amp;nbsp;/data /usr/bin/mysql_install_db&amp;nbsp;--user=mysql&amp;nbsp;--datadir=/data/ [root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;mysqld&amp;nbsp;start [root@node1&amp;nbsp;ha.d]#&amp;nbsp;mysql mysql&amp;gt;&amp;nbsp;create&amp;nbsp;database&amp;nbsp;wordpress; Query&amp;nbsp;OK,&amp;nbsp;1&amp;nbsp;row&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec) mysql&amp;gt;&amp;nbsp;show&amp;nbsp;databases; +--------------------+ |&amp;nbsp;Database&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| +--------------------+ |&amp;nbsp;information_schema&amp;nbsp;| |&amp;nbsp;mysql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| |&amp;nbsp;test&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| |&amp;nbsp;wordpress&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| +--------------------+ 4&amp;nbsp;rows&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.01&amp;nbsp;sec) mysql&amp;gt;&amp;nbsp;exit Bye [root@node1&amp;nbsp;ha.d]#&amp;nbsp;service&amp;nbsp;mysqld&amp;nbsp;stop [root@node1&amp;nbsp;ha.d]#&amp;nbsp;umount&amp;nbsp;/data&lt;/pre&gt;&lt;p&gt;在节点2&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@node2&amp;nbsp;/]#&amp;nbsp;mkdir&amp;nbsp;/data [root@node2&amp;nbsp;/]#&amp;nbsp;vim&amp;nbsp;/etc/my.cnf&amp;nbsp; [mysqld] datadir=/data/ [root@node2&amp;nbsp;/]#&amp;nbsp;mount&amp;nbsp;-t&amp;nbsp;nfs&amp;nbsp;10.10.10.60:/home/data/mysql&amp;nbsp;/data [root@node2&amp;nbsp;/]#&amp;nbsp;/usr/bin/mysql_install_db&amp;nbsp;--user=mysql&amp;nbsp;--datadir=/data/ [root@node2&amp;nbsp;/]#&amp;nbsp;&amp;nbsp;service&amp;nbsp;mysqld&amp;nbsp;start [root@node2&amp;nbsp;/]#&amp;nbsp;mysql mysql&amp;gt;&amp;nbsp;show&amp;nbsp;databases; +--------------------+ |&amp;nbsp;Database&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| +--------------------+ |&amp;nbsp;information_schema&amp;nbsp;| |&amp;nbsp;mysql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| |&amp;nbsp;test&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| |&amp;nbsp;wordpress&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| +--------------------+ 4&amp;nbsp;rows&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec) mysql&amp;gt;&amp;nbsp;exit Bye [root@node2&amp;nbsp;/]#&amp;nbsp;service&amp;nbsp;mysqld&amp;nbsp;stop [root@node2&amp;nbsp;/]#&amp;nbsp;umount&amp;nbsp;/data&lt;/pre&gt;&lt;p&gt;安装 heartbeat-gui&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;yum&amp;nbsp;install&amp;nbsp;pygtk2-libglade&amp;nbsp;xorg-x11-xauth&amp;nbsp;&amp;nbsp; rpm&amp;nbsp;-ivh&amp;nbsp;heartbeat-gui-2.1.4-12.el6.x86_64.rpm&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;echo&amp;nbsp;&quot;password&quot;&amp;nbsp;|&amp;nbsp;passwd&amp;nbsp;--stdin&amp;nbsp;hacluster&lt;/pre&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;yum&amp;nbsp;install&amp;nbsp;xorg-x11-xauth&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#如果未安装图型系统，要安装此组件，要不xshell报错 vim&amp;nbsp;/etc/ha.d/ha.cf&amp;nbsp; crm&amp;nbsp;on service&amp;nbsp;heartbeat&amp;nbsp;start;ssh&amp;nbsp;node2&amp;nbsp;service&amp;nbsp;heartbeat&amp;nbsp;start&lt;/pre&gt;&lt;p&gt;在xshell 执行&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;hb_gui&amp;amp;&lt;/pre&gt;&lt;p&gt;连接127.0.0.1 安装gui默认生成hacluster 用户， 默认无密码&lt;/p&gt;&lt;p&gt;请使用echo &quot;password&quot; | passwd --stdin hacluster 创建密码&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1YsoxziPK_vAAG1Dese07Q332.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;101.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1YsoxziPK_vAAG1Dese07Q332.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1YsoxziPK_vAAG1Dese07Q332.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;连接成功后如图显示&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DA/wKioL1Yso1Gze6EWAAKZHObjP-8602.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;102.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso1Gze6EWAAKZHObjP-8602.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DA/wKioL1Yso1Gze6EWAAKZHObjP-8602.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;开始添加资源 ，些次添加资源组 名为wordpress&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DA/wKioL1Yso1WA6w8AAAJpcTfpwKw005.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;103.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso1WA6w8AAAJpcTfpwKw005.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DA/wKioL1Yso1WA6w8AAAJpcTfpwKw005.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;添加第一个资源名为 ha_ip&lt;/p&gt;&lt;p&gt;类型为IPaddr&amp;nbsp; 参数为&amp;nbsp; ip&amp;nbsp; 10.10.10.5&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoyfCSILOAAQaKD0P0tA867.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;104.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1YsoyfCSILOAAQaKD0P0tA867.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoyfCSILOAAQaKD0P0tA867.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoyqiGShhAAIk0hGXwNw067.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;105.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1YsoyqiGShhAAIk0hGXwNw067.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1YsoyqiGShhAAIk0hGXwNw067.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;添加第二个资源名为ha_nfs_mysql ,和我们之前测试时使用的参数一至，为mysql的共享存储&lt;/p&gt;&lt;p&gt;类型为Filesystem&lt;/p&gt;&lt;p&gt;参数为&amp;nbsp; device&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10.10.10.60:/home/data/mysql&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; directory&amp;nbsp; &amp;nbsp;/data&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fstype&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;nfs&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DA/wKioL1Yso17yIBRiAARvpsiH7pQ984.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;106.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso17yIBRiAARvpsiH7pQ984.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DA/wKioL1Yso17yIBRiAARvpsiH7pQ984.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;添加第三个资源名为ha_nfs_httpd ,和我们之前测试时使用的参数一至，为httpd的共享存储&lt;/p&gt;&lt;p&gt;类型为Filesystem&lt;/p&gt;&lt;p&gt;参数为&amp;nbsp; device&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10.10.10.60:/home/data/html&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; directory&amp;nbsp; &amp;nbsp;/var/www/html&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fstype&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;nfs&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DA/wKioL1Yso2LiIBaZAARvaIyiVr8613.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;107.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso2LiIBaZAARvaIyiVr8613.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DA/wKioL1Yso2LiIBaZAARvaIyiVr8613.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;添加第四个资源名为ha_mysql&lt;/p&gt;&lt;p&gt;类型为我们安装的mysqld ,不需要参数&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1YsozfCG7MVAAQEVpUbnLw372.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;108.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1YsozfCG7MVAAQEVpUbnLw372.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1YsozfCG7MVAAQEVpUbnLw372.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;添加第五个资源名为ha_httpd&lt;/p&gt;&lt;p&gt;类型为我们安装的httpd ,不需要参数&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DA/wKioL1Yso2ri9PPCAAQ-PoG5mnI153.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;109.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso2ri9PPCAAQ-PoG5mnI153.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DA/wKioL1Yso2ri9PPCAAQ-PoG5mnI153.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;添加主机colocations&amp;nbsp;，为资源起动所有的位置&lt;/p&gt;&lt;p&gt;第一个为，ha_ip&amp;nbsp; ha_nfs_mysql 必须在同一个node上&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Ysoz3AF8SXAAQtBOHztsI613.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;201.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Ysoz3AF8SXAAQtBOHztsI613.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Ysoz3AF8SXAAQtBOHztsI613.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第一个为，ha_ip&amp;nbsp; ha_nfs_httpd 必须在同一个node上&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Yso0LwQQDeAAQg6v5yRSQ728.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;202.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Yso0LwQQDeAAQg6v5yRSQ728.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Yso0LwQQDeAAQg6v5yRSQ728.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第一个为，ha_mysql&amp;nbsp; ha_nfs_mysql 必须在同一个node上&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DA/wKioL1Yso3bgQ1FFAAQ2QqZ4r_w649.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;203.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso3bgQ1FFAAQ2QqZ4r_w649.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DA/wKioL1Yso3bgQ1FFAAQ2QqZ4r_w649.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第一个为，ha_httpd&amp;nbsp; ha_nfs_httpd 必须在同一个node上&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1Yso0zxY1QzAARRt1jSgag706.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;204.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Yso0zxY1QzAARRt1jSgag706.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1Yso0zxY1QzAARRt1jSgag706.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;以上设置保证所有资源启动在同一个node上，根据需要修改。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;添加资源order，意为资源的启动顺序&lt;/p&gt;&lt;p&gt;第一个为， ha_ip 比ha_nfs_mysql先启动&lt;/p&gt;&lt;p&gt;如果不能启动ha_ip ，则不启动ha_nfs_mysql&lt;/p&gt;&lt;p&gt;停止时，先停止ha_nfs_mysql ,后停止ha_ip&lt;/p&gt;&lt;p&gt;如果不能停止ha_nfs_mysql,则不停止ha_ip&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DA/wKioL1Yso4PjvHfNAAQndpj25o0458.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;301.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso4PjvHfNAAQndpj25o0458.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DA/wKioL1Yso4PjvHfNAAQndpj25o0458.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第二个为， ha_ip 比ha_nfs_httpd先启动&lt;/p&gt;&lt;p&gt;如果不能启动ha_ip ，则不启动ha_nfs_httpd&lt;/p&gt;&lt;p&gt;停止时，先停止ha_nfs_httpd ,后停止ha_ip&lt;/p&gt;&lt;p&gt;如果不能停止ha_nfs_httpd,则不停止ha_ip&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Yso1qC6cy7AAQFxMY6NAs185.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;302.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Yso1qC6cy7AAQFxMY6NAs185.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Yso1qC6cy7AAQFxMY6NAs185.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第三个为， ha_nfs_mysql 比ha_mysql先启动&lt;/p&gt;&lt;p&gt;如果不能启动ha_nfs_mysql ，则不启动ha_mysql&lt;/p&gt;&lt;p&gt;停止时，先停止ha_mysql ,后停止ha_nfs_mysql&lt;/p&gt;&lt;p&gt;如果不能停止ha_mysql,则不停止ha_nfs_mysql&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Yso1-SsAM5AAREJ6BdY-E178.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;303.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Yso1-SsAM5AAREJ6BdY-E178.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Yso1-SsAM5AAREJ6BdY-E178.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第四个为， ha_nfs_httpd 比ha_httpd先启动&lt;/p&gt;&lt;p&gt;如果不能启动ha_nfs_httpd ，则不启动ha_httpd&lt;/p&gt;&lt;p&gt;停止时，先停止ha_httpd,后停止ha_nfs_httpd&lt;/p&gt;&lt;p&gt;如果不能停止ha_httpd,则不停止ha_nfs_httpd&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DA/wKioL1Yso5byjxfXAAQqzJw8jaA468.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;304.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso5byjxfXAAQqzJw8jaA468.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DA/wKioL1Yso5byjxfXAAQqzJw8jaA468.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;右键ha_wordpress ，start 启动ha_wordpress资源&lt;/p&gt;&lt;p&gt;以上配置启动顺序为&amp;nbsp;&amp;nbsp; ha_ip --&amp;gt; ha_nfs_mysql --&amp;gt; ha_mysql&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;ha_ip --&amp;gt; ha_nfs_httpd--&amp;gt; ha_httpd&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1Yso2qi74xjAANvdP-Zk1w833.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;401.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Yso2qi74xjAANvdP-Zk1w833.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1Yso2qi74xjAANvdP-Zk1w833.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1Yso52j1VozAAOXNQybBvU544.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;402.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso52j1VozAAOXNQybBvU544.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1Yso52j1VozAAOXNQybBvU544.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;右键节点node2 standby&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Yso3HSq1HRAAOhYyT1uLo785.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;403.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Yso3HSq1HRAAOhYyT1uLo785.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Yso3HSq1HRAAOhYyT1uLo785.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;资源全部转移动node1&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DB/wKioL1Yso6iQ7f0lAAOqPxmcIVM717.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;404.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1Yso6iQ7f0lAAOqPxmcIVM717.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DB/wKioL1Yso6iQ7f0lAAOqPxmcIVM717.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;安装wordpress&lt;/p&gt;&lt;p&gt;wget&amp;nbsp; &lt;a href=&quot;https://cn.wordpress.org/wordpress-4.3.1-zh_CN.zip&quot; target=&quot;_blank&quot;&gt;https://cn.wordpress.org/wordpress-4.3.1-zh_CN.zip&lt;/a&gt;&lt;br /&gt;unzip wordpress-4.3.1-zh_CN.zip&lt;br /&gt;cp -rf&amp;nbsp; wordpress/ /var/www/html/&lt;br /&gt;&lt;a href=&quot;http://10.10.10.5/wordpress/wp-admin/setup-config.php&quot; target=&quot;_blank&quot;&gt;http://10.10.10.5/wordpress/wp-admin/setup-config.php&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Ysp-qQaPlHAALhjCQT9F4273.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;501.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Ysp-qQaPlHAALhjCQT9F4273.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Ysp-qQaPlHAALhjCQT9F4273.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1YsqB7DM1q9AAI1S0gY4uY534.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;502.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1YsqB7DM1q9AAI1S0gY4uY534.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1YsqB7DM1q9AAI1S0gY4uY534.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Ysp-_zV5ooAAM9bVTaDz0507.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;503.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Ysp-_zV5ooAAM9bVTaDz0507.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1Ysp-_zV5ooAAM9bVTaDz0507.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;如果没有设置权限 ，&lt;/p&gt;&lt;p&gt;cd /var/www/html/&lt;br /&gt;vim wp-config.php&lt;/p&gt;&lt;p&gt;复制上图中生成的代码，然后点击进行安装。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DB/wKioL1YsqCDydrbvAAJkqo0TxcI291.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;504.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1YsqCDydrbvAAJkqo0TxcI291.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DB/wKioL1YsqCDydrbvAAJkqo0TxcI291.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1Ysp_LjhICLAAFpSo-n7Ug547.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;505.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Ysp_LjhICLAAFpSo-n7Ug547.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DE/wKiom1Ysp_LjhICLAAFpSo-n7Ug547.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/74/DB/wKioL1YsqCfRL9_hAANKK9ZqbWs458.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;506.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1YsqCfRL9_hAANKK9ZqbWs458.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/74/DB/wKioL1YsqCfRL9_hAANKK9ZqbWs458.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;发表一个博客&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Ysp_ngqq80AAHYSk2kANc849.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;507.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1Ysp_ngqq80AAHYSk2kANc849.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DE/wKiom1Ysp_ngqq80AAHYSk2kANc849.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;设置node2 为 standby&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1YsqDCwoDjWAAOiaNfR-h4189.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;508.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKioL1YsqDCwoDjWAAOiaNfR-h4189.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1YsqDCwoDjWAAOiaNfR-h4189.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/74/DB/wKioL1YsqDCwoDjWAAOiaNfR-h4189.jpg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1YsqAei5EZtAAOLGbaA4Vs223.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;509.PNG&quot; style=&quot;float:none;&quot; alt=&quot;wKiom1YsqAei5EZtAAOLGbaA4Vs223.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/74/DE/wKiom1YsqAei5EZtAAOLGbaA4Vs223.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;结果刷新后发表的内容也可以显示&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/1step/1705854', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('305', 'wordpress博客安装redis缓存荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;Redis是一个开源、支持网络、基于内存的key-value存储系统，类似memcached，性能极高，支持超过100K+ 每秒的读写频率，一些大型的网站例如ITeye(JavaEye)和CSDN现在都用到了Redis。&lt;/p&gt;&lt;p&gt;与memcached相比，Redis提供了持久化存储，重启了服务器后memcached需要重新创建缓存，而Redis依赖快照进行持久化，即使服务器刚开机启动也不会导致负载陡增。Redis缓存比较适合大流量的Wordpress。&lt;/p&gt;&lt;p&gt;当你的WordPress中的文章达到上万篇，随着流量的增加，Wordpress的服务器压力也随之不断加大，Wordpress发布文章和后台相关的操作都会变得缓慢，这时如果单从硬件上投入来提高Wordpress性能显然不划算。&lt;/p&gt;&lt;p&gt;利用Redis将WordPress页面直接缓存在服务器的内存中，这样在避免了PHP重复执行操作的同时，内存的极速响应能够最大限度地提升Wordpress页面的访问速度，部落实际测试发现页面执行时间可以降低到0.00X秒级别，比没有使用Redis缓存提升几倍甚至十几倍以上。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:#FFA500;&quot;&gt;环境说明：centos6.6 LNMP环境&lt;/span&gt;&lt;/p&gt;&lt;p&gt;redis官网下载源码：&lt;a href=&quot;http://redis.io/download&quot; style=&quot;background-color:inherit;line-height:1.5;&quot; target=&quot;_blank&quot;&gt;http://redis.io/download&lt;/a&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;wget&amp;nbsp;http://download.redis.io/releases/redis-3.0.2.tar.gz [root@localhost&amp;nbsp;src]#&amp;nbsp;tar&amp;nbsp;zxvf&amp;nbsp;redis-3.0.2.tar.gz&amp;nbsp; [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;cd&amp;nbsp;redis-3.0.2 [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;make&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;line-height:1.5;&quot;&gt;&amp;nbsp;#redis的安装非常简单，已经有现成的Makefile文件，直接运行make命令即可&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;安装完成后在src目录下，会生成几个可执行文件：redis-benchmark，redis-check-aof，redis-check-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;dump,redis-cli，redis-sentinel，redis-server。这几个文件，加上一个redis.conf就构成了整个&lt;/span&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;redis的最终可用包。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;&lt;br style=&quot;background-color:inherit;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;下面你可以把这几个可执行文件和redis.conf文件复制到你所希望的地方，比如/usr/local/redis/bin 和/usr/local/redis/etc 下面的，命令如下：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;cd&amp;nbsp;redis-3.0.2 [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;mkdir&amp;nbsp;-p&amp;nbsp;/usr/local/redis/{bin,var,etc} [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;cd&amp;nbsp;src/ [root@localhost&amp;nbsp;src]#&amp;nbsp;cp&amp;nbsp;redis-benchmark&amp;nbsp;redis-check-aof&amp;nbsp;redis-check-dump&amp;nbsp;redis-cli&amp;nbsp;redis-sentinel&amp;nbsp;redis-server&amp;nbsp;/usr/local/redis/bin/ [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;cp&amp;nbsp;/usr/local/src/redis-3.0.2/redis.conf&amp;nbsp;/usr/local/redis/etc [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;ln&amp;nbsp;-s&amp;nbsp;/usr/local/redis/bin/*&amp;nbsp;/usr/bin/&lt;/pre&gt;&lt;p&gt;修改redis.conf配置文件：&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;sed&amp;nbsp;-i&amp;nbsp;&#039;s#pidfile.*$#pidfile&amp;nbsp;/var/run/redis.pid#&#039;&amp;nbsp;/usr/local/redis/etc/redis.conf&amp;nbsp; [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;sed&amp;nbsp;-i&amp;nbsp;&#039;s#logfile.*$#logfile&amp;nbsp;/usr/local/redis/var/redis.log#&#039;&amp;nbsp;/usr/local/redis/etc/redis.conf&amp;nbsp; [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;sed&amp;nbsp;-i&amp;nbsp;&#039;s#^dir.*$#dir&amp;nbsp;/usr/local/redis/var#&#039;&amp;nbsp;/usr/local/redis/etc/redis.conf&amp;nbsp; [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;sed&amp;nbsp;-i&amp;nbsp;&#039;s#daemonize&amp;nbsp;no#daemonize&amp;nbsp;yes#&#039;&amp;nbsp;/usr/local/redis/etc/redis.conf&lt;/pre&gt;&lt;p&gt;注意，默认复制过去的redis.conf文件的daemonize参数为no，所以redis不会在后台运行，这时要测试，我们需要重新开一个终端。修改为yes则为后台运行redis。另外配置文件中规定了pid文件，log文件和数据文件的地址，如果有需要先修改，默认log信息定向到标准输出。&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;echo&amp;nbsp;&#039;vm.overcommit_memory&amp;nbsp;=&amp;nbsp;1&#039;&amp;gt;&amp;gt;&amp;nbsp;/etc/sysctl.conf&amp;nbsp; [root@localhost&amp;nbsp;redis-3.0.2]#&amp;nbsp;sysctl&amp;nbsp;-p&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;配置开机启动redis-server&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;wget&amp;nbsp;https://raw.githubusercontent.com/lj2007331/lnmp/master/init/Redis-server-init-CentOS [root@localhost&amp;nbsp;src]#&amp;nbsp;mv&amp;nbsp;Redis-server-init-CentOS&amp;nbsp;/etc/init.d/redis-server [root@localhost&amp;nbsp;src]#&amp;nbsp;chmod&amp;nbsp;+x&amp;nbsp;/etc/init.d/redis-server&amp;nbsp; [root@localhost&amp;nbsp;src]#&amp;nbsp;chkconfig&amp;nbsp;--add&amp;nbsp;redis-server [root@localhost&amp;nbsp;src]#&amp;nbsp;chkconfig&amp;nbsp;redis-server&amp;nbsp;on&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;启动redis&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;service&amp;nbsp;redis-server&amp;nbsp;start&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;测试：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;/usr/local/redis/bin/redis-cli 127.0.0.1:6379&amp;gt;&amp;nbsp;set&amp;nbsp;123&amp;nbsp;baby OK 127.0.0.1:6379&amp;gt;&amp;nbsp;get&amp;nbsp;123 &quot;baby&quot; 127.0.0.1:6379&amp;gt;&amp;nbsp;exit&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;关闭redis&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;service&amp;nbsp;redis-server&amp;nbsp;stop&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;安装redis php客户端&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;wget&amp;nbsp;http://pecl.php.net/get/redis-2.2.3.tgz [root@localhost&amp;nbsp;src]#&amp;nbsp;tar&amp;nbsp;zxf&amp;nbsp;redis-2.2.3.tgz&amp;nbsp; [root@localhost&amp;nbsp;src]#&amp;nbsp;cd&amp;nbsp;redis-2.2.3&lt;/pre&gt;&lt;p&gt;&lt;br style=&quot;background-color:inherit;&quot; /&gt;执行phpize命令，生成configure可执行文件&lt;br style=&quot;background-color:inherit;&quot; /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;redis-2.2.3]#&amp;nbsp;/usr/local/php-fpm/bin/phpize&amp;nbsp; [root@localhost&amp;nbsp;redis-2.2.3]#&amp;nbsp;./configure&amp;nbsp;--with-php-config=/usr/local/php-fpm/bin/php-config&amp;nbsp; [root@localhost&amp;nbsp;redis-2.2.3]#&amp;nbsp;make&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;make&amp;nbsp;install&lt;/pre&gt;&lt;p&gt;php.ini配置文件，添加extension&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;~]#&amp;nbsp;sed&amp;nbsp;-i&amp;nbsp;&#039;/;&amp;nbsp;extension_dir&amp;nbsp;=&amp;nbsp;&quot;ext&quot;/aextension&amp;nbsp;=&amp;nbsp;&quot;redis.so&quot;&#039;&amp;nbsp;/usr/local/php-fpm/etc/php.ini&amp;nbsp; [root@localhost&amp;nbsp;~]#&amp;nbsp;service&amp;nbsp;php-fpm&amp;nbsp;restart&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;使wordpress支持redis&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;你需要一个客户端开发包以便PHP可以连接到redis服务端 ，&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;这里我们推荐predis. 加入WordPress的根目录，执行下面&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;wget&amp;nbsp;http://uploads.staticjw.com/ji/jim/predis.php [root@localhost&amp;nbsp;src]#&amp;nbsp;chown&amp;nbsp;php-fpm:php-fpm&amp;nbsp;predis.php&lt;/pre&gt;&lt;p&gt;前端缓存的PHP脚本，加入WordPress的根目录，执行下面&lt;br style=&quot;background-color:inherit;&quot; /&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;src]#&amp;nbsp;wget&amp;nbsp;https://gist.githubusercontent.com/JimWestergren/3053250/raw/d9e279e31cbee4a1520f59108a4418ae396b2dde/index-with-redis.php [root@localhost&amp;nbsp;src]#&amp;nbsp;chown&amp;nbsp;php-fpm:php-fpm&amp;nbsp;index-with-redis.php&amp;nbsp; [root@localhost&amp;nbsp;src]#&amp;nbsp;mv&amp;nbsp;predis.php&amp;nbsp;index-with-redis.php&amp;nbsp;/data/www/blog&lt;/pre&gt;&lt;p&gt;根据自己需求修改index-with-redis.php，修改如下：&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;$cf&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;set&amp;nbsp;to&amp;nbsp;1&amp;nbsp;if&amp;nbsp;you&amp;nbsp;are&amp;nbsp;using&amp;nbsp;cloudflare $debug&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;set&amp;nbsp;to&amp;nbsp;1&amp;nbsp;if&amp;nbsp;you&amp;nbsp;wish&amp;nbsp;to&amp;nbsp;see&amp;nbsp;execution&amp;nbsp;time&amp;nbsp;and&amp;nbsp;cache&amp;nbsp;actions $display_powered_by_redis&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;&amp;nbsp;//&amp;nbsp;set&amp;nbsp;to&amp;nbsp;1&amp;nbsp;if&amp;nbsp;you&amp;nbsp;want&amp;nbsp;to&amp;nbsp;display&amp;nbsp;a&amp;nbsp;powered&amp;nbsp;by&amp;nbsp;redis&amp;nbsp;message&amp;nbsp;with&amp;nbsp;execution&amp;nbsp;time,&amp;nbsp;see&amp;nbsp;below&lt;/pre&gt;&lt;p&gt;如果你正在使用cloudflare，请设置cf = 1; ，&lt;/p&gt;&lt;p&gt;如果你想在页面上看到脚本执行时间和缓存加载时间，请设置$debug = 1; 浏览器最下方会显示this is cache：&lt;/p&gt;&lt;p&gt;display_powered_by_redis = 1表示显示powered_by信息。如下图右下角图标：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/e/u261/themes/default/images/spacer.gif&quot; style=&quot;background:url(&amp;quot;/e/u261/lang/zh-cn/images/localimage.png&amp;quot;) no-repeat center;border:1px solid #ddd;&quot; alt=&quot;spacer.gif&quot; /&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/6F/96/wKiom1WiGaHBB7V1AAByoJyiy64741.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://s3.51cto.com/wyfs02/M00/6F/96/wKiom1WiGaHBB7V1AAByoJyiy64741.jpg&quot; title=&quot;redis.jpg&quot; alt=&quot;wKiom1WiGaHBB7V1AAByoJyiy64741.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;替换index.php&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@localhost&amp;nbsp;blog]#&amp;nbsp;mv&amp;nbsp;index.php&amp;nbsp;index.php.bak [root@localhost&amp;nbsp;blog]#&amp;nbsp;mv&amp;nbsp;index-with-redis.php&amp;nbsp;index.php&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;缓存问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;index-with-redis.php中有注释&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;appending&amp;nbsp;a&amp;nbsp;?c=y&amp;nbsp;to&amp;nbsp;a&amp;nbsp;url&amp;nbsp;deletes&amp;nbsp;the&amp;nbsp;entire&amp;nbsp;cache&amp;nbsp;of&amp;nbsp;the&amp;nbsp;domain,&amp;nbsp;only&amp;nbsp;works&amp;nbsp;when&amp;nbsp;you&amp;nbsp;are&amp;nbsp;logged&amp;nbsp;in&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;appending&amp;nbsp;a&amp;nbsp;?r=y&amp;nbsp;to&amp;nbsp;a&amp;nbsp;url&amp;nbsp;deletes&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;of&amp;nbsp;that&amp;nbsp;url &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;submitting&amp;nbsp;a&amp;nbsp;comment&amp;nbsp;deletes&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;of&amp;nbsp;that&amp;nbsp;page &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;refreshing&amp;nbsp;(f5)&amp;nbsp;a&amp;nbsp;page&amp;nbsp;deletes&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;of&amp;nbsp;that&amp;nbsp;page&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;登录后台网站url后面加上?c=y即可刷新整个网站&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;可以在网站页面后面加上?r=y即可手工刷新&lt;/p&gt;&lt;p&gt;提交评论会自动刷新页面&lt;/p&gt;&lt;p&gt;刷新(f5)页面也可以刷新页面&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;&lt;span style=&quot;background-color:inherit;&quot;&gt;刷新网页查看缓存效果，查看源代码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;360浏览器页面最下角会显示类似：this is a cache: 0.04534&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;F5刷新页面缓存时间会变化&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;&lt;br style=&quot;background-color:inherit;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;color:rgb(192,0,0);&quot;&gt;&lt;strong style=&quot;background-color:inherit;&quot;&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;注意事项&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;1、注意，Wordpress Redis缓存PHP版本在5.3以上&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color:inherit;line-height:1.5;&quot;&gt;2、Wordpress Redis缓存加速效果无疑是明显的，特别页面多访问大的网站博客，在使用Wordpress Redis缓存加速时请禁止其它的所有缓存插件，以免造成不必要的冲突。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/mofansheng/1673829', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('306', '解决PPTP错误：ppp:compressor dropped pkt荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;服务器版本：CENTOS 6.4&lt;/p&gt;&lt;p&gt;内核：2.6.32-358.6.2.el6.x86_64&lt;/p&gt;&lt;p&gt;服务：PPTP服务。&lt;/p&gt;&lt;p&gt;故障：搭建好PPTP服务后使用还算比较正常，但是系统会出现报错，如下:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/4D/C9/wKioL1RZ03-yyzqPAATdc5MdzWM202.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;pptpd.jpg&quot; alt=&quot;wKioL1RZ03-yyzqPAATdc5MdzWM202.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/4D/C9/wKioL1RZ03-yyzqPAATdc5MdzWM202.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 使用VPN访问大部分网站都是正常的，但是我需要访问这个网站的时候就无法访问了：&lt;a href=&quot;http://www.wellsfargo.com&quot; target=&quot;_blank&quot;&gt;www.wellsfargo.com&lt;/a&gt;，这个站点出故障的几率和中500万的几率差不多，所以还是VPN的问题，那么问题就来了，找根本原因吧。&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;text-transform:none;background-color:rgb(255,255,255);text-indent:0px;font:13px/20px arial;white-space:normal;float:none;letter-spacing:normal;color:rgb(0,128,0);word-spacing:0px;&quot;&gt;&lt;/span&gt;经内事百度，外事谷歌后得知：&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 原因是由于MTU的原因，具体问题请自行google.解决办法是通过打补丁，但是我们没搞明白，更没有去动手。默认的MTU为1396，如下图。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M01/4D/CB/wKiom1RZ3B7ySGMgAAHbRmT7Gfk276.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;ifconfig.jpg&quot; alt=&quot;wKiom1RZ3B7ySGMgAAHbRmT7Gfk276.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M01/4D/CB/wKiom1RZ3B7ySGMgAAHbRmT7Gfk276.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;那解决办法不就是改变MTU吗？那我手动修改后可以正常访问富国银行了，但是下一次拔号后还是1396，没有从根本上解决，那就需要从根本解决问题。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;临时解决办法就是编写一个修改MTU的脚本（网上找的脚本，感谢作者），如下：&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;#!/bin/sh CURRENT_MTU=&quot;`ifconfig&amp;nbsp;$1&amp;nbsp;|&amp;nbsp;grep&amp;nbsp;-Po&amp;nbsp;&#039;(?&amp;lt;=MTU:)([0-9]+)&#039;`&quot; FIXED_MTU=&quot;`expr&amp;nbsp;$CURRENT_MTU&amp;nbsp;+&amp;nbsp;4`&quot; ifconfig&amp;nbsp;$1&amp;nbsp;mtu&amp;nbsp;$FIXED_MTU echo&amp;nbsp;&quot;Increased&amp;nbsp;MTU&amp;nbsp;for&amp;nbsp;$1&amp;nbsp;to&amp;nbsp;$FIXED_MTU&amp;nbsp;(from&amp;nbsp;$CURRENT_MTU)&amp;nbsp;to&amp;nbsp;fix&amp;nbsp;MPPE&amp;nbsp;Microsoft&amp;nbsp;Point-to-Point&amp;nbsp;bug&amp;nbsp;#330973&quot;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;经过一翻努力和实验，终于找到了解决办法。&lt;/p&gt;&lt;p&gt;解决方法：&lt;/p&gt;&lt;ol style=&quot;list-style-type:decimal;&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;/etc/pptp/ip-up这个文件有点意思，可能就是拔号是运行的一个脚本，那么我们看一下。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;vim /etc/pptp/ip-up&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;#!/bin/bash #&amp;nbsp;This&amp;nbsp;file&amp;nbsp;should&amp;nbsp;not&amp;nbsp;be&amp;nbsp;modified&amp;nbsp;--&amp;nbsp;make&amp;nbsp;local&amp;nbsp;changes&amp;nbsp;to #&amp;nbsp;/etc/ppp/ip-up.local&amp;nbsp;instead PATH=/sbin:/usr/sbin:/bin:/usr/bin export&amp;nbsp;PATH LOGDEVICE=$6 REALDEVICE=$1 [&amp;nbsp;-f&amp;nbsp;/etc/sysconfig/network-scripts/ifcfg-${LOGDEVICE}&amp;nbsp;]&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;/etc/sysconfig/network-scripts/ifup-post&amp;nbsp;--realdevice&amp;nbsp;${REALDEVICE}&amp;nbsp;ifcfg-${LOGDEVICE} /etc/ppp/ip-up.ipv6to4&amp;nbsp;${LOGDEVICE} [&amp;nbsp;-x&amp;nbsp;/etc/ppp/ip-up.local&amp;nbsp;]&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;/etc/ppp/ip-up.local&amp;nbsp;&quot;$@&quot; exit&amp;nbsp;0&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;4.ip-up文件中有一行显示的是# /etc/ppp/ip-up.local instead和[ -x /etc/ppp/ip-up.local ] &amp;amp;&amp;amp; /etc/ppp/ip-up.local 就是提示可以运行ip-up.local的脚本，那么我们将刚才的脚本放到这个位置，并命名为ip-up.local，加上+x权限。&lt;/p&gt;&lt;p&gt;5.service pptpd restart&lt;/p&gt;&lt;p&gt;6.VPN重新拔号，MTU已变成1400了。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M00/4D/CA/wKioL1RZ35OikOLIAAHbhNhhjlU049.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img title=&quot;2014-11-05_162529.jpg&quot; alt=&quot;wKioL1RZ35OikOLIAAHbhNhhjlU049.jpg&quot; src=&quot;http://s3.51cto.com/wyfs02/M00/4D/CA/wKioL1RZ35OikOLIAAHbhNhhjlU049.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;7.访问富国银行正常了，错误日志已不再有，完美解决该问题。&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/michael2017/1572209', '3', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('307', '在编程中为所欲为[圣诞版]荐 ', '&lt;div class=&quot;artical-content-bak main-content&quot;&gt; 						&lt;div class=&quot;con artical-content editor-preview-side&quot;&gt;&lt;p&gt;众所周知，在Java中final String中的值是一成不变的。大家都知道String的+(拼接)运算会丢弃内存引用并在内存中重新开拓地址，事实上也确实如此。但final的变量真的是一成不变的吗？谨以此文打开程序员思路，跳出定式思维，希望本文会给你的程序员生涯带来新的思考。&lt;/p&gt; &lt;h1&gt;一个简单的例子&lt;/h1&gt; &lt;p&gt;这个例子很久远，早有前辈做过，但并不是所有的程序员都接触过。通常喜欢“猎奇”的程序员对此不会陌生。&lt;/p&gt; &lt;pre&gt;&lt;code&gt; import java.lang.reflect.Field;  public class ChangeFinalString {      public static void main(String[] args) throws Exception {         final String s = &quot;12345: caiyongji&quot;;         System.out.println(s);         System.out.println(&quot;hashcode: &quot; + s.hashCode());         Field f = String.class.getDeclaredField(&quot;value&quot;);         f.setAccessible(true);         char[] value = (char[]) f.get(s);         value[0] = (char) 20851;         value[1] = (char) 27880;         value[2] = (char) 20844;         value[3] = (char) 20247;         value[4] = (char) 21495;         System.out.println(s);         System.out.println(&quot;hashcode: &quot; + s.hashCode());     } } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;例子中，通过final初始化一个String，然后反射获取String类中名为value的Field，并重新赋值value。执行后，你会发现String的hashcode值没有变，String的值却变了。另外，你还会发现这几行简单代码的彩蛋。&lt;/p&gt; &lt;h1&gt;得出结论&lt;/h1&gt; &lt;p&gt;看！是不是觉得常规可以被打破，只要有足够的技巧就可以在编程中为所欲为？也许有些严谨的程序员会指出hashcode方法的实现依赖于JVM，并不能直接反映内存的情况。说实话，你甚至不需要记住本文的例子，我只是想打破你固有的思维模式。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;然而，上面的并不是我想说的真正结论。&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;下面，才是“&lt;strong&gt;圣诞版&lt;/strong&gt;”真正的意义。&lt;/p&gt; &lt;p&gt;也许有些人会觉得收获颇丰，我又掌握了一个面试问题的答案。没错，甚至像阿里、百度这样的国内巨头企业中，有一些面试官（注意是&lt;strong&gt;有一些&lt;/strong&gt;），确实会问一些&amp;quot;final变量是不可变&amp;quot;这样的silly question. 他们钻研一门语言甚至知道所有具体实现的细节，甚至语言的bug。 但换个角度，在如此钻研的同时，你是否考虑了你的时间成本、女朋友以及后代？！&lt;/p&gt; &lt;h2&gt;接口论&lt;/h2&gt; &lt;p&gt;作为一个程序员，你是业务逻辑和代码实现的接口。没人在乎你怎么实现的业务，只在乎你的代码是否高效、准确、易用、易拓展（具体讲，比如多少ms返回结果，参数结构是否简单，是否容易添加新功能）。同理，你使用Java作为你实现业务逻辑的工具，你更可以选择Python、Node.js、Kotlin甚至Linux shell脚本，那么你是否要理解Java语言的所有实现？正如我在《如何成为10倍速的程序员》中所说的不要记忆。&lt;/p&gt; &lt;p&gt;我是在号召大家不求甚解吗？  &lt;br/&gt;是的。&lt;/p&gt; &lt;h2&gt;反设计&lt;/h2&gt; &lt;p&gt;如果把编程手段当成一种工具，无外乎语言、文档、框架，这些都可以当成是工具的一部分。不要试图用锤子打开螺丝钉，虽然你确实可以做到。但这是反设计的。就像这个例子一样，你可以通过reflect改变final，但说白了，这种技巧并没有什么用，它会给你带来很多麻烦，比如在拓展时、在java版本升级时考虑兼容性。&lt;/p&gt; &lt;p&gt;所以，在使用一种“工具”时，要尽量按照工具制造者的思维模式进行使用，所有这些所谓的“技巧”都是在反设计。&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;最后，专注、严谨、逻辑清晰是一个程序员的品质，但在技术迭代如此迅速的大背景下，&lt;strong&gt;在代码中追求极致是一个人类无法做到的&lt;/strong&gt;（如果用掌握技巧的&lt;strong&gt;多&lt;/strong&gt;来衡量的话，你永远无法掌握所有技巧，并且，在技术迭代过程中，你原本掌握的技巧也在逐步淘汰。），别忘了你生活中的朋友、家人和你的爱好。&lt;/p&gt; &lt;p&gt;过完圣诞就是新的一年，祝所有的程序员朋友圣诞快乐（本文写于平安夜），同时在新的一年里开启程序员新的、不一样的人生。&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/12240152/2054009', '1', 'CSDN', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('308', '我的“技术架构”之旅荐 ', '', 'http://blog.51cto.com/yaocoder/1982646', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('309', '一次生产事故的优化经历荐 ', '', 'http://blog.51cto.com/ityouknow/1978255', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('310', '海外IT工程师工作福利揭秘  一个网工的十年奋斗史(末篇)荐 ', '', 'http://blog.51cto.com/gingerbeer/1969541', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('311', '【玖哥乱弹】编程语言间的斗争荐 ', '', 'http://blog.51cto.com/dongfeng9ge/1963522', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('312', '一个网工的十年奋斗史 - 移民篇荐 ', '', 'http://blog.51cto.com/gingerbeer/1962179', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('313', '技术博客那些事儿荐 ', '', 'http://blog.51cto.com/ityouknow/1957622', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('314', '30岁程序员的迷茫荐 ', '', 'http://blog.51cto.com/ityouknow/1955323', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('315', '如何写出一份高逼格的简历？新技能 get√ 荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;text-align:center;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:24px;letter-spacing:0px;color:rgb(255,0,0);&quot;&gt;如何写出一份高逼格的简历&amp;nbsp; get√&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;color:rgb(255,0,0);&quot;&gt;1.前言： &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;letter-spacing:0px;font-size:19px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:18px;&quot;&gt;毕业季到了，很多同学想进入&lt;/span&gt;IT行业。但是简历明明投放了很多，却没有收到面试通知，怎么回事？&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;&quot;&gt;如果你还是只会写word简历，那你就out啦！&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;letter-spacing:0px;&quot;&gt;好的简历是成功的一半，你应该有一份高逼格的简历，下面就来说说怎么才能写出高逼格的简历。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;letter-spacing:0px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:20px;color:rgb(255,0,0);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:20px;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;&quot;&gt;&lt;span style=&quot;font-size:20px;font-family:&#039;微软雅黑&#039;;letter-spacing:0px;&quot;&gt;2.使用&lt;/span&gt;github展示自己的个人简历（高逼格一）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;font-size:18px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;font-size:18px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;letter-spacing:0px;font-size:19px;&quot;&gt;我们可以利用&lt;/span&gt; Github 的静态页面托管服务 Github Pages 来帮助我们做页面展示。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;font-size:18px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-size:20px;color:rgb(255,0,0);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:20px;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;&quot;&gt;&lt;span style=&quot;font-size:20px;font-family:&#039;微软雅黑&#039;;letter-spacing:0px;&quot;&gt;2.1什么是&lt;/span&gt; Github Pages？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;font-size:18px;&quot;&gt;Github Pages 是 Github 的静态页面托管服务。它设计的初衷是为了用户能够直接通过 Github 仓库来托管用户个人、组织或是项目的专属页面。参考：&lt;a href=&quot;https://help.github.com/articles/what-is-github-pages/&quot; target=&quot;_blank&quot;&gt;https://help.github.com/articles/what-is-github-pages/&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:5px;margin-right:0;margin-bottom:5px;margin-left:0;text-indent:0;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:0;margin-right:0;margin-bottom:16px;margin-left:0;text-indent:0;line-height:28px;background:rgb(249,249,249);&quot;&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;;letter-spacing:0px;&quot;&gt;2.2Github Pages 的限制：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:auto;margin-bottom:auto;margin-left:48px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:13px;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;·&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:18px;&quot;&gt;仓库存储的所有文件不能超过&lt;/span&gt; 1 GB&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:auto;margin-bottom:auto;margin-left:48px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:13px;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;·&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:18px;&quot;&gt;页面的带宽限制是低于每月&lt;/span&gt; 100 GB 或是每月 100,000 次请求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:auto;margin-bottom:auto;margin-left:48px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:13px;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;·&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;font-size:18px;&quot;&gt;每小时最多只能部署&lt;/span&gt; 10 个静态网站。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;background-color:rgb(249,249,249);&quot;&gt;2.3git基础命令&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;查看、添加、提交、删除、找回，重置修改文件 git&amp;nbsp;help&amp;nbsp;&amp;lt;command&amp;gt;&amp;nbsp;#&amp;nbsp;显示command的help git&amp;nbsp;show&amp;nbsp;#&amp;nbsp;显示某次提交的内容&amp;nbsp;git&amp;nbsp;show&amp;nbsp;$id git&amp;nbsp;co&amp;nbsp;--&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;抛弃工作区修改 git&amp;nbsp;co&amp;nbsp;.&amp;nbsp;#&amp;nbsp;抛弃工作区修改 git&amp;nbsp;add&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;将工作文件修改提交到本地暂存区 git&amp;nbsp;add&amp;nbsp;.&amp;nbsp;#&amp;nbsp;将所有修改过的工作文件提交暂存区 git&amp;nbsp;rm&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;从版本库中删除文件 git&amp;nbsp;rm&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;--cached&amp;nbsp;#&amp;nbsp;从版本库中删除文件，但不删除文件 git&amp;nbsp;reset&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;从暂存区恢复到工作文件 git&amp;nbsp;reset&amp;nbsp;--&amp;nbsp;.&amp;nbsp;#&amp;nbsp;从暂存区恢复到工作文件 git&amp;nbsp;reset&amp;nbsp;--hard&amp;nbsp;#&amp;nbsp;恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改 git&amp;nbsp;ci&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;git&amp;nbsp;ci&amp;nbsp;.&amp;nbsp;git&amp;nbsp;ci&amp;nbsp;-a&amp;nbsp;#&amp;nbsp;将git&amp;nbsp;add,&amp;nbsp;git&amp;nbsp;rm和git&amp;nbsp;ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git&amp;nbsp;ci&amp;nbsp;-am&amp;nbsp;&quot;some&amp;nbsp;comments&quot; git&amp;nbsp;ci&amp;nbsp;--amend&amp;nbsp;#&amp;nbsp;修改最后一git&amp;nbsp;diff&amp;nbsp;&amp;lt;branch1&amp;gt;..&amp;lt;branch2&amp;gt;&amp;nbsp;#&amp;nbsp;在两个分支之间比较 git&amp;nbsp;diff&amp;nbsp;--staged&amp;nbsp;#&amp;nbsp;比较暂存区和版本库差异 git&amp;nbsp;diff&amp;nbsp;--cached&amp;nbsp;#&amp;nbsp;比较暂存区和版本库差异 git&amp;nbsp;diff&amp;nbsp;--stat&amp;nbsp;#&amp;nbsp;仅仅比较统计信息 次提交记录 git&amp;nbsp;revert&amp;nbsp;&amp;lt;$id&amp;gt;&amp;nbsp;#&amp;nbsp;恢复某次提交的状态，恢复动作本身也创建次提交对象 git&amp;nbsp;revert&amp;nbsp;HEAD&amp;nbsp;#&amp;nbsp;恢复最后一次提交的状态 查看文件diff git&amp;nbsp;diff&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;比较当前文件和暂存区文件差异&amp;nbsp;git&amp;nbsp;diff git&amp;nbsp;diff&amp;nbsp;&amp;lt;id1&amp;gt;&amp;lt;id2&amp;gt;&amp;nbsp;#&amp;nbsp;比较两次提交之间的差异 查看提交记录 git&amp;nbsp;log&amp;nbsp;git&amp;nbsp;log&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;查看该文件每次提交记录 git&amp;nbsp;log&amp;nbsp;-p&amp;nbsp;&amp;lt;file&amp;gt;&amp;nbsp;#&amp;nbsp;查看每次详细修改内容的diff git&amp;nbsp;log&amp;nbsp;-p&amp;nbsp;-2&amp;nbsp;#&amp;nbsp;查看最近两次详细修改内容的diff git&amp;nbsp;log&amp;nbsp;--stat&amp;nbsp;#查看提交统计信息 tig Mac上可以使用tig代替diff和log，brew&amp;nbsp;install&amp;nbsp;tig Git&amp;nbsp;本地分支管理 查看、切换、创建和删除分支 git&amp;nbsp;br&amp;nbsp;-r&amp;nbsp;#&amp;nbsp;查看远程分支 git&amp;nbsp;br&amp;nbsp;&amp;lt;new_branch&amp;gt;&amp;nbsp;#&amp;nbsp;创建新的分支 git&amp;nbsp;br&amp;nbsp;-v&amp;nbsp;#&amp;nbsp;查看各个分支最后提交信息 git&amp;nbsp;br&amp;nbsp;--merged&amp;nbsp;#&amp;nbsp;查看已经被合并到当前分支的分支 git&amp;nbsp;br&amp;nbsp;--no-merged&amp;nbsp;#&amp;nbsp;查看尚未被合并到当前分支的分支 git&amp;nbsp;co&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;#&amp;nbsp;切换到某个分支 git&amp;nbsp;co&amp;nbsp;-b&amp;nbsp;&amp;lt;new_branch&amp;gt;&amp;nbsp;#&amp;nbsp;创建新的分支，并且切换过去 git&amp;nbsp;co&amp;nbsp;-b&amp;nbsp;&amp;lt;new_branch&amp;gt;&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;#&amp;nbsp;基于branch创建新的new_branch git&amp;nbsp;co&amp;nbsp;$id&amp;nbsp;#&amp;nbsp;把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除 git&amp;nbsp;co&amp;nbsp;$id&amp;nbsp;-b&amp;nbsp;&amp;lt;new_branch&amp;gt;&amp;nbsp;#&amp;nbsp;把某次历史提交记录checkout出来，创建成一个分支 git&amp;nbsp;br&amp;nbsp;-d&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;#&amp;nbsp;删除某个分支 git&amp;nbsp;br&amp;nbsp;-D&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;#&amp;nbsp;强制删除某个分支&amp;nbsp;(未被合并的分支被删除的时候需要强制) &amp;nbsp;分支合并和rebase git&amp;nbsp;merge&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;#&amp;nbsp;将branch分支合并到当前分支 git&amp;nbsp;merge&amp;nbsp;origin/master&amp;nbsp;--no-ff&amp;nbsp;#&amp;nbsp;不要Fast-Foward合并，这样可以生成merge提交 git&amp;nbsp;rebase&amp;nbsp;master&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;#&amp;nbsp;将master&amp;nbsp;rebase到branch，相当于：&amp;nbsp;git&amp;nbsp;co&amp;nbsp;&amp;lt;branch&amp;gt;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;git&amp;nbsp;rebase&amp;nbsp;master&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;git&amp;nbsp;co&amp;nbsp;master&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;git&amp;nbsp;merge&amp;nbsp;&amp;lt;branch&amp;gt; &amp;nbsp;Git补丁管理(方便在多台机器上开发同步时用) git&amp;nbsp;diff&amp;nbsp;&amp;gt;&amp;nbsp;../sync.patch&amp;nbsp;#&amp;nbsp;生成补丁 git&amp;nbsp;apply&amp;nbsp;../sync.patch&amp;nbsp;#&amp;nbsp;打补丁 git&amp;nbsp;apply&amp;nbsp;--check&amp;nbsp;../sync.patch&amp;nbsp;#测试补丁能否成功 &amp;nbsp;Git暂存管理 git&amp;nbsp;stash&amp;nbsp;#&amp;nbsp;暂存 git&amp;nbsp;stash&amp;nbsp;list&amp;nbsp;#&amp;nbsp;列所有stash git&amp;nbsp;stash&amp;nbsp;apply&amp;nbsp;#&amp;nbsp;恢复暂存的内容 git&amp;nbsp;stash&amp;nbsp;drop&amp;nbsp;#&amp;nbsp;删除暂存区 Git远程分支管理 git&amp;nbsp;pull&amp;nbsp;#&amp;nbsp;抓取远程仓库所有分支更新并合并到本地 git&amp;nbsp;pull&amp;nbsp;--no-ff&amp;nbsp;#&amp;nbsp;抓取远程仓库所有分支更新并合并到本地，不要快进合并 git&amp;nbsp;fetch&amp;nbsp;origin&amp;nbsp;#&amp;nbsp;抓取远程仓库更新 git&amp;nbsp;merge&amp;nbsp;origin/master&amp;nbsp;#&amp;nbsp;将远程主分支合并到本地当前分支 git&amp;nbsp;co&amp;nbsp;--track&amp;nbsp;origin/branch&amp;nbsp;#&amp;nbsp;跟踪某个远程分支创建相应的本地分支 git&amp;nbsp;co&amp;nbsp;-b&amp;nbsp;&amp;lt;local_branch&amp;gt;&amp;nbsp;origin/&amp;lt;remote_branch&amp;gt;&amp;nbsp;#&amp;nbsp;基于远程分支创建本地分支，功能同上 git&amp;nbsp;push&amp;nbsp;#&amp;nbsp;push所有分支 git&amp;nbsp;push&amp;nbsp;origin&amp;nbsp;master&amp;nbsp;#&amp;nbsp;将本地主分支推到远程主分支 git&amp;nbsp;push&amp;nbsp;-u&amp;nbsp;origin&amp;nbsp;master&amp;nbsp;#&amp;nbsp;将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库) git&amp;nbsp;push&amp;nbsp;origin&amp;nbsp;&amp;lt;local_branch&amp;gt;&amp;nbsp;#&amp;nbsp;创建远程分支，&amp;nbsp;origin是远程仓库名 git&amp;nbsp;push&amp;nbsp;origin&amp;nbsp;&amp;lt;local_branch&amp;gt;:&amp;lt;remote_branch&amp;gt;&amp;nbsp;#&amp;nbsp;创建远程分支 git&amp;nbsp;push&amp;nbsp;origin&amp;nbsp;:&amp;lt;remote_branch&amp;gt;&amp;nbsp;#先删除本地分支(git&amp;nbsp;br&amp;nbsp;-d&amp;nbsp;&amp;lt;branch&amp;gt;)，然后再push删除远程分支 Git远程仓库管理 GitHub git&amp;nbsp;remote&amp;nbsp;-v&amp;nbsp;#&amp;nbsp;查看远程服务器地址和仓库名称 git&amp;nbsp;remote&amp;nbsp;show&amp;nbsp;origin&amp;nbsp;#&amp;nbsp;查看远程服务器仓库状态 git&amp;nbsp;remote&amp;nbsp;add&amp;nbsp;origin&amp;nbsp;git@&amp;nbsp;github:robbin/robbin_site.git&amp;nbsp;#&amp;nbsp;添加远程仓库地址 git&amp;nbsp;remote&amp;nbsp;set-url&amp;nbsp;origin&amp;nbsp;git@&amp;nbsp;github.com:robbin/robbin_site.git&amp;nbsp;#&amp;nbsp;设置远程仓库地址(用于修改远程仓库地址)&amp;nbsp;git&amp;nbsp;remote&amp;nbsp;rm&amp;nbsp;&amp;lt;repository&amp;gt;&amp;nbsp;#&amp;nbsp;删除远程仓库 创建远程仓库 git&amp;nbsp;clone&amp;nbsp;--bare&amp;nbsp;robbin_site&amp;nbsp;robbin_site.git&amp;nbsp;#&amp;nbsp;用带版本的项目创建纯版本仓库 scp&amp;nbsp;-r&amp;nbsp;my_project.git&amp;nbsp;git@&amp;nbsp;git.csdn.net:~&amp;nbsp;#&amp;nbsp;将纯仓库上传到服务器上 mkdir&amp;nbsp;robbin_site.git&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;cd&amp;nbsp;robbin_site.git&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;git&amp;nbsp;--bare&amp;nbsp;init&amp;nbsp;#&amp;nbsp;在服务器创建纯仓库 git&amp;nbsp;remote&amp;nbsp;add&amp;nbsp;origin&amp;nbsp;git@&amp;nbsp;github.com:robbin/robbin_site.git&amp;nbsp;#&amp;nbsp;设置远程仓库地址 git&amp;nbsp;push&amp;nbsp;-u&amp;nbsp;origin&amp;nbsp;master&amp;nbsp;#&amp;nbsp;客户端首次提交&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.4 初始化git库&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s1.51cto.com/wyfs02/M02/9C/EA/wKiom1l372LA00iDAAATXCQfXck097.png&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://s1.51cto.com/wyfs02/M02/9C/EA/wKioL1l373WTUNL4AAAzRMR1Eyw518.png-wh_500x0-wm_3-wmp_4-s_512933194.png&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://s4.51cto.com/wyfs02/M00/9C/EA/wKioL1l376XB_R_sAABaEhV9Ans496.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s4.51cto.com/wyfs02/M00/9C/EA/wKioL1l376XB_R_sAABaEhV9Ans496.png&quot; title=&quot;QQ截图20170725105035.png&quot; alt=&quot;wKioL1l376XB_R_sAABaEhV9Ans496.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@jdu4e00u53f7&amp;nbsp;~]#&amp;nbsp;mkdir&amp;nbsp;Code [root@jdu4e00u53f7&amp;nbsp;~]#&amp;nbsp;cd&amp;nbsp;Code/ [root@jdu4e00u53f7&amp;nbsp;Code]#&amp;nbsp;mkdir&amp;nbsp;CV [root@jdu4e00u53f7&amp;nbsp;Code]#&amp;nbsp;cd&amp;nbsp;CV [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;ls [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;git&amp;nbsp;init&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-size:20px;color:rgb(255,0,0);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:20px;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.5 用户配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;[root@jdu4e00u53f7 CV]# git config --global user.name &quot;haoziyunwei&quot;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;[root@jdu4e00u53f7 CV]# git config --global user.email &quot;312779641@qq.com&quot;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.6下载简历模版（阿里云上有）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;wget&amp;nbsp;http://labfile.oss.aliyuncs.com/courses/624/cv-template.zip --2017-07-25&amp;nbsp;09:59:13--&amp;nbsp;&amp;nbsp;http://labfile.oss.aliyuncs.com/courses/624/cv-template.zip Resolving&amp;nbsp;labfile.oss.aliyuncs.com...&amp;nbsp;118.178.161.16 Connecting&amp;nbsp;to&amp;nbsp;labfile.oss.aliyuncs.com|118.178.161.16|:80...&amp;nbsp;connected. HTTP&amp;nbsp;request&amp;nbsp;sent,&amp;nbsp;awaiting&amp;nbsp;response...&amp;nbsp;200&amp;nbsp;OK Length:&amp;nbsp;156602&amp;nbsp;(153K)&amp;nbsp;[application/zip] Saving&amp;nbsp;to:&amp;nbsp;“cv-template.zip”  100%[====================================================================&amp;gt;]&amp;nbsp;156,602&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--.-K/s&amp;nbsp;&amp;nbsp;&amp;nbsp;in&amp;nbsp;0.1s&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  2017-07-25&amp;nbsp;09:59:13&amp;nbsp;(1.26&amp;nbsp;MB/s)&amp;nbsp;-&amp;nbsp;“cv-template.zip”&amp;nbsp;saved&amp;nbsp;[156602/156602]  [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;unzip&amp;nbsp;cv-template.zip&amp;nbsp; Archive:&amp;nbsp;&amp;nbsp;cv-template.zip &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;cv-template/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/.DS_Store&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/ &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/cv-template/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;__MACOSX/cv-template/._.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/index.html&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;cv-template/static/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/cv-template/static/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;__MACOSX/cv-template/static/._.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;cv-template/static/css/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/css/.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/cv-template/static/css/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;__MACOSX/cv-template/static/css/._.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/css/style.css&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;cv-template/static/fonts/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/cv-template/static/fonts/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;__MACOSX/cv-template/static/fonts/._.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/demo.css&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/demo.html&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/iconfont.css&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/iconfont.eot&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/iconfont.svg&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/iconfont.ttf&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/fonts/iconfont.woff&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;cv-template/static/image/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/image/.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/cv-template/static/image/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;__MACOSX/cv-template/static/image/._.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/image/bg.jpg&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/image/weixin.png&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;cv-template/static/js/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/js/.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;creating:&amp;nbsp;__MACOSX/cv-template/static/js/ &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;__MACOSX/cv-template/static/js/._.DS_Store&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/js/modal.js&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;inflating:&amp;nbsp;cv-template/static/js/script.js&amp;nbsp;&amp;nbsp; [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;mv&amp;nbsp;cv-template/*&amp;nbsp;. [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;rm&amp;nbsp;-rf&amp;nbsp;cv-template* cv-template/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cv-template.zip&amp;nbsp;&amp;nbsp; [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;rm&amp;nbsp;-rf&amp;nbsp;cv-template*&amp;nbsp;__MACOSX* [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;firefox&amp;nbsp;index.html Error:&amp;nbsp;GDK_BACKEND&amp;nbsp;does&amp;nbsp;not&amp;nbsp;match&amp;nbsp;available&amp;nbsp;displays [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;ls index.html&amp;nbsp;&amp;nbsp;static [root@jdu4e00u53f7&amp;nbsp;CV]#&amp;nbsp;yum&amp;nbsp;install&amp;nbsp;Xvfb&amp;nbsp;libXfont&amp;nbsp;xorg-x11-fonts*&amp;nbsp;#下载界面运行 Loaded&amp;nbsp;plugins:&amp;nbsp;fastestmirror Setting&amp;nbsp;up&amp;nbsp;Install&amp;nbsp;Process Loading&amp;nbsp;mirror&amp;nbsp;speeds&amp;nbsp;from&amp;nbsp;cached&amp;nbsp;hostfile epel/metalink&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;6.2&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;*&amp;nbsp;epel:&amp;nbsp;ftp.cuhk.edu.hk base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;3.7&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; extras&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;3.4&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; updates&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;3.4&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Package&amp;nbsp;xorg-x11-server-Xvfb-1.17.4-16.el6.centos.x86_64&amp;nbsp;already&amp;nbsp;installed&amp;nbsp;and&amp;nbsp;latest&amp;nbsp;version Package&amp;nbsp;libXfont-1.5.1-2.el6.x86_64&amp;nbsp;already&amp;nbsp;installed&amp;nbsp;and&amp;nbsp;latest&amp;nbsp;version Package&amp;nbsp;xorg-x11-fonts-Type1-7.2-11.el6.noarch&amp;nbsp;already&amp;nbsp;installed&amp;nbsp;and&amp;nbsp;latest&amp;nbsp;version Resolving&amp;nbsp;Dependencies --&amp;gt;&amp;nbsp;Running&amp;nbsp;transaction&amp;nbsp;check ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-1-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-1-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-14-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-14-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-15-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-15-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-2-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-2-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-9-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ISO8859-9-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-cyrillic.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-ethiopic.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed ---&amp;gt;&amp;nbsp;Package&amp;nbsp;xorg-x11-fonts-misc.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;will&amp;nbsp;be&amp;nbsp;installed --&amp;gt;&amp;nbsp;Finished&amp;nbsp;Dependency&amp;nbsp;Resolution  Dependencies&amp;nbsp;Resolved  ============================================================================================================== &amp;nbsp;Package&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Arch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Version&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Repository&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Size ============================================================================================================== Installing: &amp;nbsp;xorg-x11-fonts-100dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3.1&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-75dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2.8&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-ISO8859-1-100dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.1&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-ISO8859-1-75dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;933&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-ISO8859-14-100dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.0&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-ISO8859-14-75dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;906&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-ISO8859-15-100dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.1&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-ISO8859-15-75dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;932&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-ISO8859-2-100dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.0&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-ISO8859-2-75dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;901&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-ISO8859-9-100dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.1&amp;nbsp;M &amp;nbsp;xorg-x11-fonts-ISO8859-9-75dpi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;930&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-cyrillic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;395&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-ethiopic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;150&amp;nbsp;k &amp;nbsp;xorg-x11-fonts-misc&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5.8&amp;nbsp;M  Transaction&amp;nbsp;Summary ============================================================================================================== Install&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;15&amp;nbsp;Package(s)  Total&amp;nbsp;download&amp;nbsp;size:&amp;nbsp;22&amp;nbsp;M Installed&amp;nbsp;size:&amp;nbsp;23&amp;nbsp;M Is&amp;nbsp;this&amp;nbsp;ok&amp;nbsp;[y/N]:&amp;nbsp;y Downloading&amp;nbsp;Packages: (1/15):&amp;nbsp;xorg-x11-fonts-100dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;3.1&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (2/15):&amp;nbsp;xorg-x11-fonts-75dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;2.8&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (3/15):&amp;nbsp;xorg-x11-fonts-ISO8859-1-100dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;1.1&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (4/15):&amp;nbsp;xorg-x11-fonts-ISO8859-1-75dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;933&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (5/15):&amp;nbsp;xorg-x11-fonts-ISO8859-14-100dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;1.0&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (6/15):&amp;nbsp;xorg-x11-fonts-ISO8859-14-75dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;906&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (7/15):&amp;nbsp;xorg-x11-fonts-ISO8859-15-100dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;1.1&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (8/15):&amp;nbsp;xorg-x11-fonts-ISO8859-15-75dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;932&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (9/15):&amp;nbsp;xorg-x11-fonts-ISO8859-2-100dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;1.0&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (10/15):&amp;nbsp;xorg-x11-fonts-ISO8859-2-75dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;901&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (11/15):&amp;nbsp;xorg-x11-fonts-ISO8859-9-100dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;1.1&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (12/15):&amp;nbsp;xorg-x11-fonts-ISO8859-9-75dpi-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;930&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (13/15):&amp;nbsp;xorg-x11-fonts-cyrillic-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;395&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (14/15):&amp;nbsp;xorg-x11-fonts-ethiopic-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;150&amp;nbsp;kB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (15/15):&amp;nbsp;xorg-x11-fonts-misc-7.2-11.el6.noarch.rpm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;5.8&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -------------------------------------------------------------------------------------------------------------- Total&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;11&amp;nbsp;MB/s&amp;nbsp;|&amp;nbsp;&amp;nbsp;22&amp;nbsp;MB&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;00:01&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;rpm_check_debug Running&amp;nbsp;Transaction&amp;nbsp;Test Transaction&amp;nbsp;Test&amp;nbsp;Succeeded Running&amp;nbsp;Transaction &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-9-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-15-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ethiopic-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-2-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-15-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-1-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-cyrillic-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-misc-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;8/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-14-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-2-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;10/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-1-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;11/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;12/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-14-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;13/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;14/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Installing&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-9-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;15/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-9-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-14-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-1-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-2-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-14-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-misc-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;8/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-cyrillic-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-1-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;10/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-15-75dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;11/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-2-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;12/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ethiopic-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;13/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-15-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;14/15&amp;nbsp; &amp;nbsp;&amp;nbsp;Verifying&amp;nbsp;&amp;nbsp;:&amp;nbsp;xorg-x11-fonts-ISO8859-9-100dpi-7.2-11.el6.noarch&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;15/15&amp;nbsp;  Installed: &amp;nbsp;&amp;nbsp;xorg-x11-fonts-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-1-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-1-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-14-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-14-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-15-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-15-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-2-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-2-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-9-100dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-ISO8859-9-75dpi.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-cyrillic.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xorg-x11-fonts-ethiopic.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;xorg-x11-fonts-misc.noarch&amp;nbsp;0:7.2-11.el6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  Complete!&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.7 编辑简历&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;在linux终端项目目录输入命令&lt;strong&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;color:rgb(255,0,0);&quot;&gt;firefox index.html&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;文字可以任意编辑&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;点击图片，放入图片地址，替换自己的头像和微信号，复制外部链接html。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;编辑完自己简历，保存。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s5.51cto.com/wyfs02/M00/9C/EA/wKiom1l38AOhLL51AAMLuVcLZqk004.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s5.51cto.com/wyfs02/M00/9C/EA/wKiom1l38AOhLL51AAMLuVcLZqk004.png&quot; style=&quot;float:none;&quot; title=&quot;QQ截图20170725140232.png&quot; alt=&quot;wKiom1l38AOhLL51AAMLuVcLZqk004.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s2.51cto.com/wyfs02/M00/9C/EA/wKioL1l38ASANHWtAAKvHJuhE18540.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s2.51cto.com/wyfs02/M00/9C/EA/wKioL1l38ASANHWtAAKvHJuhE18540.png&quot; style=&quot;float:none;&quot; title=&quot;QQ截图20170725140352.png&quot; alt=&quot;wKioL1l38ASANHWtAAKvHJuhE18540.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s3.51cto.com/wyfs02/M01/9C/EA/wKiom1l38AbTmL24AAPig30V5mY767.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s3.51cto.com/wyfs02/M01/9C/EA/wKiom1l38AbTmL24AAPig30V5mY767.png&quot; style=&quot;float:none;&quot; title=&quot;QQ截图20170725141514.png&quot; alt=&quot;wKiom1l38AbTmL24AAPig30V5mY767.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s3.51cto.com/wyfs02/M00/9C/EA/wKiom1l38AfR-WBpAAFBv_kVBes958.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s3.51cto.com/wyfs02/M00/9C/EA/wKiom1l38AfR-WBpAAFBv_kVBes958.png&quot; style=&quot;float:none;&quot; title=&quot;QQ截图20170725144338.png&quot; alt=&quot;wKiom1l38AfR-WBpAAFBv_kVBes958.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.8部署简历文件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;color:rgb(51,51,51);letter-spacing:0px;background-color:rgb(255,255,255);&quot;&gt;首先需要自己的 Github 账号：&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;color:rgb(64,120,192);letter-spacing:0px;background-color:rgb(255,255,255);&quot;&gt;https://github.com/&amp;nbsp;注册&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;color:rgb(64,120,192);letter-spacing:0px;background-color:rgb(255,255,255);&quot;&gt;进入自己的github里面创建一个仓库&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;/span&gt;&lt;a href=&quot;https://s2.51cto.com/wyfs02/M00/9C/EA/wKiom1l38cqh2mDvAABXDjBTFrU391.png-wh_500x0-wm_3-wmp_4-s_3854128282.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s2.51cto.com/wyfs02/M00/9C/EA/wKiom1l38cqh2mDvAABXDjBTFrU391.png-wh_500x0-wm_3-wmp_4-s_3854128282.png&quot; title=&quot;QQ截图20170725165401.png&quot; alt=&quot;wKiom1l38cqh2mDvAABXDjBTFrU391.png-wh_50&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.8.1在本地仓库提交代码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;[root@jdu4e00u53f7]:Code/&amp;nbsp;(master*)&amp;nbsp;$&amp;nbsp;git&amp;nbsp;add&amp;nbsp;.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[14:19:24] [root@jdu4e00u53f7]:Code/&amp;nbsp;(master*)&amp;nbsp;$&amp;nbsp;git&amp;nbsp;commit&amp;nbsp;-m&amp;nbsp;&#039;commint&amp;nbsp;my&amp;nbsp;cv&#039;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[14:19:31] [master&amp;nbsp;(root-commit)&amp;nbsp;c946e97]&amp;nbsp;commint&amp;nbsp;my&amp;nbsp;cv &amp;nbsp;19&amp;nbsp;files&amp;nbsp;changed,&amp;nbsp;1562&amp;nbsp;insertions(+) &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;index.html &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/.DS_Store &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/css/.DS_Store &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/css/style.css &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/.DS_Store &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/demo.css &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/demo.html &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/iconfont.css &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/iconfont.eot &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/iconfont.svg &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/iconfont.ttf &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/fonts/iconfont.woff &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/image/.DS_Store &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/image/bg.jpg &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100755&amp;nbsp;static/image/bg1.jpg &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/image/weixin.png &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/js/.DS_Store &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/js/modal.js &amp;nbsp;create&amp;nbsp;mode&amp;nbsp;100644&amp;nbsp;static/js/script.js   [root@jdu4e00u53f7]:Code/&amp;nbsp;(master)&amp;nbsp;$&amp;nbsp;git&amp;nbsp;config&amp;nbsp;--global&amp;nbsp;user.name&amp;nbsp;&quot;haoziyunwei&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[14:30:42] [root@jdu4e00u53f7]:Code/&amp;nbsp;(master)&amp;nbsp;$&amp;nbsp;git&amp;nbsp;config&amp;nbsp;--global&amp;nbsp;user.email&amp;nbsp;&quot;312779641@qq.com&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[14:31:47]  git&amp;nbsp;push&amp;nbsp;-f&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[14:38:13] warning:&amp;nbsp;push.default&amp;nbsp;is&amp;nbsp;unset;&amp;nbsp;its&amp;nbsp;implicit&amp;nbsp;value&amp;nbsp;is&amp;nbsp;changing&amp;nbsp;in Git&amp;nbsp;2.0&amp;nbsp;from&amp;nbsp;&#039;matching&#039;&amp;nbsp;to&amp;nbsp;&#039;simple&#039;.&amp;nbsp;To&amp;nbsp;squelch&amp;nbsp;this&amp;nbsp;message and&amp;nbsp;maintain&amp;nbsp;the&amp;nbsp;current&amp;nbsp;behavior&amp;nbsp;after&amp;nbsp;the&amp;nbsp;default&amp;nbsp;changes,&amp;nbsp;use:  &amp;nbsp;&amp;nbsp;git&amp;nbsp;config&amp;nbsp;--global&amp;nbsp;push.default&amp;nbsp;matching  To&amp;nbsp;squelch&amp;nbsp;this&amp;nbsp;message&amp;nbsp;and&amp;nbsp;adopt&amp;nbsp;the&amp;nbsp;new&amp;nbsp;behavior&amp;nbsp;now,&amp;nbsp;use:  &amp;nbsp;&amp;nbsp;git&amp;nbsp;config&amp;nbsp;--global&amp;nbsp;push.default&amp;nbsp;simple  When&amp;nbsp;push.default&amp;nbsp;is&amp;nbsp;set&amp;nbsp;to&amp;nbsp;&#039;matching&#039;,&amp;nbsp;git&amp;nbsp;will&amp;nbsp;push&amp;nbsp;local&amp;nbsp;branches to&amp;nbsp;the&amp;nbsp;remote&amp;nbsp;branches&amp;nbsp;that&amp;nbsp;already&amp;nbsp;exist&amp;nbsp;with&amp;nbsp;the&amp;nbsp;same&amp;nbsp;name.  In&amp;nbsp;Git&amp;nbsp;2.0,&amp;nbsp;Git&amp;nbsp;will&amp;nbsp;default&amp;nbsp;to&amp;nbsp;the&amp;nbsp;more&amp;nbsp;conservative&amp;nbsp;&#039;simple&#039; behavior,&amp;nbsp;which&amp;nbsp;only&amp;nbsp;pushes&amp;nbsp;the&amp;nbsp;current&amp;nbsp;branch&amp;nbsp;to&amp;nbsp;the&amp;nbsp;corresponding remote&amp;nbsp;branch&amp;nbsp;that&amp;nbsp;&#039;git&amp;nbsp;pull&#039;&amp;nbsp;uses&amp;nbsp;to&amp;nbsp;update&amp;nbsp;the&amp;nbsp;current&amp;nbsp;branch.  See&amp;nbsp;&#039;git&amp;nbsp;help&amp;nbsp;config&#039;&amp;nbsp;and&amp;nbsp;search&amp;nbsp;for&amp;nbsp;&#039;push.default&#039;&amp;nbsp;for&amp;nbsp;further&amp;nbsp;information. (the&amp;nbsp;&#039;simple&#039;&amp;nbsp;mode&amp;nbsp;was&amp;nbsp;introduced&amp;nbsp;in&amp;nbsp;Git&amp;nbsp;1.7.11.&amp;nbsp;Use&amp;nbsp;the&amp;nbsp;similar&amp;nbsp;mode &#039;current&#039;&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;&#039;simple&#039;&amp;nbsp;if&amp;nbsp;you&amp;nbsp;sometimes&amp;nbsp;use&amp;nbsp;older&amp;nbsp;versions&amp;nbsp;of&amp;nbsp;Git)  Username&amp;nbsp;for&amp;nbsp;&#039;https://github.com&#039;:&amp;nbsp;haoziyunwei Password&amp;nbsp;for&amp;nbsp;&#039;https://haoziyunwei@github.com&#039;:&amp;nbsp; Counting&amp;nbsp;objects:&amp;nbsp;26,&amp;nbsp;done. Delta&amp;nbsp;compression&amp;nbsp;using&amp;nbsp;up&amp;nbsp;to&amp;nbsp;4&amp;nbsp;threads. Compressing&amp;nbsp;objects:&amp;nbsp;100%&amp;nbsp;(26/26),&amp;nbsp;done. Writing&amp;nbsp;objects:&amp;nbsp;100%&amp;nbsp;(26/26),&amp;nbsp;1013.62&amp;nbsp;KiB&amp;nbsp;|&amp;nbsp;0&amp;nbsp;bytes/s,&amp;nbsp;done. Total&amp;nbsp;26&amp;nbsp;(delta&amp;nbsp;6),&amp;nbsp;reused&amp;nbsp;0&amp;nbsp;(delta&amp;nbsp;0) Username&amp;nbsp;for&amp;nbsp;&#039;https://github.com&#039;:&amp;nbsp;312779641@qq.com Password&amp;nbsp;for&amp;nbsp;&#039;https://312779641@qq.com@github.com&#039;:&amp;nbsp; Counting&amp;nbsp;objects:&amp;nbsp;41,&amp;nbsp;done. Delta&amp;nbsp;compression&amp;nbsp;using&amp;nbsp;up&amp;nbsp;to&amp;nbsp;4&amp;nbsp;threads. Compressing&amp;nbsp;objects:&amp;nbsp;100%&amp;nbsp;(41/41),&amp;nbsp;done. Writing&amp;nbsp;objects:&amp;nbsp;100%&amp;nbsp;(41/41),&amp;nbsp;1.09&amp;nbsp;MiB&amp;nbsp;|&amp;nbsp;219.00&amp;nbsp;KiB/s,&amp;nbsp;done. Total&amp;nbsp;41&amp;nbsp;(delta&amp;nbsp;9),&amp;nbsp;reused&amp;nbsp;0&amp;nbsp;(delta&amp;nbsp;0) remote:&amp;nbsp;Resolving&amp;nbsp;deltas:&amp;nbsp;100%&amp;nbsp;(9/9),&amp;nbsp;done. To&amp;nbsp;https://github.com/haoziyunwei/cv &amp;nbsp;*&amp;nbsp;[new&amp;nbsp;branch]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;master&amp;nbsp;-&amp;gt;&amp;nbsp;master Branch&amp;nbsp;master&amp;nbsp;set&amp;nbsp;up&amp;nbsp;to&amp;nbsp;track&amp;nbsp;remote&amp;nbsp;branch&amp;nbsp;master&amp;nbsp;from&amp;nbsp;origin.&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.8.2使用托管源&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;a href=&quot;https://s5.51cto.com/wyfs02/M00/9C/EA/wKiom1l38zLSCPl-AAAlP3kWiSY396.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s5.51cto.com/wyfs02/M00/9C/EA/wKiom1l38zLSCPl-AAAlP3kWiSY396.png&quot; title=&quot;QQ截图20170725155124.png&quot; alt=&quot;wKiom1l38zLSCPl-AAAlP3kWiSY396.png&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;color:rgb(51,51,51);letter-spacing:0px;font-size:19px;background-color:rgb(255,255,255);&quot;&gt;现在你可以访问&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;color:rgb(199,37,78);letter-spacing:0;font-size:19px;background-color:rgb(249,242,244);&quot;&gt;https://你的用户名.github.io/cv/&lt;/span&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;color:rgb(51,51,51);letter-spacing:0;font-size:19px;background-color:rgb(255,255,255);&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;&quot;&gt;这个地址了，恭喜，简历页面已成功部署在了&lt;/span&gt; Github Pages 上。（注意请使用火狐浏览器打开兼容性问题）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;;color:rgb(51,51,51);letter-spacing:0;font-size:19px;background-color:rgb(255,255,255);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;2.8.3查看自己的简历&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;a href=&quot;https://s4.51cto.com/wyfs02/M00/9C/EB/wKiom1l39DSj7kNDAAEOPIWxuz8641.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s4.51cto.com/wyfs02/M00/9C/EB/wKiom1l39DSj7kNDAAEOPIWxuz8641.png&quot; title=&quot;QQ截图20170725171140.png&quot; alt=&quot;wKiom1l39DSj7kNDAAEOPIWxuz8641.png&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:24px;&quot;&gt;&lt;strong&gt;#你get到新姿势了吗！！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:24px;&quot;&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;;letter-spacing:0px;&quot;&gt;3.使用&lt;/span&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;html5制作个人简历（高逼格二）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:24px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;a href=&quot;http://my.dingdone.com/xiuzan/marketing&quot; style=&quot;font-size:18px;text-decoration:underline;&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;http://my.dingdone.com/xiuzan/marketing&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;strong&gt;借助于第三方工具&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:24px;&quot;&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:20px;color:rgb(255,0,0);&quot;&gt;&lt;strong&gt;3.1下载模块并使用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:5px;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://s1.51cto.com/wyfs02/M02/9C/EB/wKioL1l39eqiU5JqAAJM6DvpxD8970.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s1.51cto.com/wyfs02/M02/9C/EB/wKioL1l39eqiU5JqAAJM6DvpxD8970.png&quot; title=&quot;QQ截图20170726095209.png&quot; alt=&quot;wKioL1l39eqiU5JqAAJM6DvpxD8970.png&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:20px;color:rgb(255,0,0);&quot;&gt;3.2修改简历&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:x-large;white-space:normal;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s2.51cto.com/wyfs02/M00/9C/EB/wKioL1l3-GLxHeMbAAEdLmnzmLg793.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s2.51cto.com/wyfs02/M00/9C/EB/wKioL1l3-GLxHeMbAAEdLmnzmLg793.png&quot; style=&quot;float:none;&quot; title=&quot;QQ截图20170726100008.png&quot; alt=&quot;wKioL1l3-GLxHeMbAAEdLmnzmLg793.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:x-large;white-space:normal;&quot;&gt;&lt;strong style=&quot;white-space:normal;&quot;&gt;&lt;span style=&quot;font-size:20px;color:rgb(255,0,0);&quot;&gt;3.2扫描二维码查阅&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;white-space:normal;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:x-large;&quot;&gt;&lt;a href=&quot;https://s4.51cto.com/wyfs02/M01/9C/EC/wKiom1l3_LKTqvyjAAYdQnu2FcY972.png&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://s5.51cto.com/wyfs02/M00/9C/EC/wKioL1l3_O3Q7j0oAAHnzliaKxU491.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s5.51cto.com/wyfs02/M00/9C/EC/wKioL1l3_O3Q7j0oAAHnzliaKxU491.png&quot; title=&quot;QQ截图20170726102151.png&quot; alt=&quot;wKioL1l3_O3Q7j0oAAHnzliaKxU491.png&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s5.51cto.com/wyfs02/M01/9C/EC/wKioL1l4AC-RA2g_AAHa_Qwu5vc058.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s5.51cto.com/wyfs02/M01/9C/EC/wKioL1l4AC-RA2g_AAHa_Qwu5vc058.png&quot; title=&quot;QQ截图20170726103604.png&quot; alt=&quot;wKioL1l4AC-RA2g_AAHa_Qwu5vc058.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:20px;color:rgb(255,0,0);&quot;&gt;4.1使用markdown制作简历（高逼格三）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;1、使用Markdown来写简历的好处&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;格式简洁，清爽悦目，非常适合程序员的简历。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;内容与形式分离，让你专注于写出好内容，而不是一写简历，就想到用什么模板。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;2、不足之处&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;Markdown的排版不够丰富，如没有右对齐。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;好在可以使用一些CSS&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);font-size:20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(255,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;4.2在线生成简历工具&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://deercv.com/&quot; style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;text-decoration:underline;font-size:18px;&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;http://deercv.com/&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://s5.51cto.com/wyfs02/M02/9C/EE/wKiom1l4B5-x_U1vAAEe-pvSEyc507.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s5.51cto.com/wyfs02/M02/9C/EE/wKiom1l4B5-x_U1vAAEe-pvSEyc507.png&quot; title=&quot;QQ截图20170726110728.png&quot; alt=&quot;wKiom1l4B5-x_U1vAAEe-pvSEyc507.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:20px;&quot;&gt;&lt;strong style=&quot;white-space:normal;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:x-large;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);font-size:18px;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;&quot;&gt;做技术没有一个技术博客（或个人微信公众号）和&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;background-color:rgb(245,245,245);&quot;&gt;Github地址，那还是技术吗。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);font-size:18px;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;background-color:rgb(245,245,245);&quot;&gt;新式简历方法你get到几个了！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:18px;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;background-color:rgb(255,255,255);line-height:24px;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;;font-size:19px;letter-spacing:0px;background-color:rgb(255,255,255);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;宋体&#039;, &#039;黑体&#039;, Arial, Helvetica, sans-serif;font-size:18px;letter-spacing:0px;background-color:rgb(255,255,255);line-height:24px;&quot;&gt; 不管应届生还是职场人士，&lt;span style=&quot;color:rgb(0,0,0);font-family:inherit;font-size:18px;&quot;&gt;简历中不能有假大空的套话，一切应以事例为依据。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size:18px;background-color:rgb(245,245,245);color:rgb(0,0,0);font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;letter-spacing:0px;text-decoration:none;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:&#039;微软雅黑&#039;, &#039;Microsoft YaHei&#039;;font-size:18px;color:rgb(0,0,0);text-decoration:none;&quot;&gt;最后祝各位早日找到理想的工作，希望这份文章能帮到各位。&lt;/span&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/chenhao6/1951038', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('316', '互联网金融大战黑客荐 ', '', 'http://blog.51cto.com/ityouknow/1949504', '2', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('317', '51CTO博客移动化意味着什么？IT博主可以搞事情了！荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;我红着脸写下了这个标题。&lt;/p&gt;&lt;p&gt;就好比在21世纪的今天，我煞有介事地说：“手机能上网意味着什么？”&lt;/p&gt;&lt;p&gt;好在，很多看起来不可思议的事情，在特定的环境下，就没那么匪夷所思了。如果对山区孩子说这句话，你们会理解的。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;51CTO汇聚着中国最精英的互联网IT人，然而，社区却还没有移动化。这真是不可思议。&lt;/p&gt;&lt;p&gt;好在，同行也不大给力，51CTO仍是IT技术平台的翘楚。所以，移动化虽姗姗来迟，也无大碍，有望后来居上。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;一休昨天告诉我：博客的web网页上线了，能在手机上看博文了。&lt;/p&gt;&lt;p&gt;我说，等这一天好久了。&lt;/p&gt;&lt;p&gt;在手机上看到：67篇，1935条评论，71万阅读。&lt;/p&gt;&lt;p&gt;无比自恋地，在屏幕上抚摸着这些过往，感叹倘若我晚生十年，定是一枚红扑扑的自媒体，每天沉浸在“叮咚~又多了一块钱赞赏”的小确幸中。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;“开个公众号吧~ 你如此才华膨胀灵感喷涌，曾有粉丝无数，你咋就不开一个呢？！”&lt;/p&gt;&lt;p&gt;这个蛊惑人心的念头，常在我耳边萦绕，让我找不着北，兴致勃勃开始构思。&lt;/p&gt;&lt;p&gt;然而，体内这些年培养的理性因子，又一次次推翻了我的构想。如同这些年我一次次地无情否定了客户们兴致勃勃的战略想法一样。&lt;/p&gt;&lt;p&gt;果然是，天道好轮回，苍天绕过谁。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;理性告诉我，微信公众号是个孤岛。&lt;/p&gt;&lt;p&gt;如果是有明确商业规划的公号，另当别论。单说为了兴趣而建立的个人公众号，若起初不做任何推广，意味着写出的内容，读者只有自己。&lt;/p&gt;&lt;p&gt;如果在朋友圈任何推广，必须先从亲朋好友开始。天知道“亲朋好友”是一个多复杂的群体构成，得写出多么老少皆宜的文字？&lt;/p&gt;&lt;p&gt;如果在某些目标群里推广，呵呵，准备好了吗？一二三，被踢了，哦耶~~&lt;/p&gt;&lt;p&gt;所以，微信公众号兴盛这么久了，我冷静地克制着，没有自己去开一个。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;当二喜撺掇我“再写一篇”时候，深吸一口气，欲召唤灵感，发现它已如同浪浪、一休们的发际线，节节败退。以至于写到这里要声明：这是散文，不是议论文。这样，大家才能稍微谅解为什么到现在还！不！开！始！说正题。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;51CTO博客移动化意味着什么？&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;意味着，&lt;/strong&gt;若我在自己才华就了馒头的今天，随心所欲写点东西。写完后，至少自带几百阅读量。我等过气网红尚有残余红利呢，何况目前在51CTO上正如火如荼的大咖们，意味深长啊……&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;有人嫌“博客”太过时，现在都自媒体时代了，外行说说也就罢了，互联网从业者千万不要露怯。 以“用户贡献内容”为核心的web2.0时代，才刚刚开始，本质未变。变化的永远是形式，把握本质才能以不变应万变。&lt;/p&gt;&lt;p&gt;博客本质上就是自媒体，个人产生内容，个人成为传播中心。51CTO博客移动化，&lt;strong&gt;意味着&lt;/strong&gt;我们终于可以带着自己的内容，穿越到移动设备上了，传播力MAX~！&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;一休也撺掇我更新博客，还胆敢在写啥都不知道的情况下许诺要推荐。作为一篇准推荐博文，自然要贴心地为官方提供一点说得过去的推荐理由，现在你也理解我为什么要取一个这样的标题了。于是，我要隆重推出这关键的第三点：&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;三、&lt;strong&gt;意味着：&lt;/strong&gt;&lt;strong&gt;你不用开一个公众号，也可以得到赞赏&lt;/strong&gt;！ 51CTO社区的IT技能满点的元老们、学院的粉丝成群的大咖老师们，如果还没有精力开公众号，没有关系！只要在你们有价值的博文里，放上一枚二维码，告诉大家：来赞赏吧，一分也是爱，一万不封顶~！&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;来，我做一个山寨版的示范，欢迎大家测试。对，扫一扫，或者长按二维码，多试几次我不介意哒~~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;https://s3.51cto.com/wyfs02/M00/98/7C/wKioL1k9JYfgK3XyAAItce-yXOQ547.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s3.51cto.com/wyfs02/M00/98/7C/wKioL1k9JYfgK3XyAAItce-yXOQ547.jpg&quot; title=&quot;微信赞赏二维码.jpg&quot; alt=&quot;wKioL1k9JYfgK3XyAAItce-yXOQ547.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;支付宝里有余粮的亲们，是不是很惊喜？&lt;/p&gt;&lt;p&gt;当然，51CTO就像你家楼下小卖店一样开放包容，可以让小绿和小蓝携手而立，任君翻牌！要不要也宠幸一下小蓝？&lt;/p&gt;&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;https://s1.51cto.com/wyfs02/M01/98/7C/wKiom1k9JYiQCIVqAAHILCDIqGQ115.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s1.51cto.com/wyfs02/M01/98/7C/wKiom1k9JYiQCIVqAAHILCDIqGQ115.jpg&quot; title=&quot;支付宝赞赏二维码.jpg&quot; alt=&quot;wKiom1k9JYiQCIVqAAHILCDIqGQ115.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;谢谢所有坚持看到了文章结尾的朋友！小废离开51CTO出去看世界的这几年，心一直在，没有分开。&lt;/p&gt;&lt;p&gt;敢不敢把你们这几年的思念都化作赞赏，让我的手机提示音叮咚作响不要停啊不要停~~~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align:center;&quot;&gt;======== 更新分割线 ========&lt;/p&gt;&lt;p&gt;6月14日补充：&lt;/p&gt;&lt;p&gt;此文发出后，极个别同志表示振聋发聩如打通任督二脉（比如一休），一部分亲友团对小废物活着更新博客了表示由衷欣慰并慈爱赏糖（比如C领导、老杨），还有很多吃瓜群众蒙圈：小废是谁？贴俩二维码而已嘛，咋就价值连城了？要搞事情，微信会不会封杀啊？&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;小废数了数碗里的赏银，嗯，够两百块了！（连二喜都赞赏了呢~ 在被我温馨提xiu示ru后）&lt;/p&gt;&lt;p&gt;返场返场，再接着唠~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;先科普一下标题里的所谓“移动化”。有两种实现形式：&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1、App。通常会有两个版本，分别伺候苹果手机和安卓手机。出卖一部分你的手机空间，把它下载，就可以用了。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2、移动web网页。说H5大家可能更加眼熟，Html5是为web网络而生的。本质上就是在浏览器上输入一个链接，打开后，这个页面在手机上可以正常呈现。而更普遍的使用情况，不是真的要你敲链接，而是可以转发到微信上，一戳就开。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;这两种形式，不同的产品会有不同的战略侧重。可以实现任一种，或者二者都用。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;在2017年6月之前，以上这些，51CTO博客都没有实现。是的，都！没！有！&lt;/p&gt;&lt;p&gt;在2017年6月，51CTO博客完成了主要内容的【移动web网页】。所以，我说“51CTO博客移动化”了。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;吃瓜群众：这个二维码，哪里来的？&lt;/p&gt;&lt;p&gt;小废：我以为你们技术博主，应该……哦懂了，可能你们不是那么爱钱吧。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;小绿二维码是这样到手的：&lt;/p&gt;&lt;p&gt;微信→收付款→二维码收款→保存收款码&lt;/p&gt;&lt;p&gt;小蓝二维码是这样到手的：&lt;/p&gt;&lt;p&gt;支付宝→收钱→保存二维码到相册&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;你会发现，咦，怎么跟小废的不太一样？哈哈那当然，我不能让用户多思考一秒钟，必须赤裸裸滴告诉大家一个熟悉而温暖的词：赞赏！P俩字上去还不是分分钟~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;关于赏银的去向：&lt;/p&gt;&lt;p&gt;每收入一笔，微信会开心地叫唤提示你，然后你可以在钱包里看到。重要的一个细节是，除非对方留言了，否则你完全不知道是谁给你打赏的。收款明细对转款人的信息保护非常严密……&lt;/p&gt;&lt;p&gt;一休对此忧虑，我安慰他，我并不在乎是谁给我赏钱，有人给就好。当然，大部分同志都有做好事留名的自觉性，你看我的评论下面，赏了的基本都举手了。只有小部分不留名，那也挺好，人家就喜欢默默关爱嘛。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;吃瓜群众：钱进你私人账户了？微信会不会监控你，封杀你？&lt;/p&gt;&lt;p&gt;小废：青天大老爷，民女何罪之有啊~？我们一个愿打一个愿挨的。&lt;/p&gt;&lt;p&gt;博主发表了有价值的文章，读者深受启发，无以为报，扫出兜里小小零钱不成敬意啊~~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;——是不是很眼熟？对呀，微信赞赏就是这路子来的。不过近期因不可抗力，微信赞赏的功能在苹果上不能用了，所以微信鼓励公号们“自己山寨，丰衣足食”，把个人收款的二维码付在文内，这样苹果金主也能想赞就赞了。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;本质上，微信支付只是一个支付工具，大家正确对待工具就好。如果有人诈骗，骗你从微信上转了几万块给他，微信是不能为此负责的。就好比有人用菜刀砍人了，菜刀厂家不用为此负责。支付宝同理。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;微信、支付宝的收付款二维码，在我中华大地应用场景之广已令歪果仁咋舌称奇。如今，51CTO博客移动化之际，有机会再一次扩大它们的应用范围：让文章在博客上就能被赞赏，IT博主价值得以进一步变现！&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;在移动时代，人们愿为有价值的内容付费，这是令高质内容生生不息的健康模式。随心赞赏，更多博主在意的不是钱（小废：我例外），而是真切感受到来自阅读者的肯定，这是前行的力量！&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;写到这里，小废突然懂了为什么微信号主们辣么勤奋，他们的动(zan)力(shang)一定非常充沛！&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/xiaofw/1934224', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('318', 'MySQL高可用解决方案MMM荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;一、MMM简介：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;MMM即Multi-Master Replication Manager for MySQL:mysql多主复制管理器,&lt;span style=&quot;font-size:18px;background:#FFFFFF;&quot;&gt;基于&lt;/span&gt;perl&lt;span style=&quot;font-size:18px;background:#FFFFFF;&quot;&gt;实现,&lt;/span&gt;关于mysql主主复制配置的监控、故障转移和管理的一套可伸缩的脚本套件（在任何时候只有一个节点可以被写入），MMM也能对从服务器进行读负载均衡，所以可以用它来在一组用于复制的服务器启动虚拟ip，除此之外，它还有实现数据备份、节点之间重新同步功能的脚本。MySQL本身没有提供replication failover的解决方案，通过MMM方案能实现服务器的故障转移，从而实现mysql的高可用。MMM不仅能提供浮动IP的功能，如果当前的主服务器挂掉后，会将你后端的从服务器自动转向新的主服务器进行同步复制，不用手工更改同步配置。这个方案是目前比较成熟的解决方案。详情请看官网：&lt;span style=&quot;font-size:18px;text-decoration:underline;&quot;&gt;&lt;a href=&quot;http://mysql-mmm.org&quot; target=&quot;_blank&quot;&gt;http://mysql-mmm.org&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;a href=&quot;https://s5.51cto.com/wyfs02/M01/8F/90/wKiom1jk_dnD-cW6AAHMndsOnyA899.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s5.51cto.com/wyfs02/M01/8F/90/wKiom1jk_dnD-cW6AAHMndsOnyA899.png&quot; title=&quot;1.PNG&quot; alt=&quot;wKiom1jk_dnD-cW6AAHMndsOnyA899.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;优点：高可用性，扩展性好，出现故障自动切换，对于主主同步，在同一时间只提供一台数据库写操作，保证的数据的一致性。当主服务器挂掉以后，另一个主立即接管，其他的从服务器能自动切换，不用人工干预。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;缺点：monitor节点是单点，不过这个你也可以结合keepalived或者haertbeat做成高可用;至少三个节点，对主机的数量有要求，需要实现读写分离,还需要在前端编写读写分离程序。在读写非常繁忙的业务系统下表现不是很稳定，可能会出现复制延时、切换失效等问题。MMM方案并不太适应于对数据安全性要求很高，并且读、写繁忙的环境中。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;适用场景:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;MMM的适用场景为数据库访问量大，并且能实现读写分离的场景。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Mmm主要功能由下面三个脚本提供:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mmm_mond&amp;nbsp;&amp;nbsp;负责所有的监控工作的监控守护进程，决定节点的移除(mmm_mond进程定时心跳检测，失败则将write ip浮动到另外一台master)等等&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mmm_agentd&amp;nbsp;&amp;nbsp;运行在mysql服务器上的代理守护进程，通过简单远程服务集提供给监控节点&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mmm_control&amp;nbsp;&amp;nbsp;通过命令行管理mmm_mond进程&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在整个监管过程中，需要在mysql中添加相关授权用户，授权的用户包括一个mmm_monitor用户和一个mmm_agent用户，如果想使用mmm的备份工具则还要添加一个mmm_tools用户。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;二、部署实施&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;1、环境介绍&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;OS:centos7.2（64位）数据库系统：mysql5.7.13&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;关闭selinux&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;配置ntp，同步时间&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot; style=&quot;text-align:center;margin-left:-5pt;margin-right:-5pt;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;table width=&quot;568&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;111&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;角色&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;108&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;IP&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;79&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;hostname&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Server-id&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;91&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Write vip&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;90&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Read vip&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;111&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;108&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.83&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;79&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;91&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;90&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;111&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master2(backup)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;108&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.141&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;79&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;91&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;90&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;111&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;108&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.250&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;79&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;91&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;90&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;111&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;108&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.225&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;79&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;91&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;90&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;111&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;monitor&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;108&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.106&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;79&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;monitor1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;无&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;91&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;90&quot; style=&quot;border-color:#000000;border-width:.5pt;padding:0pt 0pt 5.5pt 5.5pt;&quot;&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2、在所有主机上配置/etc/hosts文件，添加如下内容：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.83 master1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.141 master2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.250 slave1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.225 slave2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;192.168.31.106 monitor1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在所有主机上安装perl、perl-develperl-CPAN libart_lgpl.x86_64 rrdtool.x86_64 &amp;nbsp;rrdtool-perl.x86_64包&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#yum -y install perl-* &amp;nbsp;libart_lgpl.x86_64&lt;/span&gt;&lt;a&gt;&lt;/a&gt;&lt;span style=&quot;font-size:18px;&quot;&gt; &amp;nbsp;rrdtool.x86_64 &amp;nbsp;rrdtool-perl.x86_64&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;注：使用centos7在线yum源安装&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;安装perl的相关库&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;font-family:Tahoma;background:#FFFFFF;&quot;&gt;#cp&lt;/span&gt;&lt;span style=&quot;font-size:18px;font-family:Tahoma;&quot;&gt;an -i Algorithm::Diff Class::Singleton DBI DBD::mysql Log::Dispatch Log::Log4perl Mail::Send Net::Ping Proc::Daemon Time::HiRes Params::Validate Net::ARP&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;3、在master1、master2、slave1、slave2主机上安装mysql5.7和配置复制&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1和master2互为主从，slave1、slave2为master1的从&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10pt;font-family:&#039;Times New Roman&#039;;&quot;&gt;在每个mysql的配置文件/etc/my.cnf中加入以下内容，&amp;nbsp;&lt;/span&gt;注意server_id不能重复。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;log-bin = mysql-bin&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;binlog_format = mixed&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;server-id = 1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log = relay-bin&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log-index = slave-relay-bin.index&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;log-slave-updates = 1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;auto-increment-increment = 2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;auto-increment-offset = 1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;log-bin = mysql-bin&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;binlog_format = mixed&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;server-id = 2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log = relay-bin&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log-index = slave-relay-bin.index&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;log-slave-updates = 1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;auto-increment-increment = 2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;auto-increment-offset = 2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;server-id = 3&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log = relay-bin&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log-index = slave-relay-bin.index&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;read_only&amp;nbsp;&amp;nbsp;&amp;nbsp;= 1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;server-id = 4&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log = relay-bin&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;relay-log-index = slave-relay-bin.index&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;read_only&amp;nbsp;&amp;nbsp;&amp;nbsp;= 1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在完成了对my.cnf的修改后，通过systemctl restart mysqld重新启动mysql服务&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;4台数据库主机若要开启防火墙，要么关闭防火墙或者创建访问规则：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;firewall-cmd --permanent --add-port=3306/tcp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;firewall-cmd --reload&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;主从配置（master1和master2配置成主主，slave1和slave2配置成master1的从）：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master1上授权：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; grant replication slave on *.* to rep@&#039;192.168.31.%&#039; identified by &#039;123456&#039;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master2上授权：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; grant replication slave on *.* to rep@&#039;192.168.31.%&#039; identified by &#039;123456&#039;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;把master2、slave1和slave2配置成master1的从库：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master1上执行show&amp;nbsp;master&amp;nbsp;status;&amp;nbsp;获取binlog文件和Position点&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show master status;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+------------------+----------+--------------+------------------+--------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| File &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+------------------+----------+--------------+------------------+---------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| mysql-bin.000001 | &amp;nbsp; &amp;nbsp; &amp;nbsp;452 | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+------------------+----------+--------------+------------------+-----------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master2、slave1和slave2执行&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; change master to master_host=&#039;192.168.31.83&#039;,master_port=3306,master_user=&#039;rep&#039;,master_password=&#039;123456&#039;,master_log_file=&#039;mysql-bin.000001&#039;,master_log_pos=452;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:Consolas;background:#FFFFFF;&quot;&gt;&lt;/span&gt;mysql&amp;gt;&lt;span style=&quot;font-size:9pt;font-family:Consolas;background:#FFFFFF;&quot;&gt;slave start;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:Consolas;background:#FFFFFF;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:Consolas;&quot;&gt;验证主从复制：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:Consolas;background:#FFFFFF;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:Consolas;&quot;&gt;master2主机：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#FF0000;font-size:9pt;&quot;&gt;Master_Host: 192.168.31.83&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Connect_Retry: 60&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Read_Master_Log_Pos: 452&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_File: relay-bin.000002&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_Pos: 320&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_IO_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_SQL_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#FF0000;font-size:9pt;&quot;&gt;Master_Host: 192.168.31.83&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Connect_Retry: 60&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Read_Master_Log_Pos: 452&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_File: relay-bin.000002&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_Pos: 320&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_IO_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_SQL_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#FF0000;font-size:9pt;&quot;&gt;Master_Host: 192.168.31.83&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Connect_Retry: 60&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Read_Master_Log_Pos: 452&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_File: relay-bin.000002&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_Pos: 320&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_IO_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_SQL_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;如果Slave_IO_Running和Slave_SQL_Running都为yes，那么主从就已经配置OK了&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;把master1配置成master2的从库:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master2上执行show master status ;获取binlog文件和Position点&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show master status;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+------------------+----------+--------------+------------------+--------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| File &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+------------------+----------+--------------+------------------+---------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| mysql-bin.000001 | &amp;nbsp; &amp;nbsp; &amp;nbsp;452 | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+------------------+----------+--------------+------------------+----------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master1上执行：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; change master to master_host=&#039;192.168.31.141&#039;,master_port=3306,master_user=&#039;rep&#039;,master_password=&#039;123456&#039;,master_log_file=&#039;mysql-bin.000001&#039;,master_log_pos=452;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; start slave;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;验证主从复制：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1主机:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:9pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#FF0000;font-size:9pt;&quot;&gt;Master_Host: 192.168.31.141&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Connect_Retry: 60&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Read_Master_Log_Pos: 452&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_File: relay-bin.000002&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Log_Pos: 320&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Relay_Master_Log_File: mysql-bin.000001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_IO_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;Slave_SQL_Running: Yes&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;如果Slave_IO_Running和Slave_SQL_Running都为yes，那么主从就已经配置OK了&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;4、mysql-mmm配置：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在4台mysql节点上创建用户&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;创建代理账号：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; grant super,replicationclient,process on *.* to &#039;mmm_agent&#039;@&#039;192.168.31.%&#039; identified by &#039;123456&#039;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;创建监控账号：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; grant replication client on *.* to &#039;mmm_monitor&#039;@&#039;192.168.31.%&#039; identified by &#039;123456&#039;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;注1：因为之前的主从复制，以及主从已经是ok的，所以我在master1服务器执行就ok了。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;检查master2和slave1、slave2三台db上是否都存在监控和代理账号&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; select user,host from mysql.user where user in (&#039;mmm_monitor&#039;,&#039;mmm_agent&#039;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-------------+----------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| user &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| host &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-------------+----------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| mmm_agent &amp;nbsp; | 192.168.31.% |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| mmm_monitor | 192.168.31.% |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-------------+------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;或&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show grants for &#039;mmm_agent&#039;@&#039;192.168.31.%&#039;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-----------------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| Grants for mmm_agent@192.168.31.% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-----------------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| GRANT PROCESS, SUPER, REPLICATION CLIENT ON *.* TO &#039;mmm_agent&#039;@&#039;192.168.31.%&#039; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-----------------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show grants for &#039;mmm_monitor&#039;@&#039;192.168.31.%&#039;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-----------------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| Grants for mmm_monitor@192.168.31.% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;+-----------------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;| GRANT REPLICATION CLIENT ON *.* TO &#039;mmm_monitor&#039;@&#039;192.168.31.%&#039; |&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;注2：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mmm_monitor用户：mmm监控用于对mysql服务器进程健康检查&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mmm_agent用户：mmm代理用来更改只读模式，复制的主服务器等&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;5、mysql-mmm安装&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在monitor主机(192.168.31.106) 上安装监控程序&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;cd /tmp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;wget http://pkgs.fedoraproject.org/repo/pkgs/mysql-mmm/mysql-mmm-2.2.1.tar.gz/f5f8b48bdf89251d3183328f0249461e/mysql-mmm-2.2.1.tar.gz&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;tar -zxf mysql-mmm-2.2.1.tar.gz&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;cd mysql-mmm-2.2.1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;make install&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在数据库服务器(master1、master2、slave1、slave2)上安装代理&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;cd /tmp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;wget http://pkgs.fedoraproject.org/repo/pkgs/mysql-mmm/mysql-mmm-2.2.1.tar.gz/f5f8b48bdf89251d3183328f0249461e/mysql-mmm-2.2.1.tar.gz&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;tar -zxf mysql-mmm-2.2.1.tar.gz&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;cd mysql-mmm-2.2.1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;make install&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;6、配置mmm&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;编写配置文件，五台主机必须一致：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;完成安装后，所有的配置文件都放到了/etc/mysql-mmm/下面。管理服务器和数据库服务器上都要包含一个共同的文件mmm_common.conf，内容如下：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;active_master_rolewriter#积极的master角色的标示，所有的db服务器要开启read_only参数，对于writer服务器监控代理会自动将read_only属性关闭。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;host default&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;cluster_interfaceeno16777736#群集的网络接口&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;pid_path &amp;nbsp; &amp;nbsp; &amp;nbsp; /var/run/mmm_agentd.pid#pid路径&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;bin_path &amp;nbsp; &amp;nbsp; &amp;nbsp; /usr/lib/mysql-mmm/#可执行文件路径&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;replication_user &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;rep#复制用户&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;replication_password &amp;nbsp; &amp;nbsp;123456#复制用户密码&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;agent_usermmm_agent#代理用户&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;agent_password &amp;nbsp; &amp;nbsp; &amp;nbsp;123456#代理用户密码&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;host master1&amp;gt;#master1的host名&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ip &amp;nbsp; &amp;nbsp; 192.168.31.83#master1的ip&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mode &amp;nbsp; &amp;nbsp; &amp;nbsp; master#角色属性，master代表是主&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; peer &amp;nbsp; &amp;nbsp;master2#与master1对等的服务器的host名，也就是master2的服务器host名&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;host master2&amp;gt;#和master的概念一样&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ip &amp;nbsp; &amp;nbsp; &amp;nbsp; 192.168.31.141&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mode &amp;nbsp; &amp;nbsp; &amp;nbsp; master&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;peer &amp;nbsp; &amp;nbsp; master1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;host slave1&amp;gt;#从库的host名,如果存在多个从库可以重复一样的配置&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ip &amp;nbsp; &amp;nbsp; &amp;nbsp;192.168.31.250#从的ip&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mode &amp;nbsp; &amp;nbsp; slave#slave的角色属性代表当前host是从&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;host slave2&amp;gt;#和slave的概念一样&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ip &amp;nbsp; &amp;nbsp; &amp;nbsp;192.168.31.225&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mode &amp;nbsp; &amp;nbsp;slave&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;role writer&amp;gt;#writer角色配置&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hosts &amp;nbsp; &amp;nbsp; &amp;nbsp;master1,master2#能进行写操作的服务器的host名，如果不想切换写操作这里可以只配置master,这样也可以避免因为网络延时而进行write的切换，但是一旦master出现故障那么当前的MMM就没有writer了只有对外的read操作。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ips &amp;nbsp; &amp;nbsp;192.168.31.2#对外提供的写操作的虚拟IP&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mode &amp;nbsp; exclusive#exclusive代表只允许存在一个主，也就是只能提供一个写的IP&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/role&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;role reader&amp;gt;#read角色配置&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hosts &amp;nbsp; master2,slave1,slave2#对外提供读操作的服务器的host名,当然这里也可以把master加进来&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ips &amp;nbsp; &amp;nbsp; &amp;nbsp;192.168.31.3, 192.168.31.4, 192.168.31.5#对外提供读操作的虚拟ip，这三个ip和host不是一一对应的,并且ips也hosts的数目也可以不相同，如果这样配置的话其中一个hosts会分配两个ip&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mode &amp;nbsp; &amp;nbsp; &amp;nbsp;balanced#balanced代表负载均衡&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/role&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;同时将这个文件拷贝到其它的服务器，配置不变&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#for host in master1 master2 slave1 slave2 ; do scp /etc/mysql-mmm/mmm_common.conf $host:/etc/mysql-mmm/ ; done&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;代理文件配置&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;编辑 4台mysql节点机上的/etc/mysql-mmm/mmm_agent.conf&amp;nbsp;&lt;br /&gt;在数据库服务器上，还有一个mmm_agent.conf需要修改，其内容是：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;includemmm_common.conf&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;this master1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:9pt;font-family:Tahoma;background:#FFFFFF;&quot;&gt;注意：这个配置只配置db服务器，监控服务器不需要配置，this后面的host名改成当前服务器的&lt;/span&gt;&lt;span style=&quot;color:#FF0000;font-size:9pt;font-family:Tahoma;&quot;&gt;主机名。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;启动代理进程&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10pt;font-family:&#039;Times New Roman&#039;;&quot;&gt;在 /etc/init.d/mysql-mmm-agent的脚本文件的#!/bin/sh下面，加入如下内容&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;font-size:10pt;font-family:&#039;Times New Roman&#039;;&quot;&gt;&lt;br /&gt;source /root/.bash_profile&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;添加成系统服务并设置为自启动&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#chkconfig --add mysql-mmm-agent&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#chkconfigmysql-mmm-agent on&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#/etc/init.d/mysql-mmm-agent start&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;注：添加source /root/.bash_profile目的是为了mysql-mmm-agent服务能启机自启。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;自动启动和手动启动的唯一区别，就是激活一个console 。那么说明在作为服务启动的时候，可能是由于缺少环境变量&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;服务启动失败，报错信息如下：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Daemon bin: &#039;/usr/sbin/mmm_agentd&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Daemon pid: &#039;/var/run/mmm_agentd.pid&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Starting MMM Agent daemon... Can&#039;t locate Proc/Daemon.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at /usr/sbin/mmm_agentd line 7.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;BEGIN failed--compilation aborted at /usr/sbin/mmm_agentd line 7.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;failed&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;解决方法：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;font-family:Tahoma;background:#FFFFFF;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10pt;font-family:Tahoma;&quot;&gt;# cpanProc::Daemon&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10pt;font-family:Tahoma;background:#FFFFFF;&quot;&gt;# cpan Log::Log4perl&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;# /etc/init.d/mysql-mmm-agent start&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Daemon bin: &#039;/usr/sbin/mmm_agentd&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Daemon pid: &#039;/var/run/mmm_agentd.pid&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Starting MMM Agent daemon... Ok&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;# netstat -antp | grep mmm_agentd&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;tcp &amp;nbsp;0 &amp;nbsp; 0 192.168.31.83:9989 &amp;nbsp; &amp;nbsp;0.0.0.0:* &amp;nbsp; LISTEN &amp;nbsp; &amp;nbsp; &amp;nbsp;9693/mmm_agentd&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;配置防火墙&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;firewall-cmd --permanent --add-port=9989/tcp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;firewall-cmd --reload&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10pt;font-family:&#039;Times New Roman&#039;;&quot;&gt;编辑 monitor主机上的/etc/mysql-mmm/mmm_mon.conf&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;includemmm_common.conf&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;monitor&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ip &amp;nbsp; &amp;nbsp;127.0.0.1##为了安全性，设置只在本机监听，mmm_mond默认监听9988&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;pid_path &amp;nbsp; &amp;nbsp; &amp;nbsp;/var/run/mmm_mond.pid&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;bin_path &amp;nbsp; &amp;nbsp; &amp;nbsp;/usr/lib/mysql-mmm/&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;status_path/var/lib/misc/mmm_mond.status&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;text-indent:42pt;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ping_ips192.168.31.83,192.168.31.141,192.168.31.250,192.168.31.225#用于测试网络可用性 IP 地址列表，只要其中有一个地址 ping 通，就代表网络正常，这里不要写入本机地址&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;auto_set_online &amp;nbsp;0#设置自动online的时间，默认是超过60s就将它设置为online，默认是60s，这里将其设为0就是立即online&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/monitor&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;check default&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;check_period &amp;nbsp; &amp;nbsp;5&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;trap_period &amp;nbsp; &amp;nbsp; 10&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;timeout &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; #restart_after &amp;nbsp; &amp;nbsp; 10000&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;max_backlog &amp;nbsp; &amp;nbsp; 86400&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/check&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;check_period&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;描述：检查周期默认为&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;5s&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;默认值：&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;5s&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;trap_period&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;描述：一个节点被检测不成功的时间持续&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;trap_period&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;秒，就慎重的认为这个节点失败了。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;默认值：&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;10s&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;timeout&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:18px;&quot;&gt;描述：检查超时的时间&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;默认值：&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;2s&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;restart_after&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;描述：在完成&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;restart_after&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;次检查后，重启&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;checker&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;进程&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;默认值：&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;10000&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;max_backlog&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;描述：记录检查&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;rep_backlog&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;日志的最大次数&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;默认值：&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Calibri;&quot;&gt;60&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:18px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;host default&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;monitor_usermmm_monitor#监控db服务器的用户&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;monitor_password &amp;nbsp;123456#监控db服务器的密码&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;debug 0#debug 0正常模式，1为debug模式&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;启动监控进程：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:10pt;font-family:&#039;Times New Roman&#039;;&quot;&gt;在 /etc/init.d/mysql-mmm-agent的脚本文件的#!/bin/sh下面，加入如下内容&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;font-size:10pt;font-family:&#039;Times New Roman&#039;;&quot;&gt;&lt;br /&gt;source /root/.bash_profile&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;添加成系统服务并设置为自启动&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#chkconfig --add mysql-mmm-monitor&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#chkconfigmysql-mmm-monitor on&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#/etc/init.d/mysql-mmm-monitor start&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;启动报错:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Starting MMM Monitor daemon: Can not locate Proc/Daemon.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at /usr/sbin/mmm_mond line 11.&lt;br /&gt;BEGIN failed--compilation aborted at /usr/sbin/mmm_mond line 11.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;failed&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;解决方法：安装下列perl的库&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#cpanProc::Daemon&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#cpan Log::Log4perl&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# /etc/init.d/mysql-mmm-monitor start&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Daemon bin: &#039;/usr/sbin/mmm_mond&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Daemon pid: &#039;/var/run/mmm_mond.pid&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Starting MMM Monitor daemon: Ok&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# netstat -anpt | grep 9988&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;tcp &amp;nbsp;0 &amp;nbsp;0 127.0.0.1:9988 &amp;nbsp; 0.0.0.0:* &amp;nbsp; &amp;nbsp; &amp;nbsp;LISTEN &amp;nbsp; &amp;nbsp; &amp;nbsp;8546/mmm_mond&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;注1：无论是在db端还是在监控端如果有对配置文件进行修改操作都需要重启代理进程和监控进程。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;注2：MMM启动顺序：先启动monitor，再启动 agent&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;检查集群状态：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control show&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1(192.168.31.83) master/ONLINE. Roles: writer(192.168.31.2)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2(192.168.31.141) master/ONLINE. Roles: reader(192.168.31.5)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1(192.168.31.250) slave/ONLINE. Roles: reader(192.168.31.4)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2(192.168.31.225) slave/ONLINE. Roles: reader(192.168.31.3)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;如果服务器状态不是ONLINE，可以用如下命令将服务器上线，例如：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;#mmm_controlset_online主机名&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;例如：[root@monitor1 ~]#mmm_controlset_onlinemaster1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;从上面的显示可以看到，写请求的VIP在master1上，所有从节点也都把master1当做主节点。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;查看是否启用vip&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@master1 ~]# ipaddr show dev eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;eno16777736: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;mtu 1500 qdiscpfifo_fast state UP qlen 1000&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;link/ether 00:0c:29:6d:2f:82 brdff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;inet 192.168.31.83/24 brd 192.168.31.255 scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;inet 192.168.31.2/&lt;/span&gt;32 scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; inet6 fe80::20c:29ff:fe6d:2f82/64 scope link&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@master2 ~]# ipaddr show dev eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;eno16777736: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;mtu 1500 qdiscpfifo_fast state UP qlen 1000&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;link/ether 00:0c:29:75:1a:9c brdff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;inet 192.168.31.141/24 brd 192.168.31.255 scope global dynamic eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft 35850sec preferred_lft 35850sec&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;inet 192.168.31.5/32 &lt;/span&gt;scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; inet6 fe80::20c:29ff:fe75:1a9c/64 scope link&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@slave1 ~]# ipaddr show dev eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;eno16777736: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;mtu 1500 qdiscpfifo_fast state UP qlen 1000&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;link/ether 00:0c:29:02:21:19 brdff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;inet 192.168.31.250/24 brd 192.168.31.255 scope global dynamic eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft 35719sec preferred_lft 35719sec&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;inet 192.168.31.4/32&lt;/span&gt; scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; inet6 fe80::20c:29ff:fe02:2119/64 scope link&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@slave2 ~]# ipaddr show dev eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;eno16777736: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;mtu 1500 qdiscpfifo_fast state UP qlen 1000&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;link/ether 00:0c:29:e2:c7:fa brdff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;inet 192.168.31.225/24 brd 192.168.31.255 scope global dynamic eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft 35930sec preferred_lft 35930sec&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;inet 192.168.31.3/32&lt;/span&gt; scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; inet6 fe80::20c:29ff:fee2:c7fa/64 scope link&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;在master2，slave1，slave2主机上查看主mysql的指向&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Host: 192.168.31.83&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Connect_Retry: 60&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;MMM高可用性测试：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;服务器读写采有VIP地址进行读写，出现故障时VIP会漂移到其它节点，由其它节点提供服务。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;首先查看整个集群的状态，可以看到整个集群状态正常&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control show&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1(192.168.31.83) master/ONLINE. Roles: writer(192.168.31.2)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2(192.168.31.141) master/ONLINE. Roles: reader(192.168.31.5)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1(192.168.31.250) slave/ONLINE. Roles: reader(192.168.31.4)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2(192.168.31.225) slave/ONLINE. Roles: reader(192.168.31.3)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;模拟master1宕机，手动停止mysql服务，观察monitor日志,master1的日志如下：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# tail -f /var/log/mysql-mmm/mmm_mond.log&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:02:55 &amp;nbsp;WARN Check &#039;rep_threads&#039; on &#039;master1&#039; is in unknown state! Message: UNKNOWN: Connect error (host = 192.168.31.83:3306, user = mmm_monitor)! Can&#039;t connect to MySQL server on &#039;192.168.31.83&#039; (111)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:02:55 &amp;nbsp;WARN Check &#039;rep_backlog&#039; on &#039;master1&#039; is in unknown state! Message: UNKNOWN: Connect error (host = 192.168.31.83:3306, user = mmm_monitor)! Can&#039;t connect to MySQL server on &#039;192.168.31.83&#039; (111)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:03:05 ERROR Check &#039;mysql&#039; on &#039;master1&#039; has failed for 10 seconds! Message: ERROR: Connect error (host = 192.168.31.83:3306, user = mmm_monitor)! Can&#039;t connect to MySQL server on &#039;192.168.31.83&#039; (111)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:03:07 FATAL State of host &#039;master1&#039; changed from ONLINE to HARD_OFFLINE (ping: OK, mysql: not OK)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:03:07 &amp;nbsp;INFO Removing all roles from host &#039;master1&#039;:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:03:07 &amp;nbsp;INFO &amp;nbsp; &amp;nbsp; Removed role &#039;writer(192.168.31.2)&#039; from host &#039;master1&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:03:07 &amp;nbsp;INFO Orphaned role &#039;writer(192.168.31.2)&#039; has been assigned to &#039;master2&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;查看群集的最新状态&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control show&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1(192.168.31.83)&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt; master/HARD_OFFLINE&lt;/span&gt;. Roles:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2(192.168.31.141) master/ONLINE. Roles: reader(192.168.31.5), writer(192.168.31.2)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1(192.168.31.250) slave/ONLINE. Roles: reader(192.168.31.4)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2(192.168.31.225) slave/ONLINE. Roles: reader(192.168.31.3)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;从显示结果可以看出master1的状态有ONLINE转换为HARD_OFFLINE，写VIP转移到了master2主机上。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;检查所有的db服务器群集状态&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control checks all&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;master1 &amp;nbsp;ping &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;color:#FF0000;font-size:18px;&quot;&gt;master1 &amp;nbsp;mysql &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[last change: 2017/01/09 22:03:07] &amp;nbsp;ERROR: Connect error (host = 192.168.31.83:3306, user = mmm_monitor)! Can&#039;t connect to MySQL server on &#039;192.168.31.83&#039; (111)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1 &amp;nbsp;rep_threads &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1 &amp;nbsp;rep_backlog &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK: Backlog is null&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1 &amp;nbsp; ping &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1mysql &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1 &amp;nbsp; rep_threads &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1 &amp;nbsp; rep_backlog &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK: Backlog is null&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2 &amp;nbsp;ping &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2 &amp;nbsp;mysql &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[last change: 2017/01/09 21:57:32] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2 &amp;nbsp;rep_threads &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2 &amp;nbsp;rep_backlog &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK: Backlog is null&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2 &amp;nbsp; ping &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2mysql &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2 &amp;nbsp; rep_threads &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2 &amp;nbsp; rep_backlog &amp;nbsp;[last change: 2017/01/09 21:31:47] &amp;nbsp;OK: Backlog is null&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;从上面可以看到master1能ping通，说明只是服务死掉了。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;查看master2主机的ip地址：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@master2 ~]# ipaddr show dev eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;eno16777736: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;mtu 1500 qdiscpfifo_fast state UP qlen 1000&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;link/ether 00:0c:29:75:1a:9c brdff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;inet 192.168.31.141/24 brd 192.168.31.255 scope global dynamic eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft 35519sec preferred_lft 35519sec&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;inet 192.168.31.5/32 scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:18px;color:#FF0000;&quot;&gt;inet 192.168.31.2/32 &lt;/span&gt;scope global eno16777736&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp; &amp;nbsp; inet6 fe80::20c:29ff:fe75:1a9c/64 scope link&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Host: 192.168.31.141&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2主机：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql&amp;gt; show slave statusG;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Host: 192.168.31.141&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_User: rep&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;启动master1主机的mysql服务，观察monitor日志,master1的日志如下：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# tail -f /var/log/mysql-mmm/mmm_mond.log&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:16:56 &amp;nbsp;INFO Check &#039;mysql&#039; on &#039;master1&#039; is ok!&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:16:56 &amp;nbsp;INFO Check &#039;rep_backlog&#039; on &#039;master1&#039; is ok!&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:16:56 &amp;nbsp;INFO Check &#039;rep_threads&#039; on &#039;master1&#039; is ok!&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2017/01/09 22:16:59 FATAL State of host &#039;master1&#039; changed from HARD_OFFLINE to AWAITING_RECOVERY&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;从上面可以看到master1的状态由hard_offline改变为awaiting_recovery状态&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;用如下命令将服务器上线：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]#mmm_controlset_onlinemaster1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;查看群集最新状态&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control show&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1(192.168.31.83) master/ONLINE. Roles:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2(192.168.31.141) master/ONLINE. Roles: reader(192.168.31.5), writer(192.168.31.2)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1(192.168.31.250) slave/ONLINE. Roles: reader(192.168.31.4)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2(192.168.31.225) slave/ONLINE. Roles: reader(192.168.31.3)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;可以看到主库启动不会接管主，只到现有的主再次宕机。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;总结&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot; style=&quot;margin-left:18pt;&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;(1)master2备选主节点宕机不影响集群的状态，就是移除了master2备选节点的读状态。&lt;br /&gt;(2)master1主节点宕机，由master2备选主节点接管写角色，slave1,slave2指向新master2主库进行复制，slave1,slave2会自动change master到master2.&lt;br /&gt;(3)如果master1主库宕机，master2复制应用又落后于master1时就变成了主可写状态，这时的数据主无法保证一致性。&lt;br /&gt;如果master2,slave1,slave2延迟于master1主，这个时master1宕机，slave1,slave2将会等待数据追上db1后，再重新指向新的主node2进行复制操作，这时的数据也无法保证同步的一致性。&lt;br /&gt;(4)如果采用MMM高可用架构，主，主备选节点机器配置一样，而且开启半同步进一步提高安全性或采用MariaDB/mysql5.7进行多线程从复制，提高复制的性能。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;附：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;1、日志文件：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;日志文件往往是分析错误的关键，所以要善于利用日志文件进行问题分析。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;db端：/var/log/mysql-mmm/mmm_agentd.log&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;监控端：/var/log/mysql-mmm/mmm_mond.log&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2、命令文件：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mmm_agentd：db代理进程的启动文件&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mmm_mond：监控进程的启动文件&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mmm_backup：备份文件&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mmm_restore：还原文件&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mmm_control：监控操作命令文件&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;db服务器端只有mmm_agentd程序，其它的都是在monitor服务器端。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;3、mmm_control用法&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mmm_control程序可以用于监控群集状态、切换writer、设置onlineoffline操作等。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Valid commands are:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;help &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- show this message #帮助信息&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;ping &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- ping monitor #ping当前的群集是否正常&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;show &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- show status #群集在线状态检查&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;checks [&amp;lt;host&amp;gt;|all [&amp;lt;check&amp;gt;|all]] - show checks status#执行监控检查操作&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;set_online&amp;lt;host&amp;gt; &amp;nbsp; &amp;nbsp; - set host &amp;lt;host&amp;gt; online #将host设置为online&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;set_offline&amp;lt;host&amp;gt; &amp;nbsp; &amp;nbsp;- set host &amp;lt;host&amp;gt; offline #将host设置为offline&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mode &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- print current mode. #打印输出当前的mode&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;set_active &amp;nbsp; &amp;nbsp; &amp;nbsp;- switch into active mode.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;set_manual &amp;nbsp; &amp;nbsp; &amp;nbsp;- switch into manual mode.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;set_passive &amp;nbsp; &amp;nbsp; &amp;nbsp;- switch into passive mode.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;move_role [--force] &amp;lt;role&amp;gt;&amp;lt;host&amp;gt; - move exclusive role &amp;lt;role&amp;gt; to host &amp;lt;host&amp;gt; #移除writer服务器为指定的host服务器(Only use --force if you know what you are doing!)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;set_ip&amp;lt;ip&amp;gt;&amp;lt;host&amp;gt; &amp;nbsp; &amp;nbsp;- set role with ip&amp;lt;ip&amp;gt; to host &amp;lt;host&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;检查所有的db服务器群集状态：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control checks all&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;检查项包括：ping、mysql是否正常运行、复制线程是否正常等&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;检查群集环境在线状况：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control show&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;对指定的host执行offline操作：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_controlset_offline slave2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;对指定的host执行onine操作：&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_controlset_online slave2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;执行write切换(手动切换):&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;查看当前的slave对应的master&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@slave2 ~]# mysql -uroot -p123456 -e &#039;show slave statusG;&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql: [Warning] Using a password on the command line interface can be insecure.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Host: 192.168.31.141&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;writer切换，要确保mmm_common.conf文件中的writer属性有配置对应的host,否则无法切换&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_controlmove_role writer master1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;OK: Role &#039;writer&#039; has been moved from &#039;master2&#039; to &#039;master1&#039;. Now you can wait some time and check new roles info!&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@monitor1 ~]# mmm_control show&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master1(192.168.31.83) master/ONLINE. Roles: writer(192.168.31.2)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;master2(192.168.31.141) master/ONLINE. Roles: reader(192.168.31.5)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave1(192.168.31.250) slave/ONLINE. Roles: reader(192.168.31.4)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;slave2(192.168.31.225) slave/ONLINE. Roles: reader(192.168.31.3)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;save从库自动切换到了新的master&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;[root@slave2 ~]# mysql -uroot -p123456 -e &#039;show slave statusG;&#039;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;mysql: [Warning] Using a password on the command line interface can be insecure.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Slave_IO_State: Waiting for master to send event&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;Master_Host: 192.168.31.83&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;4、其它处理问题&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;如果不想让writer从master切换到backup（包括主从的延时也会导致写VIP的切换），那么可以在配置/etc/mysql-mmm/mmm_common.conf时，去掉&amp;lt;role write&amp;gt;中的backup&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;lt;role writer&amp;gt;#writer角色配置&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;hosts master1 #这里只配置一个Hosts&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;ips &amp;nbsp;192.168.31.2#对外提供的写操作的虚拟IP&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;mode exclusive #exclusive代表只允许存在一个主，也就是只能提供一个写的IP&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:&#039;宋体&#039;;&quot;&gt;&lt;/span&gt;&amp;lt;/role&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;这样的话当master1出现故障了writer写操作不会切换到master2服务器，并且slave也不会指向新的master，此时当前的MMM之前对外提供写服务。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;5、总结&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.对外提供读写的虚拟IP是由monitor程序控制。如果monitor没有启动那么db服务器不会被分配虚拟ip,但是如果已经分配好了虚拟ip，当monitor程序关闭了原先分配的虚拟ip不会立即关闭外部程序还可以连接访问（只要不重启网络），这样的好处就是对于monitor的可靠性要求就会低一些，但是如果这个时候其中的某一个db服务器故障了就无法处理切换，也就是原先的虚拟ip还是维持不变，挂掉的那台DB的虚拟ip会变的不可访问。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.agent程序受monitor程序的控制处理write切换，从库切换等操作。如果monitor进程关闭了那么agent进程就起不到什么作用，它本身不能处理故障。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3.monitor程序负责监控db服务器的状态，包括Mysql数据库、服务器是否运行、复制线程是否正常、主从延时等；它还用于控制agent程序处理故障。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4.monitor会每隔几秒钟监控db服务器的状态，如果db服务器已经从故障变成了正常，那么monitor会自动在60s之后将其设置为online状态(默认是60s可以设为其它的值)，有监控端的配置文件参数“auto_set_online”决定，群集服务器的状态有三种分别是：HARD_OFFLINE→AWAITING_RECOVERY→online&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5.默认monitor会控制mmm_agent会将writer db服务器read_only修改为OFF，其它的db服务器read_only修改为ON,所以为了严谨可以在所有的服务器的my.cnf文件中加入read_only=1由monitor控制来控制writer和read,root用户和复制用户不受read_only参数的影响。&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;无间隔&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;正文&quot;&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/namesam/1913232', '1', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('319', '迁移Exchange队列至其它服务器继续传送队列邮件荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;p&gt;Exchange 2010中，队列也是以数据库文件的方式保存在Exchange 安装目录中，前段时间碰到一个网络问题，队列文件过大将C盘空间占满，而导致服务无启动的问题，排除方法如下：&lt;/p&gt;&lt;p&gt;一天早上，接到某用户报障，说Exchange连线正常，但无法收发外部的邮件。接到用户报障后，远程连线，Exchange服务的C盘总共120G，但可用空间只有几十KB，所以Transport服务因为空间不足而无法启动，由于此服务为HUB/Mailbox角色，安装目录为C盘，MailBox DB/LOG目录全部在其它盘，首先排除了Mailbox占用C盘空间的问题！继续排查，发现C:Program FilesMicrosoftExchange ServerV14Transport RolesdataQueue下的mail.Que文件涨到了60G左右！所以确认是因为队列数据文件太大占用空间，而导致C盘空间不足引起的服务停止！&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/8F/65/wKiom1jcwKTDAvaaAAA50OktHko524.png&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;242&quot; title=&quot;clip_image001[5]&quot; style=&quot;border:0px;padding-top:0px;padding-right:0px;padding-left:0px;background-image:none;&quot; alt=&quot;clip_image001[5]&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/8F/63/wKioL1jcwKWBx8e4AAA-vXH-Q4Q605.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;为了保证队列中的邮件不丢失，先将Queue,整个目录移到其它分区下，然后启动Transport服务，服务恢复，Exchange恢复正常！&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://s3.51cto.com/wyfs02/M02/8F/65/wKiom1jcwKbxv4ZYAABqeavjO0s846.png&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;525&quot; title=&quot;clip_image002[6]&quot; style=&quot;border:0px;padding-top:0px;padding-right:0px;padding-left:0px;background-image:none;&quot; alt=&quot;clip_image002[6]&quot; src=&quot;http://s3.51cto.com/wyfs02/M02/8F/63/wKioL1jcwKeRQfykAACW04yL1lQ789.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;为了重启之前哪个60G的mail.que邮件队列，在其组织中找了另一台HUB角色服务器，保证其安装目录所在分区足够大，可用空间能大于60G以上，在确保其队列中没有邮件后，停止Transport服务，重命令MicrosoftExchange ServerV14TransportRolesdata下的Queue目录，然后将之前COPY出来的60G的Queue目录移动到此目录下，然后重启Transport服务，所有队列邮件开始重新传输！待传输完成，确保队列中没邮件后，停止Transport服务，删除Queue目录，再次重启Transport服务，生成新的队列数据库目录！&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/hubuxcg/1911803', '1', '51CTO', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('320', 'HAProxy Nginx LVS Apache总结篇荐 ', '', 'http://blog.51cto.com/renzhiyuan/1902287', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('321', '一次和公司总监的聊天...荐 ', '', 'http://blog.51cto.com/renzhiyuan/1898689', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('322', 'Linux轻量级自动运维工具-Ansible浅析荐 ', '', 'http://blog.51cto.com/weiweidefeng/1895261', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('323', '运维工作中的bootstraping之PXE自动安装操作系统荐 ', '', 'http://blog.51cto.com/yolynn/1886151', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('324', '消息队列_RabbitMQ-0002.深入MQ生产者/信道/交换机/队列/消费者?荐 ', '', 'http://blog.51cto.com/xmdevops/1877695', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('325', '高可用高性能负载均衡软件HAproxy详解指南-第二章（配置文件、关键字、ACL）荐 ', '', 'http://blog.51cto.com/zhang789/1873435', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('326', '由浅入深学习Apache httpd原理与配置荐 ', '', 'http://blog.51cto.com/jackcui/1858989', '3', '', '0000-00-00 00:00:00');
INSERT INTO `article` VALUES ('327', 'php协程关键词yield学习', '', 'http://xieye.iteye.com/blog/2409037', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('328', 'Apache本机配置多个域名', '', 'http://quqtalk.iteye.com/blog/2411236', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('329', 'php判断是PC访问网址，是手机跳到M站点', '', 'http://lllomh.iteye.com/blog/2411186', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('330', '个人小工具mylog最新', '', 'http://lxmgfd.iteye.com/blog/2409338', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('331', 'php协程关键词yield学习', '', 'http://xieye.iteye.com/blog/2409037', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('332', '几行php代码实现微信自动注册登陆 (微信PC扫码授权登陆注册)', '', 'http://erdangjiade66.iteye.com/blog/2408765', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('333', 'PHP 读取 txt 文件', '', 'http://onestopweb.iteye.com/blog/2407691', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('334', 'PHP 加密解密处理类', '', 'http://onestopweb.iteye.com/blog/2406303', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('335', 'PHP 50个提高性能的写法', '', 'http://onestopweb.iteye.com/blog/2406143', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('336', '实用的在线预览数据字典的工具（php编写）', '', 'http://xieye.iteye.com/blog/2405546', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('337', 'pc端微信扫码支付和支付宝在线支付', '', 'http://1206995177.iteye.com/blog/2405307', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('338', 'RibbitMQ php扩展使用 实现队列生产消费', '', 'http://wucd.iteye.com/blog/2405187', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('339', 'php设计模式（4）-- 装饰器模式', '', 'http://xieye.iteye.com/blog/2404169', '4', 'ITEYE', '2018-02-24 14:29:08');
INSERT INTO `article` VALUES ('340', 'PHPWAMP内置IIS管理器一键搭建PHP网站，支持无限个不同PHP版本同时运行荐 ', '', 'http://blog.51cto.com/lccee/1961732', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('341', '关于搜索功能的实现原理（laravel框架）荐 ', '', 'http://blog.51cto.com/kangjunfei/1958240', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('342', 'PHP实现Collection数据集类及其原理荐 ', '', 'http://blog.51cto.com/12942149/1932756', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('343', '阿里云WindowsServer2016安装独立的Apache和PHP荐 ', '', 'http://blog.51cto.com/12643313/1918013', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('344', '详解Centos源码编译安装Apache、PHP荐 ', '', 'http://blog.51cto.com/qq512430/1914420', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('345', 'PHP服务缓存优化之ZendOpcache、xcache、eAccelerator荐 ', '', 'http://blog.51cto.com/lilongzi/1838913', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('346', 'rhel6上搭建lnmp架构以及遇到的一些错误并排除方法荐 ', '', 'http://blog.51cto.com/duwers/1793560', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('347', '利用PhantomJS 自动截图Kibana ，phpmailer发送网站运营日报 荐 ', '', 'http://blog.51cto.com/xiangcun168/1792193', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('348', 'CentOS6下yum升级Zabbix2.2/2.4到Zabbix3.0荐 ', '', 'http://blog.51cto.com/qicheng0211/1744603', '4', '51CTO', '2018-02-24 14:29:09');
INSERT INTO `article` VALUES ('349', 'php框架laravel 5.1环境构建(CentOS 6.5)之FastCGI荐 ', '', 'http://blog.51cto.com/cmdschool/1720282', '4', '51CTO', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('350', 'php扩展开发实战教程(1)', '', 'https://www.cnblogs.com/ghostwu/p/8465515.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('351', '秒杀代码', '', 'https://www.cnblogs.com/zgaspnet/p/8464129.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('352', 'Laravel使用Redis共享Session', '', 'https://www.cnblogs.com/cshua/p/8462307.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('353', 'php设计模式-观察者模式', '', 'https://www.cnblogs.com/ghostwu/p/8461827.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('354', 'laravel 5 : Class &#39;input&#39; not found', '', 'https://www.cnblogs.com/zgaspnet/p/8461654.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('355', 'php namespace与use', '', 'https://www.cnblogs.com/yuanyuanyuan/p/8461366.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('356', 'php设计模式-工厂模式', '', 'https://www.cnblogs.com/ghostwu/p/8461308.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('357', 'php设计模式-单例模式', '', 'https://www.cnblogs.com/ghostwu/p/8461004.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('358', 'php设计模式-策略模式', '', 'https://www.cnblogs.com/ghostwu/p/8460922.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('359', 'php面向对象高级-魔术方法与迭代器', '', 'https://www.cnblogs.com/ghostwu/p/8459604.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('360', 'php面向对象精要(3)', '', 'https://www.cnblogs.com/ghostwu/p/8458812.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('361', 'php面向对象精要(2)', '', 'https://www.cnblogs.com/ghostwu/p/8458488.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('362', 'php面向对象精要(1)', '', 'https://www.cnblogs.com/ghostwu/p/8458019.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('363', 'SVN配置自启动-1053错误', '', 'https://www.cnblogs.com/yangp67/p/8456133.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('364', '关于Composer的使用', '', 'https://www.cnblogs.com/bullz/p/8454551.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('365', 'Laravel (5.5.33) 加载过程---instance方法（三)', '', 'https://www.cnblogs.com/Sunlight1992/p/8451932.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('366', '剑指offer试题（PHP篇一）', '', 'https://www.cnblogs.com/zlnevsto/p/8448732.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('367', 'tp5 migrate数据库迁移工具', '', 'https://www.cnblogs.com/xueTP/p/8438721.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('368', 'session一直报错Session store not set on request', '', 'https://www.cnblogs.com/zgaspnet/p/8438080.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('369', 'Laravel 5.4.36 session 生效问题', '&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body&quot;&gt;&lt;p&gt;在测试过程中发现 如果方法有echo 等函数输出到PHP的输出缓存中 存在 &amp;nbsp;sessionID 不会放到http的请求头中 &amp;nbsp;下次请求也就拿不到sessionid问题 &amp;nbsp;&lt;/p&gt; &lt;p&gt;问题的原因&lt;/p&gt; &lt;p&gt;代码位置:public/index.php &amp;nbsp;&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #800080&quot;&gt;$response&lt;/span&gt;-&amp;gt;send();&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;该方法代用方法 &amp;nbsp;&amp;nbsp;代码：vendor/symfony/http-foundation/Response.php&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;    &lt;span style=&quot;color: #008000&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;*      * Sends HTTP headers.      *      * @return $this      &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;*/&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; sendHeaders()     {         &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; headers have already been sent by the developer&lt;/span&gt;         &lt;span style=&quot;color: #0000ff&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #008080&quot;&gt;headers_sent&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;()) {             &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;;         }          &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; headers&lt;/span&gt;         &lt;span style=&quot;color: #0000ff&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;headers-&amp;gt;allPreserveCaseWithoutCookies() &lt;span style=&quot;color: #0000ff&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #800080&quot;&gt;$name&lt;/span&gt; =&amp;gt; &lt;span style=&quot;color: #800080&quot;&gt;$values&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;) {             &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #800080&quot;&gt;$values&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #800080&quot;&gt;$value&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;) {                 &lt;/span&gt;&lt;span style=&quot;color: #008080&quot;&gt;header&lt;/span&gt;(&lt;span style=&quot;color: #800080&quot;&gt;$name&lt;/span&gt;.&#039;: &#039;.&lt;span style=&quot;color: #800080&quot;&gt;$value&lt;/span&gt;, &lt;span style=&quot;color: #0000ff&quot;&gt;false&lt;/span&gt;, &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;statusCode);             }         }          &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; status&lt;/span&gt;         &lt;span style=&quot;color: #008080&quot;&gt;header&lt;/span&gt;(&lt;span style=&quot;color: #008080&quot;&gt;sprintf&lt;/span&gt;(&#039;HTTP/%s %s %s&#039;, &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;version, &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;statusCode, &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;statusText), &lt;span style=&quot;color: #0000ff&quot;&gt;true&lt;/span&gt;, &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;statusCode);          &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; cookies&lt;/span&gt;         &lt;span style=&quot;color: #0000ff&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;-&amp;gt;headers-&amp;gt;getCookies() &lt;span style=&quot;color: #0000ff&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;) {             &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;isRaw()) {                 &lt;/span&gt;&lt;span style=&quot;color: #008080&quot;&gt;setrawcookie&lt;/span&gt;(&lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getName(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getValue(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getExpiresTime(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getPath(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getDomain(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;isSecure(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;isHttpOnly());             } &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; {                 &lt;/span&gt;&lt;span style=&quot;color: #008080&quot;&gt;setcookie&lt;/span&gt;(&lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getName(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getValue(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getExpiresTime(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getPath(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;getDomain(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;isSecure(), &lt;span style=&quot;color: #800080&quot;&gt;$cookie&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;isHttpOnly());             }         }          &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #800080&quot;&gt;$this&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;;     }&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;以前的原因出现在 &amp;nbsp;headers_sent() 中 &amp;nbsp;&lt;/p&gt; &lt;p&gt;有兴趣的同学可以测试一下 如果输出缓存存在数据 （在方法使用echo 之类的函数有打印行为） &amp;nbsp;headers_sent() 函数则返回ture &amp;nbsp;&lt;/p&gt; &lt;p&gt;这样就解释了 在方法中存在打印的函数时候 &amp;nbsp;你的session始终没有生效问题&lt;/p&gt;&lt;/div&gt;', 'https://www.cnblogs.com/Sunlight1992/p/8437327.html', '4', '博客园', '2018-02-24 14:29:10');
INSERT INTO `article` VALUES ('370', 'java面试官如何面试别人', '', 'http://huangjinjin520.iteye.com/blog/2411104', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('371', '想要阅读一些开源项目或框架的源代码，不知道从哪里入手？', '', 'http://i042416.iteye.com/blog/2411037', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('372', 'Java里面关于数组拷贝的几种方式', '', 'http://qindongliang.iteye.com/blog/2410770', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('373', 'java crm 系统 进销存 springmvc SSM项目项目源码', '', 'http://dddertt17087594274.iteye.com/blog/2411509', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('374', '通过重写toString()方法,反射出某个类中的具体信息', '', 'http://vaxvall.iteye.com/blog/2411506', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('375', '九九乘法表(一)', '', 'http://vaxvall.iteye.com/blog/2411498', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('376', 'Java计算器(GUI的简单实战)', '', 'http://vaxvall.iteye.com/blog/2411497', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('377', 'Wait()、sleep()和yield()方法的区别', '', 'http://david-wrong.iteye.com/blog/2411483', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('378', 'JAVA多线程实现的四种方式', '', 'http://david-wrong.iteye.com/blog/2411461', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('379', '每天一个类之java.util.Vector', '', 'http://waxuanxuan.iteye.com/blog/2411460', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('380', 'log4j（转：https://www.cnblogs.com/crazyacking/p/5456347.html）', '', 'http://1060064054.iteye.com/blog/2411241', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('381', 'Springboot开发之我见', '', 'http://bufegar.iteye.com/blog/2411232', '1', 'ITEYE', '2018-02-24 20:27:39');
INSERT INTO `article` VALUES ('382', 'java 库存 进销存 商户 多用户管理系统 SSM springmvc 项目源码', '', 'http://dddfrtyty17083328941.iteye.com/blog/2411220', '1', 'ITEYE', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('383', 'java代码生成器 快速开发平台 二次开发 外包项目利器 springmvc SSM后台框架源码', '', 'http://dddfrtyty17083328941.iteye.com/blog/2411219', '1', 'ITEYE', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('384', 'org.apache.commons.lang3.RandomStringUtils工具类', '', 'http://2018scala.iteye.com/blog/2411197', '1', 'ITEYE', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('385', '从零开发参考价的一点点见解', '', 'http://bufegar.iteye.com/blog/2411147', '1', 'ITEYE', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('386', '理解数据库连接池底层原理之手写实现荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2069971', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('387', '透彻理解Spring事务设计思想之手写实现荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2068761', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('388', '设计模式之观察者模式荐 ', '', 'http://blog.51cto.com/zero01/2066623', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('389', 'Java高级特性——注解，这也许是最简单易懂的文章了荐 ', '', 'http://blog.51cto.com/13586365/2065324', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('390', 'Java定时任务调度详解荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2064092', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('391', '那一定都是你的错！- 一次FastDFS并发问题的排查经历荐 ', '', 'http://blog.51cto.com/ityouknow/2054992', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('392', 'spring rest 容易被忽视的后端服务 chunked 性能问题荐 ', '', 'http://blog.51cto.com/wangqingpei557/2044336', '1', '51CTO', '2018-02-24 20:27:40');
INSERT INTO `article` VALUES ('393', '三分钟读懂TT猫分布式、微服务和集群之路荐 ', '', 'http://blog.51cto.com/itstyle/1972470', '1', '51CTO', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('394', 'Spring Cloud在国内中小型公司能用起来吗？荐 ', '', 'http://blog.51cto.com/ityouknow/1964495', '1', '51CTO', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('395', '给你一份Spring Boot核心知识清单荐 ', '&lt;div class=&quot;artical-content-bak main-content editor-side-new&quot;&gt; 						&lt;div class=&quot;con editor-preview-side&quot;&gt;&lt;blockquote style=&quot;margin:0px 0px 1.2em;padding:15px 15px 15px;color:rgb(129,145,152);border-left:6px solid rgb(220,230,240);font-size:14px;line-height:22px;background:rgb(242,247,251);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;white-space:normal;&quot;&gt;&lt;ol style=&quot;padding:0px 0px 0px 40px;&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(74,74,74);margin-top:0px;line-height:22px;&quot;&gt;预警：本文非常长，建议先 mark 后看，也许是最后一次写这么长的文章&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(74,74,74);margin-top:0px;line-height:22px;&quot;&gt;说明：前面有 4 个小节关于 Spring 的基础知识，分别是：IOC 容器、JavaConfig、事件监听、SpringFactoriesLoader 详解，它们占据了本文的大部分内容，虽然它们之间可能没有太多的联系，但这些知识对于理解 Spring Boot 的核心原理至关重要，如果你对 Spring 框架烂熟于心，完全可以跳过这 4 个小节。正是因为这个系列的文章是由这些看似不相关的知识点组成，因此取名知识清单。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;在过去两三年的 Spring 生态圈，最让人兴奋的莫过于 Spring Boot 框架。或许从命名上就能看出这个框架的设计初衷：快速的启动 Spring 应用。因而 Spring Boot 应用本质上就是一个基于 Spring 框架的应用，它是 Spring 对“约定优先于配置”理念的最佳实践产物，它能够帮助开发者更快速高效地构建基于 Spring 生态圈的应用。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;那 Spring Boot 有何魔法？&lt;strong style=&quot;color:rgb(0,0,0);margin-top:0px;&quot;&gt;自动配置&lt;/strong&gt;、&lt;strong style=&quot;color:rgb(0,0,0);&quot;&gt;起步依赖&lt;/strong&gt;、&lt;strong style=&quot;color:rgb(0,0,0);&quot;&gt;Actuator&lt;/strong&gt;、&lt;strong style=&quot;color:rgb(0,0,0);&quot;&gt;命令行界面(CLI)&lt;/strong&gt; 是 Spring Boot 最重要的 4 大核心特性，其中 CLI 是 Spring Boot 的可选特性，虽然它功能强大，但也引入了一套不太常规的开发模型，因而这个系列的文章仅关注其它 3 种特性。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;如文章标题，本文是这个系列的第一部分，将为你打开 Spring Boot 的大门，重点为你剖析其启动流程以及自动配置实现原理。要掌握这部分核心内容，理解一些 Spring 框架的基础知识，将会让你事半功倍。&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:24px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;一、抛砖引玉：探索Spring IoC容器&lt;/h2&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;如果有看过 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.run()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;方法的源码，Spring Boot 冗长无比的启动流程一定会让你抓狂，透过现象看本质，SpringApplication 只是将一个典型的 Spring 应用的启动流程进行了扩展，因此，透彻理解 Spring 容器是打开 Spring Boot 大门的一把钥匙。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;1.1、Spring IoC容器&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;可以把 Spring IoC 容器比作一间餐馆，当你来到餐馆，通常会直接招呼服务员：点菜！至于菜的原料是什么？如何用原料把菜做出来？可能你根本就不关心。IoC 容器也是一样，你只需要告诉它需要某个bean，它就把对应的实例（instance）扔给你，至于这个bean是否依赖其他组件，怎样完成它的初始化，根本就不需要你关心。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;作为餐馆，想要做出菜肴，得知道菜的原料和菜谱，同样地，IoC 容器想要管理各个业务对象以及它们之间的依赖关系，需要通过某种途径来记录和管理这些信息。 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanDefinition&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;对象就承担了这个责任：容器中的每一个 bean 都会有一个对应的 BeanDefinition 实例，该实例负责保存bean对象的所有必要信息，包括 bean 对象的 class 类型、是否是抽象类、构造方法和参数、其它属性等等。当客户端向容器请求相应对象时，容器就会通过这些信息为客户端返回一个完整可用的 bean 实例。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;原材料已经准备好（把 BeanDefinition 看着原料），开始做菜吧，等等，你还需要一份菜谱， &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanDefinitionRegistry&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;和 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanFactory&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;就是这份菜谱，BeanDefinitionRegistry 抽象出 bean 的注册逻辑，而 BeanFactory 则抽象出了 bean 的管理逻辑，而各个 BeanFactory 的实现类就具体承担了 bean 的注册以及管理工作。它们之间的关系就如下图：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/175724-911dc459ef9cec28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;BeanFactory、BeanDefinitionRegistry关系图（来自：Spring揭秘）&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;DefaultListableBeanFactory&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;作为一个比较通用的 BeanFactory 实现，它同时也实现了 BeanDefinitionRegistry 接口，因此它就承担了 Bean 的注册管理工作。从图中也可以看出，BeanFactory 接口中主要包含 getBean、containBean、getType、getAliases 等管理 bean 的方法，而 BeanDefinitionRegistry 接口则包含 registerBeanDefinition、removeBeanDefinition、getBeanDefinition 等注册管理 BeanDefinition 的方法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;下面通过一段简单的代码来模拟 BeanFactory 底层是如何工作的：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;默认容器实现 DefaultListableBeanFactory&amp;nbsp;beanRegistry&amp;nbsp;=&amp;nbsp;new&amp;nbsp;DefaultListableBeanFactory(); //&amp;nbsp;根据业务对象构造相应的BeanDefinition AbstractBeanDefinition&amp;nbsp;definition&amp;nbsp;=&amp;nbsp;new&amp;nbsp;RootBeanDefinition(Business.class,true); //&amp;nbsp;将bean定义注册到容器中 beanRegistry.registerBeanDefinition(&amp;quot;beanName&amp;quot;,definition); //&amp;nbsp;如果有多个bean，还可以指定各个bean之间的依赖关系 //&amp;nbsp;........  //&amp;nbsp;然后可以从容器中获取这个bean的实例 //&amp;nbsp;注意：这里的beanRegistry其实实现了BeanFactory接口，所以可以强转， //&amp;nbsp;单纯的BeanDefinitionRegistry是无法强制转换到BeanFactory类型的 BeanFactory&amp;nbsp;container&amp;nbsp;=&amp;nbsp;(BeanFactory)beanRegistry; Business&amp;nbsp;business&amp;nbsp;=&amp;nbsp;(Business)container.getBean(&amp;quot;beanName&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;这段代码仅为了说明 BeanFactory 底层的大致工作流程，实际情况会更加复杂，比如 bean 之间的依赖关系可能定义在外部配置文件(XML/Properties)中、也可能是注解方式。Spring IoC 容器的整个工作流程大致可以分为两个阶段：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;①、容器启动阶段&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;容器启动时，会通过某种途径加载 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;MetaData&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;。除了代码方式比较直接外，在大部分情况下，容器需要依赖某些工具类，比如： &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanDefinitionReader&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;，BeanDefinitionReader 会对加载的 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;MetaData&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;进行解析和分析，并将分析后的信息组装为相应的 BeanDefinition，最后把这些保存了 bean 定义的 BeanDefinition，注册到相应的 BeanDefinitionRegistry，这样容器的启动工作就完成了。这个阶段主要完成一些准备性工作，更侧重于 bean 对象管理信息的收集，当然一些验证性或者辅助性的工作也在这一阶段完成。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;来看一个简单的例子吧，过往，所有的 bean 都定义在 XML 配置文件中，下面的代码将模拟 BeanFactory 如何从配置文件中加载 bean 的定义以及依赖关系：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;通常为BeanDefinitionRegistry的实现类，这里以DeFaultListabeBeanFactory为例 BeanDefinitionRegistry&amp;nbsp;beanRegistry&amp;nbsp;=&amp;nbsp;new&amp;nbsp;DefaultListableBeanFactory();&amp;nbsp; //&amp;nbsp;XmlBeanDefinitionReader实现了BeanDefinitionReader接口，用于解析XML文件 XmlBeanDefinitionReader&amp;nbsp;beanDefinitionReader&amp;nbsp;=&amp;nbsp;new&amp;nbsp;XmlBeanDefinitionReaderImpl(beanRegistry); //&amp;nbsp;加载配置文件 beanDefinitionReader.loadBeanDefinitions(&amp;quot;classpath:spring-bean.xml&amp;quot;);  //&amp;nbsp;从容器中获取bean实例 BeanFactory&amp;nbsp;container&amp;nbsp;=&amp;nbsp;(BeanFactory)beanRegistry; Business&amp;nbsp;business&amp;nbsp;=&amp;nbsp;(Business)container.getBean(&amp;quot;beanName&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;②、Bean的实例化阶段&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;经过第一阶段，所有 bean 定义都通过 BeanDefinition 的方式注册到 BeanDefinitionRegistry 中，当某个请求通过容器的 getBean 方法请求某个对象，或者因为依赖关系容器需要隐式的调用 getBean 时，就会触发第二阶段的活动：容器会首先检查所请求的对象之前是否已经实例化完成。如果没有，则会根据注册的 BeanDefinition 所提供的信息实例化被请求对象，并为其注入依赖。当该对象装配完毕后，容器会立即将其返回给请求方法使用。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;BeanFactory 只是 Spring IoC 容器的一种实现，如果没有特殊指定，它采用采用延迟初始化策略：只有当访问容器中的某个对象时，才对该对象进行初始化和依赖注入操作。而在实际场景下，我们更多的使用另外一种类型的容器： &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;ApplicationContext&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;，它构建在 BeanFactory 之上，属于更高级的容器，除了具有 BeanFactory 的所有能力之外，还提供对事件监听机制以及国际化的支持等。它管理的 bean，在容器启动时全部完成初始化和依赖注入操作。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;1.2、Spring容器扩展机制&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;IoC 容器负责管理容器中所有bean的生命周期，而在 bean 生命周期的不同阶段，Spring 提供了不同的扩展点来改变 bean 的命运。在容器的启动阶段， &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanFactoryPostProcessor&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;允许我们在容器实例化相应对象之前，对注册到容器的 BeanDefinition 所保存的信息做一些额外的操作，比如修改 bean 定义的某些属性或者增加其他信息等。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;如果要自定义扩展类，通常需要实现 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.springframework.beans.factory.config.BeanFactoryPostProcessor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;接口，与此同时，因为容器中可能有多个BeanFactoryPostProcessor，可能还需要实现 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.springframework.core.Ordered&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;接口，以保证BeanFactoryPostProcessor按照顺序执行。Spring提供了为数不多的BeanFactoryPostProcessor实现，我们以 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;PropertyPlaceholderConfigurer&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;来说明其大致的工作流程。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;在Spring项目的XML配置文件中，经常可以看到许多配置项的值使用占位符，而将占位符所代表的值单独配置到独立的properties文件，这样可以将散落在不同XML文件中的配置集中管理，而且也方便运维根据不同的环境进行配置不同的值。这个非常实用的功能就是由PropertyPlaceholderConfigurer负责实现的。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;根据前文，当BeanFactory在第一阶段加载完所有配置信息时，BeanFactory中保存的对象的属性还是以占位符方式存在的，比如 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;{jdbc.mysql.url}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;。当PropertyPlaceholderConfigurer作为BeanFactoryPostProcessor被应用时，它会使用properties配置文件中的值来替换相应的BeanDefinition中占位符所表示的属性值。当需要实例化bean时，bean定义中的属性值就已经被替换成我们配置的值。当然其实现比上面描述的要复杂一些，这里仅说明其大致工作原理，更详细的实现可以参考其源码。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;与之相似的，还有 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanPostProcessor&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;，其存在于对象实例化阶段。跟BeanFactoryPostProcessor类似，它会处理容器内所有符合条件并且已经实例化后的对象。简单的对比，BeanFactoryPostProcessor处理bean的定义，而BeanPostProcessor则处理bean完成实例化后的对象。BeanPostProcessor定义了两个接口：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;interface&amp;nbsp;BeanPostProcessor&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;前置处理 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;postProcessBeforeInitialization(Object&amp;nbsp;bean,&amp;nbsp;String&amp;nbsp;beanName)&amp;nbsp;throws&amp;nbsp;BeansException; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;后置处理 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;postProcessAfterInitialization(Object&amp;nbsp;bean,&amp;nbsp;String&amp;nbsp;beanName)&amp;nbsp;throws&amp;nbsp;BeansException; }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;为了理解这两个方法执行的时机，简单的了解下bean的整个生命周期：&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/175724-0d50d67d980161b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Bean的实例化过程（来自：Spring揭秘）&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;postProcessBeforeInitialization&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;方法与 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;postProcessAfterInitialization&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;分别对应图中前置处理和后置处理两个步骤将执行的方法。这两个方法中都传入了bean对象实例的引用，为扩展容器的对象实例化过程提供了很大便利，在这儿几乎可以对传入的实例执行任何操作。注解、AOP等功能的实现均大量使用了 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;BeanPostProcessor&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;，比如有一个自定义注解，你完全可以实现BeanPostProcessor的接口，在其中判断bean对象的脑袋上是否有该注解，如果有，你可以对这个bean实例执行任何操作，想想是不是非常的简单？&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;再来看一个更常见的例子，在Spring中经常能够看到各种各样的Aware接口，其作用就是在对象实例化完成以后将Aware接口定义中规定的依赖注入到当前实例中。比如最常见的 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span style=&quot;margin-top:0px;padding:0px 2px;font-size:16px;&quot;&gt;ApplicationContextAware&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;接口，实现了这个接口的类都可以获取到一个ApplicationContext对象。当容器中每个对象的实例化过程走到BeanPostProcessor前置处理这一步时，容器会检测到之前注册到容器的ApplicationContextAwareProcessor，然后就会调用其postProcessBeforeInitialization()方法，检查并设置Aware相关依赖。看看代码吧，是不是很简单：&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;代码来自：org.springframework.context.support.ApplicationContextAwareProcessor //&amp;nbsp;其postProcessBeforeInitialization方法调用了invokeAwareInterfaces方法 private&amp;nbsp;void&amp;nbsp;invokeAwareInterfaces(Object&amp;nbsp;bean)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(bean&amp;nbsp;instanceof&amp;nbsp;EnvironmentAware)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((EnvironmentAware)&amp;nbsp;bean).setEnvironment(this.applicationContext.getEnvironment()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(bean&amp;nbsp;instanceof&amp;nbsp;ApplicationContextAware)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((ApplicationContextAware)&amp;nbsp;bean).setApplicationContext(this.applicationContext); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;最后总结一下，本小节内容和你一起回顾了Spring容器的部分核心内容，限于篇幅不能写更多，但理解这部分内容，足以让您轻松理解Spring Boot的启动原理，如果在后续的学习过程中遇到一些晦涩难懂的知识，再回过头来看看Spring的核心知识，也许有意想不到的效果。也许Spring Boot的中文资料很少，但Spring的中文资料和书籍有太多太多，总有东西能给你启发。&lt;/p&gt;&lt;h2 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:24px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;二、夯实基础：JavaConfig与常见Annotation&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;2.1、JavaConfig&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;我们知道 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;bean&lt;/span&gt;&lt;/code&gt;是Spring IOC中非常核心的概念，Spring容器负责bean的生命周期的管理。在最初，Spring使用XML配置文件的方式来描述bean的定义以及相互间的依赖关系，但随着Spring的发展，越来越多的人对这种方式表示不满，因为Spring项目的所有业务类均以bean的形式配置在XML文件中，造成了大量的XML文件，使项目变得复杂且难以管理。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;后来，基于纯Java Annotation依赖注入框架 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Guice&lt;/span&gt;&lt;/code&gt;出世，其性能明显优于采用XML方式的Spring，甚至有部分人认为， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Guice&lt;/span&gt;&lt;/code&gt;可以完全取代Spring（ &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Guice&lt;/span&gt;&lt;/code&gt;仅是一个轻量级IOC框架，取代Spring还差的挺远）。正是这样的危机感，促使Spring及社区推出并持续完善了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;JavaConfig&lt;/span&gt;&lt;/code&gt;子项目，它基于Java代码和Annotation注解来描述bean之间的依赖绑定关系。比如，下面是使用XML配置方式来描述bean的定义：&lt;/p&gt;&lt;pre class=&quot;brush:html;toolbar:false&quot;&gt;&amp;lt;bean&amp;nbsp;id=&amp;quot;bookService&amp;quot;&amp;nbsp;class=&amp;quot;cn.moondev.service.BookServiceImpl&amp;quot;&amp;gt;&amp;lt;/bean&amp;gt;&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;而基于JavaConfig的配置形式是这样的：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Configuration public&amp;nbsp;class&amp;nbsp;MoonBookConfiguration&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;任何标志了@Bean的方法，其返回值将作为一个bean注册到Spring的IOC容器中 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;方法名默认成为该bean定义的id &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;BookService&amp;nbsp;bookService()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;BookServiceImpl(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;如果两个bean之间有依赖关系的话，在XML配置中应该是这样：&lt;/p&gt;&lt;pre class=&quot;brush:html;toolbar:false&quot;&gt;&amp;lt;bean&amp;nbsp;id=&amp;quot;bookService&amp;quot;&amp;nbsp;class=&amp;quot;cn.moondev.service.BookServiceImpl&amp;quot;&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;property&amp;nbsp;name=&amp;quot;dependencyService&amp;quot;&amp;nbsp;ref=&amp;quot;dependencyService&amp;quot;/&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;bean&amp;nbsp;id=&amp;quot;otherService&amp;quot;&amp;nbsp;class=&amp;quot;cn.moondev.service.OtherServiceImpl&amp;quot;&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;property&amp;nbsp;name=&amp;quot;dependencyService&amp;quot;&amp;nbsp;ref=&amp;quot;dependencyService&amp;quot;/&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;bean&amp;nbsp;id=&amp;quot;dependencyService&amp;quot;&amp;nbsp;class=&amp;quot;DependencyServiceImpl&amp;quot;/&amp;gt;&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;而在JavaConfig中则是这样：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Configuration public&amp;nbsp;class&amp;nbsp;MoonBookConfiguration&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;如果一个bean依赖另一个bean，则直接调用对应JavaConfig类中依赖bean的创建方法即可 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;这里直接调用dependencyService() &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;BookService&amp;nbsp;bookService()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;BookServiceImpl(dependencyService()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;OtherService&amp;nbsp;otherService()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;OtherServiceImpl(dependencyService()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;DependencyService&amp;nbsp;dependencyService()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;DependencyServiceImpl(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;你可能注意到这个示例中，有两个bean都依赖于dependencyService，也就是说当初始化bookService时会调用 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;dependencyService&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;，在初始化otherService时也会调用 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;dependencyService&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;，那么问题来了？这时候IOC容器中是有一个dependencyService实例还是两个？这个问题留着大家思考吧，这里不再赘述。&lt;/p&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;2.2、@ComponentScan&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@ComponentScan&lt;/span&gt;&lt;/code&gt;注解对应XML配置形式中的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;tag&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;&amp;lt;context:component-scan&amp;gt;&lt;/span&gt;&lt;/code&gt;元素，表示启用组件扫描，Spring会自动扫描所有通过注解配置的bean，然后将其注册到IOC容器中。我们可以通过 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;basePackages&lt;/span&gt;&lt;/code&gt;等属性来指定 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@ComponentScan&lt;/span&gt;&lt;/code&gt;自动扫描的范围，如果不指定，默认从声明 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@ComponentScan&lt;/span&gt;&lt;/code&gt;所在类的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;package&lt;/span&gt;&lt;/code&gt;进行扫描。正因为如此，SpringBoot的启动类都默认在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;/main/java&lt;/span&gt;&lt;/code&gt;下。&lt;/p&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;2.3、@Import&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Import&lt;/span&gt;&lt;/code&gt;注解用于导入配置类，举个简单的例子：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Configuration public&amp;nbsp;class&amp;nbsp;MoonBookConfiguration&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;BookService&amp;nbsp;bookService()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;BookServiceImpl(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;现在有另外一个配置类，比如： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;MoonUserConfiguration&lt;/span&gt;&lt;/code&gt;，这个配置类中有一个bean依赖于 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;MoonBookConfiguration&lt;/span&gt;&lt;/code&gt;中的bookService，如何将这两个bean组合在一起？借助 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Import&lt;/span&gt;&lt;/code&gt;即可：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Configuration //&amp;nbsp;可以同时导入多个配置类，比如：@Import({A.class,B.class}) @Import(MoonBookConfiguration.class) public&amp;nbsp;class&amp;nbsp;MoonUserConfiguration&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;UserService&amp;nbsp;userService(BookService&amp;nbsp;bookService)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;BookServiceImpl(bookService); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;需要注意的是，在4.2之前， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Import&lt;/span&gt;&lt;/code&gt;注解只支持导入配置类，但是在4.2之后，它支持导入普通类，并将这个类作为一个bean的定义注册到IOC容器中。&lt;/p&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;2.4、@Conditional&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Conditional&lt;/span&gt;&lt;/code&gt;注解表示在满足某种条件后才初始化一个bean或者启用某些配置。它一般用在由 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Component&lt;/span&gt;&lt;/code&gt;、 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Service&lt;/span&gt;&lt;/code&gt;、 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Configuration&lt;/span&gt;&lt;/code&gt;等注解标识的类上面，或者由 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Bean&lt;/span&gt;&lt;/code&gt;标记的方法上。如果一个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Configuration&lt;/span&gt;&lt;/code&gt;类标记了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Conditional&lt;/span&gt;&lt;/code&gt;，则该类中所有标识了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Bean&lt;/span&gt;&lt;/code&gt;的方法和 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Import&lt;/span&gt;&lt;/code&gt;注解导入的相关类将遵从这些条件。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;在Spring里可以很方便的编写你自己的条件类，所要做的就是实现 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Condition&lt;/span&gt;&lt;/code&gt;接口，并覆盖它的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法。举个例子，下面的简单条件类表示只有在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Classpath&lt;/span&gt;&lt;/code&gt;里存在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;JdbcTemplate&lt;/span&gt;&lt;/code&gt;类时才生效：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;class&amp;nbsp;JdbcTemplateCondition&amp;nbsp;implements&amp;nbsp;Condition&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;matches(ConditionContext&amp;nbsp;conditionContext,&amp;nbsp;AnnotatedTypeMetadata&amp;nbsp;annotatedTypeMetadata)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;conditionContext.getClassLoader().loadClass(&amp;quot;org.springframework.jdbc.core.JdbcTemplate&amp;quot;); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;true; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(ClassNotFoundException&amp;nbsp;e)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;当你用Java来声明bean的时候，可以使用这个自定义条件类：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Conditional(JdbcTemplateCondition.class) @Service public&amp;nbsp;MyService&amp;nbsp;service()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;这个例子中只有当 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;JdbcTemplateCondition&lt;/span&gt;&lt;/code&gt;类的条件成立时才会创建MyService这个bean。也就是说MyService这bean的创建条件是 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;classpath&lt;/span&gt;&lt;/code&gt;里面包含 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;JdbcTemplate&lt;/span&gt;&lt;/code&gt;，否则这个bean的声明就会被忽略掉。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;Boot&lt;/span&gt;&lt;/code&gt;定义了很多有趣的条件，并把他们运用到了配置类上，这些配置类构成了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;Boot&lt;/span&gt;&lt;/code&gt;的自动配置的基础。 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;Boot&lt;/span&gt;&lt;/code&gt;运用条件化配置的方法是：定义多个特殊的条件化注解，并将它们用到配置类上。下面列出了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;Boot&lt;/span&gt;&lt;/code&gt;提供的部分条件化注解：&lt;/p&gt;&lt;table style=&quot;width:718px;&quot; width=&quot;768&quot;&gt;&lt;thead style=&quot;margin-top:0px;&quot;&gt;&lt;tr style=&quot;margin-top:0px;&quot; class=&quot;firstRow&quot;&gt;&lt;th style=&quot;margin:0px;text-align:left;border-top-width:1px;&quot;&gt;条件化注解&lt;/th&gt;&lt;th style=&quot;margin:0px;text-align:left;border-top-width:1px;&quot;&gt;配置生效条件&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=&quot;margin-top:0px;&quot;&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnBean&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;配置了某个特定bean&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background-color:rgb(248,248,248);&quot;&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnMissingBean&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;没有配置特定的bean&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnClass&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;Classpath里有指定的类&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background-color:rgb(248,248,248);&quot;&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnMissingClass&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;Classpath里没有指定的类&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnExpression&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;给定的Spring Expression Language表达式计算结果为true&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background-color:rgb(248,248,248);&quot;&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnJava&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;Java的版本匹配特定指或者一个范围值&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnProperty&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;指定的配置属性要有一个明确的值&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background-color:rgb(248,248,248);&quot;&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnResource&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;Classpath里有指定的资源&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnWebApplication&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;这是一个Web应用程序&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background-color:rgb(248,248,248);&quot;&gt;&lt;td style=&quot;margin:0px;&quot;&gt;@ConditionalOnNotWebApplication&lt;/td&gt;&lt;td style=&quot;margin:0px;&quot;&gt;这不是一个Web应用程序&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:20px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;2.5、@ConfigurationProperties与@EnableConfigurationProperties&lt;/h3&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;当某些属性的值需要配置的时候，我们一般会在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.properties&lt;/span&gt;&lt;/code&gt;文件中新建配置项，然后在bean中使用 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Value&lt;/span&gt;&lt;/code&gt;注解来获取配置的值，比如下面配置数据源的代码。&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;jdbc&amp;nbsp;config jdbc.mysql.url=jdbc:mysql://localhost:3306/sampledb jdbc.mysql.username=root jdbc.mysql.password=123456 ......  //&amp;nbsp;配置数据源 @Configuration public&amp;nbsp;class&amp;nbsp;HikariDataSourceConfiguration&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Value(&amp;quot;jdbc.mysql.url&amp;quot;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;url; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Value(&amp;quot;jdbc.mysql.username&amp;quot;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;user; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Value(&amp;quot;jdbc.mysql.password&amp;quot;) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;password; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;HikariDataSource&amp;nbsp;dataSource()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HikariConfig&amp;nbsp;hikariConfig&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HikariConfig(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hikariConfig.setJdbcUrl(url); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hikariConfig.setUsername(user); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hikariConfig.setPassword(password); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;省略部分代码 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;HikariDataSource(hikariConfig); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;使用 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Value&lt;/span&gt;&lt;/code&gt;注解注入的属性通常都比较简单，如果同一个配置在多个地方使用，也存在不方便维护的问题（考虑下，如果有几十个地方在使用某个配置，而现在你想改下名字，你改怎么做？）。对于更为复杂的配置，Spring Boot提供了更优雅的实现方式，那就是 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;/code&gt;注解。我们可以通过下面的方式来改写上面的代码：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Component //&amp;nbsp;&amp;nbsp;还可以通过@PropertySource(&amp;quot;classpath:jdbc.properties&amp;quot;)来指定配置文件 @ConfigurationProperties(&amp;quot;jdbc.mysql&amp;quot;) //&amp;nbsp;前缀=jdbc.mysql，会在配置文件中寻找jdbc.mysql.*的配置项 pulic&amp;nbsp;class&amp;nbsp;JdbcConfig&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;url; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;username; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;password; }  @Configuration public&amp;nbsp;class&amp;nbsp;HikariDataSourceConfiguration&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@AutoWired &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;JdbcConfig&amp;nbsp;config; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;HikariDataSource&amp;nbsp;dataSource()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HikariConfig&amp;nbsp;hikariConfig&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HikariConfig(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hikariConfig.setJdbcUrl(config.url); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hikariConfig.setUsername(config.username); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hikariConfig.setPassword(config.password); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;省略部分代码 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;HikariDataSource(hikariConfig); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;/code&gt;对于更为复杂的配置，处理起来也是得心应手，比如有如下配置文件：&lt;/p&gt;&lt;pre class=&quot;brush:plain;toolbar:false&quot;&gt;#App app.menus[0].title=Home app.menus[0].name=Home app.menus[0].path=/ app.menus[1].title=Login app.menus[1].name=Login app.menus[1].path=/login  app.compiler.timeout=5 app.compiler.output-folder=/temp/  app.error=/error/&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;可以定义如下配置类来接收这些属性&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Component @ConfigurationProperties(&amp;quot;app&amp;quot;) public&amp;nbsp;class&amp;nbsp;AppProperties&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;error; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;List&amp;lt;Menu&amp;gt;&amp;nbsp;menus&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ArrayList&amp;lt;&amp;gt;(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Compiler&amp;nbsp;compiler&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Compiler();  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;class&amp;nbsp;Menu&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;name; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;path; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;title; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;class&amp;nbsp;Compiler&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;timeout; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;outputFolder; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@EnableConfigurationProperties&lt;/span&gt;&lt;/code&gt;注解表示对 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;/code&gt;的内嵌支持，默认会将对应Properties Class作为bean注入的IOC容器中，即在相应的Properties类上不用加 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Component&lt;/span&gt;&lt;/code&gt;注解。&lt;/p&gt;&lt;h2 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:24px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;三、削铁如泥：SpringFactoriesLoader详解&lt;/h2&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;JVM提供了3种类加载器： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;BootstrapClassLoader&lt;/span&gt;&lt;/code&gt;、 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;ExtClassLoader&lt;/span&gt;&lt;/code&gt;、 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;AppClassLoader&lt;/span&gt;&lt;/code&gt;分别加载Java核心类库、扩展类库以及应用的类路径( &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;CLASSPATH&lt;/span&gt;&lt;/code&gt;)下的类库。JVM通过双亲委派模型进行类的加载，我们也可以通过继承 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.lang.classloader&lt;/span&gt;&lt;/code&gt;实现自己的类加载器。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;何为双亲委派模型？当一个类加载器收到类加载任务时，会先交给自己的父加载器去完成，因此最终加载任务都会传递到最顶层的BootstrapClassLoader，只有当父加载器无法完成加载任务时，才会尝试自己来加载。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;采用双亲委派模型的一个好处是保证使用不同类加载器最终得到的都是同一个对象，这样就可以保证Java 核心库的类型安全，比如，加载位于rt.jar包中的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.lang.Object&lt;/span&gt;&lt;/code&gt;类，不管是哪个加载器加载这个类，最终都是委托给顶层的BootstrapClassLoader来加载的，这样就可以保证任何的类加载器最终得到的都是同样一个Object对象。查看ClassLoader的源码，对双亲委派模型会有更直观的认识：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;protected&amp;nbsp;Class&amp;lt;?&amp;gt;&amp;nbsp;loadClass(String&amp;nbsp;name,&amp;nbsp;boolean&amp;nbsp;resolve)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;synchronized&amp;nbsp;(getClassLoadingLock(name))&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;首先，检查该类是否已经被加载，如果从JVM缓存中找到该类，则直接返回 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Class&amp;lt;?&amp;gt;&amp;nbsp;c&amp;nbsp;=&amp;nbsp;findLoadedClass(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(c&amp;nbsp;==&amp;nbsp;null)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;遵循双亲委派的模型，首先会通过递归从父加载器开始找， &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;直到父类加载器是BootstrapClassLoader为止 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(parent&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c&amp;nbsp;=&amp;nbsp;parent.loadClass(name,&amp;nbsp;false); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c&amp;nbsp;=&amp;nbsp;findBootstrapClassOrNull(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(ClassNotFoundException&amp;nbsp;e)&amp;nbsp;{} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(c&amp;nbsp;==&amp;nbsp;null)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;如果还找不到，尝试通过findClass方法去寻找 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;findClass是留给开发者自己实现的，也就是说 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;自定义类加载器时，重写此方法即可 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c&amp;nbsp;=&amp;nbsp;findClass(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(resolve)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resolveClass(c); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;c; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;但双亲委派模型并不能解决所有的类加载器问题，比如，Java 提供了很多服务提供者接口( &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;ProviderInterface&lt;/span&gt;&lt;/code&gt;，SPI)，允许第三方为这些接口提供实现。常见的 SPI 有 JDBC、JNDI、JAXP 等，这些SPI的接口由核心类库提供，却由第三方实现，这样就存在一个问题：SPI 的接口是 Java 核心库的一部分，是由BootstrapClassLoader加载的；SPI实现的Java类一般是由AppClassLoader来加载的。BootstrapClassLoader是无法找到 SPI 的实现类的，因为它只加载Java的核心库。它也不能代理给AppClassLoader，因为它是最顶层的类加载器。也就是说，双亲委派模型并不能解决这个问题。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;线程上下文类加载器( &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;ContextClassLoader&lt;/span&gt;&lt;/code&gt;)正好解决了这个问题。从名称上看，可能会误解为它是一种新的类加载器，实际上，它仅仅是Thread类的一个变量而已，可以通过 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;setContextClassLoader&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;(ClassLoadercl)&lt;/span&gt;&lt;/code&gt;和 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;getContextClassLoader&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;来设置和获取该对象。如果不做任何的设置，Java应用的线程的上下文类加载器默认就是AppClassLoader。在核心类库使用SPI接口时，传递的类加载器使用线程上下文类加载器，就可以成功的加载到SPI实现的类。线程上下文类加载器在很多SPI的实现中都会用到。但在JDBC中，你可能会看到一种更直接的实现方式，比如，JDBC驱动管理 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.sql.Driver&lt;/span&gt;&lt;/code&gt;中的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;loadInitialDrivers&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法中，你可以直接看到JDK是如何加载驱动的：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;for&amp;nbsp;(String&amp;nbsp;aDriver&amp;nbsp;:&amp;nbsp;driversList)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;直接使用AppClassLoader &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Class.forName(aDriver,&amp;nbsp;true,&amp;nbsp;ClassLoader.getSystemClassLoader()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(Exception&amp;nbsp;ex)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;println(&amp;quot;DriverManager.Initialize:&amp;nbsp;load&amp;nbsp;failed:&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;ex); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;其实讲解线程上下文类加载器，最主要是让大家在看到 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.currentThread().getClassLoader()&lt;/span&gt;&lt;/code&gt;和 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.currentThread().getContextClassLoader()&lt;/span&gt;&lt;/code&gt;时不会一脸懵逼，这两者除了在许多底层框架中取得的ClassLoader可能会有所不同外，其他大多数业务场景下都是一样的，大家只要知道它是为了解决什么问题而存在的即可。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;类加载器除了加载class外，还有一个非常重要功能，就是加载资源，它可以从jar包中读取任何资源文件，比如， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.getResources(Stringname)&lt;/span&gt;&lt;/code&gt;方法就是用于读取jar包中的资源文件，其代码如下：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;Enumeration&amp;lt;URL&amp;gt;&amp;nbsp;getResources(String&amp;nbsp;name)&amp;nbsp;throws&amp;nbsp;IOException&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Enumeration&amp;lt;URL&amp;gt;[]&amp;nbsp;tmp&amp;nbsp;=&amp;nbsp;(Enumeration&amp;lt;URL&amp;gt;[])&amp;nbsp;new&amp;nbsp;Enumeration&amp;lt;?&amp;gt;[2]; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(parent&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp[0]&amp;nbsp;=&amp;nbsp;parent.getResources(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp[0]&amp;nbsp;=&amp;nbsp;getBootstrapResources(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp[1]&amp;nbsp;=&amp;nbsp;findResources(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;CompoundEnumeration&amp;lt;&amp;gt;(tmp); }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;是不是觉得有点眼熟，不错，它的逻辑其实跟类加载的逻辑是一样的，首先判断父类加载器是否为空，不为空则委托父类加载器执行资源查找任务，直到BootstrapClassLoader，最后才轮到自己查找。而不同的类加载器负责扫描不同路径下的jar包，就如同加载class一样，最后会扫描所有的jar包，找到符合条件的资源文件。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;类加载器的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;findResources&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;(name)&lt;/span&gt;&lt;/code&gt;方法会遍历其负责加载的所有jar包，找到jar包中名称为name的资源文件，这里的资源可以是任何文件，甚至是.class文件，比如下面的示例，用于查找Array.class文件：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;寻找Array.class文件 public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;throws&amp;nbsp;Exception{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Array.class的完整路径 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;name&amp;nbsp;=&amp;nbsp;&amp;quot;java/sql/Array.class&amp;quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Enumeration&amp;lt;URL&amp;gt;&amp;nbsp;urls&amp;nbsp;=&amp;nbsp;Thread.currentThread().getContextClassLoader().getResources(name); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(urls.hasMoreElements())&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL&amp;nbsp;url&amp;nbsp;=&amp;nbsp;urls.nextElement(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(url.toString()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;运行后可以得到如下结果：&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;$JAVA_HOME/jre/lib/rt.jar!/java/sql/Array.class&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;根据资源文件的URL，可以构造相应的文件来读取资源内容。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;看到这里，你可能会感到挺奇怪的，你不是要详解 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;SpringFactoriesLoader&lt;/span&gt;&lt;/code&gt;吗？上来讲了一堆ClassLoader是几个意思？看下它的源码你就知道了：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;FACTORIES_RESOURCE_LOCATION&amp;nbsp;=&amp;nbsp;&amp;quot;META-INF/spring.factories&amp;quot;; //&amp;nbsp;spring.factories文件的格式为：key=value1,value2,value3 //&amp;nbsp;从所有的jar包中找到META-INF/spring.factories文件 //&amp;nbsp;然后从文件中解析出key=factoryClass类名称的所有value值 public&amp;nbsp;static&amp;nbsp;List&amp;lt;String&amp;gt;&amp;nbsp;loadFactoryNames(Class&amp;lt;?&amp;gt;&amp;nbsp;factoryClass,&amp;nbsp;ClassLoader&amp;nbsp;classLoader)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;factoryClassName&amp;nbsp;=&amp;nbsp;factoryClass.getName(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;取得资源文件的URL &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Enumeration&amp;lt;URL&amp;gt;&amp;nbsp;urls&amp;nbsp;=&amp;nbsp;(classLoader&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;?&amp;nbsp;classLoader.getResources(FACTORIES_RESOURCE_LOCATION)&amp;nbsp;:&amp;nbsp;ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;String&amp;gt;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ArrayList&amp;lt;String&amp;gt;(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;遍历所有的URL &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(urls.hasMoreElements())&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL&amp;nbsp;url&amp;nbsp;=&amp;nbsp;urls.nextElement(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;根据资源文件URL解析properties文件 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Properties&amp;nbsp;properties&amp;nbsp;=&amp;nbsp;PropertiesLoaderUtils.loadProperties(new&amp;nbsp;UrlResource(url)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;factoryClassNames&amp;nbsp;=&amp;nbsp;properties.getProperty(factoryClassName); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;组装数据，并返回 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result.addAll(Arrays.asList(StringUtils.commaDelimitedListToStringArray(factoryClassNames))); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result; }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;有了前面关于ClassLoader的知识，再来理解这段代码，是不是感觉豁然开朗：从 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;CLASSPATH&lt;/span&gt;&lt;/code&gt;下的每个Jar包中搜寻所有 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;META&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;-INF/spring.factories&lt;/span&gt;&lt;/code&gt;配置文件，然后将解析properties文件，找到指定名称的配置后返回。需要注意的是，其实这里不仅仅是会去ClassPath路径下查找，会扫描所有路径下的Jar包，只不过这个文件只会在Classpath下的jar包中。来简单看下 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.factories&lt;/span&gt;&lt;/code&gt;文件的内容吧：&lt;/p&gt;&lt;pre class=&quot;brush:bash;toolbar:false&quot;&gt;//&amp;nbsp;来自&amp;nbsp;org.springframework.boot.autoconfigure下的META-INF/spring.factories //&amp;nbsp;EnableAutoConfiguration后文会讲到，它用于开启Spring&amp;nbsp;Boot自动配置功能 org.springframework.boot.autoconfigure.EnableAutoConfiguration= org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;执行 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;loadFactoryNames&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;(EnableAutoConfiguration.class,classLoader)&lt;/span&gt;&lt;/code&gt;后，得到对应的一组 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Configuration&lt;/span&gt;&lt;/code&gt;类， 我们就可以通过反射实例化这些类然后注入到IOC容器中，最后容器里就有了一系列标注了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;@Configuration&lt;/span&gt;&lt;/code&gt;的JavaConfig形式的配置类。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;这就是 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;SpringFactoriesLoader&lt;/span&gt;&lt;/code&gt;，它本质上属于Spring框架私有的一种扩展方案，类似于SPI，Spring Boot在Spring基础上的很多核心功能都是基于此，希望大家可以理解。&lt;/p&gt;&lt;h2 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:24px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;四、另一件武器：Spring容器的事件监听机制&lt;/h2&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;过去，事件监听机制多用于图形界面编程，比如：&lt;strong style=&quot;color:rgb(0,0,0);margin-top:0px;&quot;&gt;点击&lt;/strong&gt;按钮、在文本框&lt;strong style=&quot;color:rgb(0,0,0);&quot;&gt;输入&lt;/strong&gt;内容等操作被称为事件，而当事件触发时，应用程序作出一定的响应则表示应用监听了这个事件，而在服务器端，事件的监听机制更多的用于异步通知以及监控和异常处理。Java提供了实现事件监听机制的两个基础类：自定义事件类型扩展自 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.util.EventObject&lt;/span&gt;&lt;/code&gt;、事件的监听器扩展自 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.util.EventListener&lt;/span&gt;&lt;/code&gt;。来看一个简单的实例：简单的监控一个方法的耗时。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;首先定义事件类型，通常的做法是扩展EventObject，随着事件的发生，相应的状态通常都封装在此类中：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;class&amp;nbsp;MethodMonitorEvent&amp;nbsp;extends&amp;nbsp;EventObject&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;时间戳，用于记录方法开始执行的时间 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;long&amp;nbsp;timestamp;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;MethodMonitorEvent(Object&amp;nbsp;source)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(source); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;事件发布之后，相应的监听器即可对该类型的事件进行处理，我们可以在方法开始执行之前发布一个begin事件，在方法执行结束之后发布一个end事件，相应地，事件监听器需要提供方法对这两种情况下接收到的事件进行处理：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;1、定义事件监听接口 public&amp;nbsp;interface&amp;nbsp;MethodMonitorEventListener&amp;nbsp;extends&amp;nbsp;EventListener&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;处理方法执行之前发布的事件 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;onMethodBegin(MethodMonitorEvent&amp;nbsp;event); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;处理方法结束时发布的事件 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;onMethodEnd(MethodMonitorEvent&amp;nbsp;event); } //&amp;nbsp;2、事件监听接口的实现：如何处理 public&amp;nbsp;class&amp;nbsp;AbstractMethodMonitorEventListener&amp;nbsp;implements&amp;nbsp;MethodMonitorEventListener&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;onMethodBegin(MethodMonitorEvent&amp;nbsp;event)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;记录方法开始执行时的时间 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;event.timestamp&amp;nbsp;=&amp;nbsp;System.currentTimeMillis(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;onMethodEnd(MethodMonitorEvent&amp;nbsp;event)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;计算方法耗时 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long&amp;nbsp;duration&amp;nbsp;=&amp;nbsp;System.currentTimeMillis()&amp;nbsp;-&amp;nbsp;event.timestamp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;耗时：&amp;quot;&amp;nbsp;+&amp;nbsp;duration); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;事件监听器接口针对不同的事件发布实际提供相应的处理方法定义，最重要的是，其方法只接收MethodMonitorEvent参数，说明这个监听器类只负责监听器对应的事件并进行处理。有了事件和监听器，剩下的就是发布事件，然后让相应的监听器监听并处理。通常情况，我们会有一个事件发布者，它本身作为事件源，在合适的时机，将相应的事件发布给对应的事件监听器：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;class&amp;nbsp;MethodMonitorEventPublisher&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;List&amp;lt;MethodMonitorEventListener&amp;gt;&amp;nbsp;listeners&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ArrayList&amp;lt;MethodMonitorEventListener&amp;gt;();  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;methodMonitor()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MethodMonitorEvent&amp;nbsp;eventObject&amp;nbsp;=&amp;nbsp;new&amp;nbsp;MethodMonitorEvent(this); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;publishEvent(&amp;quot;begin&amp;quot;,eventObject); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;模拟方法执行：休眠5秒钟 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TimeUnit.SECONDS.sleep(5); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;publishEvent(&amp;quot;end&amp;quot;,eventObject);  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;void&amp;nbsp;publishEvent(String&amp;nbsp;status,MethodMonitorEvent&amp;nbsp;event)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;避免在事件处理期间，监听器被移除，这里为了安全做一个复制操作 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;MethodMonitorEventListener&amp;gt;&amp;nbsp;copyListeners&amp;nbsp;=&amp;nbsp;&amp;nbsp;new&amp;nbsp;ArrayList&amp;lt;MethodMonitorEventListener&amp;gt;(listeners); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(MethodMonitorEventListener&amp;nbsp;listener&amp;nbsp;:&amp;nbsp;copyListeners)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;quot;begin&amp;quot;.equals(status))&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listener.onMethodBegin(event); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listener.onMethodEnd(event); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MethodMonitorEventPublisher&amp;nbsp;publisher&amp;nbsp;=&amp;nbsp;new&amp;nbsp;MethodMonitorEventPublisher(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;publisher.addEventListener(new&amp;nbsp;AbstractMethodMonitorEventListener()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;publisher.methodMonitor(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;省略实现 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;addEventListener(MethodMonitorEventListener&amp;nbsp;listener)&amp;nbsp;{} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;removeEventListener(MethodMonitorEventListener&amp;nbsp;listener)&amp;nbsp;{} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;removeAllListeners()&amp;nbsp;{}&lt;/pre&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;对于事件发布者（事件源）通常需要关注两点：&lt;/p&gt;&lt;ol style=&quot;padding:0px 0px 0px 40px;color:rgb(80,97,109);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;white-space:normal;&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(74,74,74);font-size:14px;margin-top:0px;line-height:22px;&quot;&gt;在合适的时机发布事件。此例中的methodMonitor()方法是事件发布的源头，其在方法执行之前和结束之后两个时间点发布MethodMonitorEvent事件，每个时间点发布的事件都会传给相应的监听器进行处理。在具体实现时需要注意的是，事件发布是顺序执行，为了不影响处理性能，事件监听器的处理逻辑应尽量简单。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color:rgb(74,74,74);font-size:14px;margin-top:0px;line-height:22px;&quot;&gt;事件监听器的管理。publisher类中提供了事件监听器的注册与移除方法，这样客户端可以根据实际情况决定是否需要注册新的监听器或者移除某个监听器。如果这里没有提供remove方法，那么注册的监听器示例将一直被MethodMonitorEventPublisher引用，即使已经废弃不用了，也依然在发布者的监听器列表中，这会导致隐性的内存泄漏。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:18px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4 style=&quot;margin:0px;padding:0px;font-weight:normal;color:rgb(21,153,87);line-height:1.35;font-size:18px;white-space:normal;font-family:Menlo, Monaco, &amp;#39;Source Code Pro&amp;#39;, Consolas, Inconsolata, &amp;#39;Ubuntu Mono&amp;#39;, &amp;#39;DejaVu Sans Mono&amp;#39;, &amp;#39;Courier New&amp;#39;, &amp;#39;Droid Sans Mono&amp;#39;, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;微软雅黑&amp;#39;, monospace;&quot;&gt;Spring容器内的事件监听机制&lt;/h4&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;Spring的ApplicationContext容器内部中的所有事件类型均继承自 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.springframework.context.AppliationEvent&lt;/span&gt;&lt;/code&gt;，容器中的所有监听器都实现 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.springframework.context.ApplicationListener&lt;/span&gt;&lt;/code&gt;接口，并且以bean的形式注册在容器中。一旦在容器内发布ApplicationEvent及其子类型的事件，注册到容器的ApplicationListener就会对这些事件进行处理。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;你应该已经猜到是怎么回事了。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;ApplicationEvent继承自EventObject，Spring提供了一些默认的实现，比如： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;ContextClosedEvent&lt;/span&gt;&lt;/code&gt;表示容器在即将关闭时发布的事件类型， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;ContextRefreshedEvent&lt;/span&gt;&lt;/code&gt;表示容器在初始化或者刷新的时候发布的事件类型......&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;容器内部使用ApplicationListener作为事件监听器接口定义，它继承自EventListener。ApplicationContext容器在启动时，会自动识别并加载EventListener类型的bean，一旦容器内有事件发布，将通知这些注册到容器的EventListener。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;ApplicationContext接口继承了ApplicationEventPublisher接口，该接口提供了 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;publishEvent(ApplicationEventevent)&lt;/span&gt;&lt;/code&gt;方法定义，不难看出，ApplicationContext容器担当的就是事件发布者的角色。如果有兴趣可以查看 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;AbstractApplicationContext&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding:0px 2px;font-size:14px;&quot;&gt;.publishEvent(ApplicationEventevent)&lt;/span&gt;&lt;/code&gt;方法的源码：ApplicationContext将事件的发布以及监听器的管理工作委托给 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin:0px;padding:0px;background:rgb(243,241,241);color:rgb(88,88,88);line-height:18px;font-family:consolas, menlo, courier, monospace, &amp;#39;Microsoft Yahei&amp;#39;;border:0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top:0px;padding:0px 2px;font-size:14px;&quot;&gt;ApplicationEventMulticaster&lt;/span&gt;&lt;/code&gt;接口的实现类。在容器启动时，会检查容器内是否存在名为applicationEventMulticaster的ApplicationEventMulticaster对象实例。如果有就使用其提供的实现，没有就默认初始化一个SimpleApplicationEventMulticaster作为实现。&lt;/p&gt;&lt;p style=&quot;margin-top:15px;margin-bottom:15px;padding:0px;white-space:pre-line;line-height:30px;color:rgb(74,74,74);font-family:Avenir, &amp;#39;-apple-system-font&amp;#39;, &amp;#39;微软雅黑&amp;#39;, sans-serif;&quot;&gt;最后，如果我们业务需要在容器内部发布事件，只需要为其注入ApplicationEventPublisher依赖即可：实现ApplicationEventPublisherAware接口或者ApplicationContextAware接口(Aware接口相关内容请回顾上文)。&lt;/p&gt;&lt;h2 style=&quot;white-space: normal; margin: 0px; padding: 0px; font-weight: normal; color: rgb(21, 153, 87); line-height: 1.35; font-size: 24px; font-family: Menlo, Monaco, &amp;quot;Source Code Pro&amp;quot;, Consolas, Inconsolata, &amp;quot;Ubuntu Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, 微软雅黑, monospace;&quot;&gt;五、出神入化：揭秘自动配置原理&lt;/h2&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;典型的Spring Boot应用的启动类一般均位于 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;java&lt;/span&gt;&lt;/code&gt;根路径下，比如 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;MoonApplication&lt;/span&gt;&lt;/code&gt;类：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@SpringBootApplication public&amp;nbsp;class&amp;nbsp;MoonApplication&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SpringApplication.run(MoonApplication.class,&amp;nbsp;args); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;其中 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;/code&gt;开启组件扫描和自动配置，而 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;run&lt;/span&gt;&lt;/code&gt;则负责启动引导应用程序。 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;/code&gt;是一个复合 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;Annotation&lt;/span&gt;&lt;/code&gt;，它将三个有用的注解组合在一起：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Inherited @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan(excludeFilters&amp;nbsp;=&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Filter(type&amp;nbsp;=&amp;nbsp;FilterType.CUSTOM,&amp;nbsp;classes&amp;nbsp;=&amp;nbsp;TypeExcludeFilter.class), &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Filter(type&amp;nbsp;=&amp;nbsp;FilterType.CUSTOM,&amp;nbsp;classes&amp;nbsp;=&amp;nbsp;AutoConfigurationExcludeFilter.class)&amp;nbsp;}) public&amp;nbsp;@interface&amp;nbsp;SpringBootApplication&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@SpringBootConfiguration&lt;/span&gt;&lt;/code&gt;就是 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@Configuration&lt;/span&gt;&lt;/code&gt;，它是Spring框架的注解，标明该类是一个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;JavaConfig&lt;/span&gt;&lt;/code&gt;配置类。而 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@ComponentScan&lt;/span&gt;&lt;/code&gt;启用组件扫描，前文已经详细讲解过，这里着重关注 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;&lt;/code&gt;。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;&lt;/code&gt;注解表示开启Spring Boot自动配置功能，Spring Boot会根据应用的依赖、自定义的bean、classpath下有没有某个类 等等因素来猜测你需要的bean，然后注册到IOC容器中。那 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;&lt;/code&gt;是如何推算出你的需求？首先看下它的定义：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Inherited @AutoConfigurationPackage @Import(EnableAutoConfigurationImportSelector.class) public&amp;nbsp;@interface&amp;nbsp;EnableAutoConfiguration&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;你的关注点应该在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@Import&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;EnableAutoConfigurationImportSelector&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;)&lt;/span&gt;&lt;/code&gt;上了，前文说过， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@Import&lt;/span&gt;&lt;/code&gt;注解用于导入类，并将这个类作为一个bean的定义注册到容器中，这里它将把 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;EnableAutoConfigurationImportSelector&lt;/span&gt;&lt;/code&gt;作为bean注入到容器中，而这个类会将所有符合条件的@Configuration配置都加载到容器中，看看它的代码：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;String[]&amp;nbsp;selectImports(AnnotationMetadata&amp;nbsp;annotationMetadata)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;省略了大部分代码，保留一句核心代码 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;注意：SpringBoot最近版本中，这句代码被封装在一个单独的方法中 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;SpringFactoriesLoader相关知识请参考前文 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;String&amp;gt;&amp;nbsp;factories&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ArrayList&amp;lt;String&amp;gt;(new&amp;nbsp;LinkedHashSet&amp;lt;String&amp;gt;(&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,&amp;nbsp;this.beanClassLoader))); }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;这个类会扫描所有的jar包，将所有符合条件的@Configuration配置类注入的容器中，何为符合条件，看看 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;META&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;factories&lt;/span&gt;&lt;/code&gt;的文件内容：&lt;/p&gt;&lt;pre class=&quot;brush:plain;toolbar:false&quot;&gt;//&amp;nbsp;来自&amp;nbsp;org.springframework.boot.autoconfigure下的META-INF/spring.factories //&amp;nbsp;配置的key&amp;nbsp;=&amp;nbsp;EnableAutoConfiguration，与代码中一致 org.springframework.boot.autoconfigure.EnableAutoConfiguration= org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration .....&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;以 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;DataSourceAutoConfiguration&lt;/span&gt;&lt;/code&gt;为例，看看Spring Boot是如何自动配置的：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Configuration @ConditionalOnClass({&amp;nbsp;DataSource.class,&amp;nbsp;EmbeddedDatabaseType.class&amp;nbsp;}) @EnableConfigurationProperties(DataSourceProperties.class) @Import({&amp;nbsp;Registrar.class,&amp;nbsp;DataSourcePoolMetadataProvidersConfiguration.class&amp;nbsp;}) public&amp;nbsp;class&amp;nbsp;DataSourceAutoConfiguration&amp;nbsp;{ }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;分别说一说：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;@ConditionalOnClass&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;DataSource&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;EmbeddedDatabaseType&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/code&gt;：当Classpath中存在DataSource或者EmbeddedDatabaseType类时才启用这个配置，否则这个配置将被忽略。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;@EnableConfigurationProperties&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;DataSourceProperties&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;)&lt;/span&gt;&lt;/code&gt;：将DataSource的默认配置类注入到IOC容器中，DataSourceproperties定义为：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;提供对datasource配置信息的支持，所有的配置前缀为：spring.datasource @ConfigurationProperties(prefix&amp;nbsp;=&amp;nbsp;&amp;quot;spring.datasource&amp;quot;) public&amp;nbsp;class&amp;nbsp;DataSourceProperties&amp;nbsp;&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;ClassLoader&amp;nbsp;classLoader; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;Environment&amp;nbsp;environment; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;name&amp;nbsp;=&amp;nbsp;&amp;quot;testdb&amp;quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;@Import&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;Registrar&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;DataSourcePoolMetadataProvidersConfiguration&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/code&gt;：导入其他额外的配置，就以&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;DataSourcePoolMetadataProvidersConfiguration&lt;/span&gt;&lt;/code&gt;为例吧。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;@Configuration public&amp;nbsp;class&amp;nbsp;DataSourcePoolMetadataProvidersConfiguration&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Configuration &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ConditionalOnClass(org.apache.tomcat.jdbc.pool.DataSource.class) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;class&amp;nbsp;TomcatDataSourcePoolMetadataProviderConfiguration&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Bean &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;DataSourcePoolMetadataProvider&amp;nbsp;tomcatPoolDataSourceMetadataProvider()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;..... &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif; white-space: pre-line;&quot;&gt;DataSourcePoolMetadataProvidersConfiguration是数据库连接池提供者的一个配置类，即Classpath中存在 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;white-space: pre-line; margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;tomcat&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;jdbc&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;DataSource&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif; white-space: pre-line;&quot;&gt;，则使用tomcat-jdbc连接池，如果Classpath中存在 &lt;/span&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;white-space: pre-line; margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;HikariDataSource&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;class&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif; white-space: pre-line;&quot;&gt;则使用Hikari连接池。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;这里仅描述了DataSourceAutoConfiguration的冰山一角，但足以说明Spring Boot如何利用条件话配置来实现自动配置的。回顾一下， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;&lt;/code&gt;中导入了EnableAutoConfigurationImportSelector类，而这个类的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;selectImports&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;通过SpringFactoriesLoader得到了大量的配置类，而每一个配置类则根据条件化配置来做出决策，以实现自动配置。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;整个流程很清晰，但漏了一个大问题： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;EnableAutoConfigurationImportSelector&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;selectImports&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;是何时执行的？其实这个方法会在容器启动过程中执行： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;AbstractApplicationContext&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;，更多的细节在下一小节中说明。&lt;/p&gt;&lt;h2 style=&quot;white-space: normal; margin: 0px; padding: 0px; font-weight: normal; color: rgb(21, 153, 87); line-height: 1.35; font-size: 24px; font-family: Menlo, Monaco, &amp;quot;Source Code Pro&amp;quot;, Consolas, Inconsolata, &amp;quot;Ubuntu Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, 微软雅黑, monospace;&quot;&gt;六、启动引导：Spring Boot应用启动的秘密&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style=&quot;white-space: normal; margin: 0px; padding: 0px; font-weight: normal; color: rgb(21, 153, 87); line-height: 1.35; font-size: 20px; font-family: Menlo, Monaco, &amp;quot;Source Code Pro&amp;quot;, Consolas, Inconsolata, &amp;quot;Ubuntu Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, 微软雅黑, monospace;&quot;&gt;6.1 SpringApplication初始化&lt;/h3&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;SpringBoot整个启动流程分为两个步骤：初始化一个SpringApplication对象、执行该对象的run方法。看下SpringApplication的初始化流程，SpringApplication的构造方法中调用initialize(Object[] sources)方法，其代码如下：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;private&amp;nbsp;void&amp;nbsp;initialize(Object[]&amp;nbsp;sources)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(sources&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;sources.length&amp;nbsp;&amp;gt;&amp;nbsp;0)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.sources.addAll(Arrays.asList(sources)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;判断是否是Web项目 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.webEnvironment&amp;nbsp;=&amp;nbsp;deduceWebEnvironment(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setInitializers((Collection)&amp;nbsp;getSpringFactoriesInstances(ApplicationContextInitializer.class)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setListeners((Collection)&amp;nbsp;getSpringFactoriesInstances(ApplicationListener.class)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;找到入口类 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.mainApplicationClass&amp;nbsp;=&amp;nbsp;deduceMainApplicationClass(); }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;初始化流程中最重要的就是通过SpringFactoriesLoader找到 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;factories&lt;/span&gt;&lt;/code&gt;文件中配置的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ApplicationContextInitializer&lt;/span&gt;&lt;/code&gt;和 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ApplicationListener&lt;/span&gt;&lt;/code&gt;两个接口的实现类名称，以便后期构造相应的实例。 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ApplicationContextInitializer&lt;/span&gt;&lt;/code&gt;的主要目的是在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ConfigurableApplicationContext&lt;/span&gt;&lt;/code&gt;做refresh之前，对ConfigurableApplicationContext实例做进一步的设置或处理。ConfigurableApplicationContext继承自ApplicationContext，其主要提供了对ApplicationContext进行设置的能力。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;实现一个ApplicationContextInitializer非常简单，因为它只有一个方法，但大多数情况下我们没有必要自定义一个ApplicationContextInitializer，即便是Spring Boot框架，它默认也只是注册了两个实现，毕竟Spring的容器已经非常成熟和稳定，你没有必要来改变它。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;而 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ApplicationListener&lt;/span&gt;&lt;/code&gt;的目的就没什么好说的了，它是Spring框架对Java事件监听机制的一种框架实现，具体内容在前文Spring事件监听机制这个小节有详细讲解。这里主要说说，如果你想为Spring Boot应用添加监听器，该如何实现？&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;Spring Boot提供两种方式来添加自定义监听器：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;通过&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;addListeners&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;ApplicationListener&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&amp;lt;?&amp;gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;listeners&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;)&lt;/span&gt;&lt;/code&gt;或者&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;setListeners&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;ApplicationListener&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;&amp;lt;?&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;listeners&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;)&lt;/span&gt;&lt;/code&gt;两个方法来添加一个或者多个自定义监听器&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;既然SpringApplication的初始化流程中已经从&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;factories&lt;/span&gt;&lt;/code&gt;中获取到&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;ApplicationListener&lt;/span&gt;&lt;/code&gt;的实现类，那么我们直接在自己的jar包的&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;META&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;factories&lt;/span&gt;&lt;/code&gt;文件中新增配置即可：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;brush:plain;toolbar:false&quot;&gt;org.springframework.context.ApplicationListener= cn.moondev.listeners.xxxxListener&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;关于SpringApplication的初始化，我们就说这么多。&lt;/p&gt;&lt;h3 style=&quot;white-space: normal; margin: 0px; padding: 0px; font-weight: normal; color: rgb(21, 153, 87); line-height: 1.35; font-size: 20px; font-family: Menlo, Monaco, &amp;quot;Source Code Pro&amp;quot;, Consolas, Inconsolata, &amp;quot;Ubuntu Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, 微软雅黑, monospace;&quot;&gt;6.2 Spring Boot启动流程&lt;/h3&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;Spring Boot应用的整个启动流程都封装在SpringApplication.run方法中，其整个流程真的是太长太长了，但本质上就是在Spring容器启动的基础上做了大量的扩展，按照这个思路来看看源码：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;ConfigurableApplicationContext&amp;nbsp;run(String...&amp;nbsp;args)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;StopWatch&amp;nbsp;stopWatch&amp;nbsp;=&amp;nbsp;new&amp;nbsp;StopWatch(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stopWatch.start(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ConfigurableApplicationContext&amp;nbsp;context&amp;nbsp;=&amp;nbsp;null; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FailureAnalyzers&amp;nbsp;analyzers&amp;nbsp;=&amp;nbsp;null; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;configureHeadlessProperty(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;① &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SpringApplicationRunListeners&amp;nbsp;listeners&amp;nbsp;=&amp;nbsp;getRunListeners(args); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listeners.starting(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;② &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ApplicationArguments&amp;nbsp;applicationArguments&amp;nbsp;=&amp;nbsp;new&amp;nbsp;DefaultApplicationArguments(args); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ConfigurableEnvironment&amp;nbsp;environment&amp;nbsp;=&amp;nbsp;prepareEnvironment(listeners,applicationArguments); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;③ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Banner&amp;nbsp;printedBanner&amp;nbsp;=&amp;nbsp;printBanner(environment); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;④ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;context&amp;nbsp;=&amp;nbsp;createApplicationContext(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;⑤ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;analyzers&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FailureAnalyzers(context); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;⑥ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;prepareContext(context,&amp;nbsp;environment,&amp;nbsp;listeners,&amp;nbsp;applicationArguments,printedBanner); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;⑦&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;refreshContext(context); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;⑧ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;afterRefresh(context,&amp;nbsp;applicationArguments); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;⑨ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listeners.finished(context,&amp;nbsp;null); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stopWatch.stop(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;context; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(Throwable&amp;nbsp;ex)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;handleRunFailure(context,&amp;nbsp;listeners,&amp;nbsp;analyzers,&amp;nbsp;ex); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;IllegalStateException(ex); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;① 通过SpringFactoriesLoader查找并加载所有的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;SpringApplicationRunListeners&lt;/span&gt;&lt;/code&gt;，通过调用starting()方法通知所有的SpringApplicationRunListeners：应用开始启动了。SpringApplicationRunListeners其本质上就是一个事件发布者，它在SpringBoot应用启动的不同时间点发布不同应用事件类型(ApplicationEvent)，如果有哪些事件监听者(ApplicationListener)对这些事件感兴趣，则可以接收并且处理。还记得初始化流程中，SpringApplication加载了一系列ApplicationListener吗？这个启动流程中没有发现有发布事件的代码，其实都已经在SpringApplicationRunListeners这儿实现了。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;简单的分析一下其实现流程，首先看下SpringApplicationRunListener的源码：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;interface&amp;nbsp;SpringApplicationRunListener&amp;nbsp;{  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;运行run方法时立即调用此方法，可以用户非常早期的初始化工作 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void&amp;nbsp;starting(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Environment准备好后，并且ApplicationContext创建之前调用 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void&amp;nbsp;environmentPrepared(ConfigurableEnvironment&amp;nbsp;environment);  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;ApplicationContext创建好后立即调用 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void&amp;nbsp;contextPrepared(ConfigurableApplicationContext&amp;nbsp;context);  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;ApplicationContext加载完成，在refresh之前调用 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void&amp;nbsp;contextLoaded(ConfigurableApplicationContext&amp;nbsp;context);  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;当run方法结束之前调用 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void&amp;nbsp;finished(ConfigurableApplicationContext&amp;nbsp;context,&amp;nbsp;Throwable&amp;nbsp;exception);  }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;SpringApplicationRunListener只有一个实现类： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;EventPublishingRunListener&lt;/span&gt;&lt;/code&gt;。①处的代码只会获取到一个EventPublishingRunListener的实例，我们来看看starting()方法的内容：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;void&amp;nbsp;starting()&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;发布一个ApplicationStartedEvent &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.initialMulticaster.multicastEvent(new&amp;nbsp;ApplicationStartedEvent(this.application,&amp;nbsp;this.args)); }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;顺着这个逻辑，你可以在②处的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;prepareEnvironment&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法的源码中找到 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;listeners&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;environmentPrepared&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;);&lt;/span&gt;&lt;/code&gt;即SpringApplicationRunListener接口的第二个方法，那不出你所料， &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;environmentPrepared&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;又发布了另外一个事件 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ApplicationEnvironmentPreparedEvent&lt;/span&gt;&lt;/code&gt;。接下来会发生什么，就不用我多说了吧。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;② 创建并配置当前应用将要使用的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;Environment&lt;/span&gt;&lt;/code&gt;，Environment用于描述应用程序当前的运行环境，其抽象了两个方面的内容：配置文件(profile)和属性(properties)，开发经验丰富的同学对这两个东西一定不会陌生：不同的环境(eg：生产环境、预发布环境)可以使用不同的配置文件，而属性则可以从配置文件、环境变量、命令行参数等来源获取。因此，当Environment准备好后，在整个应用的任何时候，都可以从Environment中获取资源。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;总结起来，②处的两句代码，主要完成以下几件事：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;判断Environment是否存在，不存在就创建（如果是web项目就创建&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;StandardServletEnvironment&lt;/span&gt;&lt;/code&gt;，否则创建&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;StandardEnvironment&lt;/span&gt;&lt;/code&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;配置Environment：配置profile以及properties&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;调用SpringApplicationRunListener的&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;environmentPrepared&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法，通知事件监听者：应用的Environment已经准备好&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;③、SpringBoot应用在启动时会输出这样的东西：&lt;/p&gt;&lt;pre class=&quot;brush:plain;toolbar:false&quot;&gt;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&amp;nbsp;____&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__&amp;nbsp;_&amp;nbsp;_ &amp;nbsp;/\\&amp;nbsp;/&amp;nbsp;___&amp;#39;_&amp;nbsp;__&amp;nbsp;_&amp;nbsp;_(_)_&amp;nbsp;__&amp;nbsp;&amp;nbsp;__&amp;nbsp;_&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (&amp;nbsp;(&amp;nbsp;)\\___&amp;nbsp;|&amp;nbsp;&amp;#39;_&amp;nbsp;|&amp;nbsp;&amp;#39;_|&amp;nbsp;|&amp;nbsp;&amp;#39;_&amp;nbsp;/&amp;nbsp;_`&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;\\/&amp;nbsp;&amp;nbsp;___)|&amp;nbsp;|_)|&amp;nbsp;|&amp;nbsp;|&amp;nbsp;|&amp;nbsp;|&amp;nbsp;||&amp;nbsp;(_|&amp;nbsp;|&amp;nbsp;&amp;nbsp;)&amp;nbsp;)&amp;nbsp;)&amp;nbsp;) &amp;nbsp;&amp;nbsp;&amp;#39;&amp;nbsp;&amp;nbsp;|____|&amp;nbsp;.__|_|&amp;nbsp;|_|_|&amp;nbsp;|_\\__,&amp;nbsp;|&amp;nbsp;/&amp;nbsp;/&amp;nbsp;/&amp;nbsp;/ &amp;nbsp;=========|_|==============|___/=/_/_/_/ &amp;nbsp;::&amp;nbsp;Spring&amp;nbsp;Boot&amp;nbsp;::&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(v1.5.6.RELEASE)&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;如果想把这个东西改成自己的涂鸦，你可以研究以下Banner的实现，这个任务就留给你们吧。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;④、根据是否是web项目，来创建不同的ApplicationContext容器。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;⑤、创建一系列 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;FailureAnalyzer&lt;/span&gt;&lt;/code&gt;，创建流程依然是通过SpringFactoriesLoader获取到所有实现FailureAnalyzer接口的class，然后在创建对应的实例。FailureAnalyzer用于分析故障并提供相关诊断信息。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;⑥、初始化ApplicationContext，主要完成以下工作：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;将准备好的Environment设置给ApplicationContext&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;遍历调用所有的ApplicationContextInitializer的&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法来对已经创建好的ApplicationContext进行进一步的处理&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;调用SpringApplicationRunListener的&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;contextPrepared&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法，通知所有的监听者：ApplicationContext已经准备完毕&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;将所有的bean加载到容器中&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(74, 74, 74); margin-top: 0px; line-height: 22px; font-size: 14px;&quot;&gt;&lt;span style=&quot;margin-top: 0px; line-height: 22px;&quot;&gt;调用SpringApplicationRunListener的&amp;nbsp;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); font-size: 16px; line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;contextLoaded&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; line-height: 22px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法，通知所有的监听者：ApplicationContext已经装载完毕&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;⑦、调用ApplicationContext的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法，完成IoC容器可用的最后一道工序。从名字上理解为刷新容器，那何为刷新？就是插手容器的启动，联系一下第一小节的内容。那如何刷新呢？且看下面代码：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;//&amp;nbsp;摘自refresh()方法中一句代码 invokeBeanFactoryPostProcessors(beanFactory);&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;看看这个方法的实现：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;protected&amp;nbsp;void&amp;nbsp;invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory&amp;nbsp;beanFactory)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory,&amp;nbsp;getBeanFactoryPostProcessors()); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...... }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;获取到所有的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;BeanFactoryPostProcessor&lt;/span&gt;&lt;/code&gt;来对容器做一些额外的操作。BeanFactoryPostProcessor允许我们在容器实例化相应对象之前，对注册到容器的BeanDefinition所保存的信息做一些额外的操作。这里的getBeanFactoryPostProcessors()方法可以获取到3个Processor：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;ConfigurationWarningsApplicationContextInitializer$ConfigurationWarningsPostProcessor SharedMetadataReaderFactoryContextInitializer$CachingMetadataReaderFactoryPostProcessor ConfigFileApplicationListener$PropertySourceOrderingPostProcessor&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;不是有那么多BeanFactoryPostProcessor的实现类，为什么这儿只有这3个？因为在初始化流程获取到的各种ApplicationContextInitializer和ApplicationListener中，只有上文3个做了类似于如下操作：&lt;/p&gt;&lt;pre class=&quot;brush:java;toolbar:false&quot;&gt;public&amp;nbsp;void&amp;nbsp;initialize(ConfigurableApplicationContext&amp;nbsp;context)&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;context.addBeanFactoryPostProcessor(new&amp;nbsp;ConfigurationWarningsPostProcessor(getChecks())); }&lt;/pre&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;然后你就可以进入到 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;PostProcessorRegistrationDelegate&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;invokeBeanFactoryPostProcessors&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;方法了，这个方法除了会遍历上面的3个BeanFactoryPostProcessor处理外，还会获取类型为 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;BeanDefinitionRegistryPostProcessor&lt;/span&gt;&lt;/code&gt;的bean： &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;internalConfigurationAnnotationProcessor&lt;/span&gt;&lt;/code&gt;，对应的Class为 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ConfigurationClassPostProcessor&lt;/span&gt;&lt;/code&gt;。 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;ConfigurationClassPostProcessor&lt;/span&gt;&lt;/code&gt;用于解析处理各种注解，包括：@Configuration、@ComponentScan、@Import、@PropertySource、@ImportResource、@Bean。当处理 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;lit&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;@import&lt;/span&gt;&lt;/code&gt;注解的时候，就会调用&amp;lt;自动配置&amp;gt;这一小节中的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot; style=&quot;margin: 0px; padding: 0px; background: rgb(243, 241, 241); color: rgb(88, 88, 88); line-height: 18px; font-family: consolas, menlo, courier, monospace, &amp;quot;Microsoft Yahei&amp;quot;; border: 0px;&quot;&gt;&lt;span class=&quot;typ&quot; style=&quot;margin-top: 0px; padding: 0px 2px; font-size: 14px;&quot;&gt;EnableAutoConfigurationImportSelector&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;selectImports&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;padding: 0px 2px; font-size: 14px;&quot;&gt;()&lt;/span&gt;&lt;/code&gt;来完成自动配置功能。其他的这里不再多讲，如果你有兴趣，可以查阅参考资料6。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;⑧、查找当前context中是否注册有CommandLineRunner和ApplicationRunner，如果有则遍历执行它们。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;⑨、执行所有SpringApplicationRunListener的finished()方法。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;这就是Spring Boot的整个启动流程，其核心就是在Spring容器初始化并启动的基础上加入各种扩展点，这些扩展点包括：ApplicationContextInitializer、ApplicationListener以及各种BeanFactoryPostProcessor等等。你对整个流程的细节不必太过关注，甚至没弄明白也没有关系，你只要理解这些扩展点是在何时如何工作的，能让它们为你所用即可。&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;整个启动流程确实非常复杂，可以查询参考资料中的部分章节和内容，对照着源码，多看看，我想最终你都能弄清楚的。言而总之，Spring才是核心，理解清楚Spring容器的启动流程，那Spring Boot启动流程就不在话下了。&lt;/p&gt;&lt;h2 style=&quot;white-space: normal; margin: 0px; padding: 0px; font-weight: normal; color: rgb(21, 153, 87); line-height: 1.35; font-size: 24px; font-family: Menlo, Monaco, &amp;quot;Source Code Pro&amp;quot;, Consolas, Inconsolata, &amp;quot;Ubuntu Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, 微软雅黑, monospace;&quot;&gt;参考资料&lt;/h2&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;[1] &lt;a href=&quot;http://luecsc.blog.51cto.com/user_index.php?action=addblog&amp;job=modify&amp;tid=1964056&quot; title=&quot;王福强 著；SpringBoot揭秘：快速构建微服务体系; 机械工业出版社, 2016&quot; target=&quot;_blank&quot;&gt;王福强 著；SpringBoot揭秘：快速构建微服务体系; 机械工业出版社, 2016&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;[2]&amp;nbsp;&lt;a href=&quot;http://union-click.jd.com/jdc?d=yzfgeF&quot; title=&quot;王福强 著；Spring揭秘; 人民邮件出版社, 2009&quot; target=&quot;_blank&quot;&gt;王福强 著；Spring揭秘; 人民邮件出版社, 2009&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;[3]&amp;nbsp;&lt;a href=&quot;http://union-click.jd.com/jdc?d=AQ6oHO&quot; title=&quot;Craig Walls 著；丁雪丰 译；Spring Boot实战；中国工信出版集团 人民邮电出版社，2016&quot; target=&quot;_blank&quot;&gt;Craig Walls 著；丁雪丰 译；Spring Boot实战；中国工信出版集团 人民邮电出版社，2016&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;[4]&amp;nbsp;&lt;a href=&quot;https://www.ibm.com/developerworks/cn/java/j-lo-classloader/&quot; title=&quot;深入探讨 Java 类加载器&quot; target=&quot;_blank&quot;&gt;深入探讨 Java 类加载器&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;[5]&amp;nbsp;&lt;a href=&quot;http://blog.csdn.net/liaokailin/article/details/49559951&quot; title=&quot;spring boot实战：自动配置原理分析&quot; target=&quot;_blank&quot;&gt;spring boot实战：自动配置原理分析&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 15px; margin-bottom: 15px; padding: 0px; white-space: pre-line; line-height: 30px; color: rgb(74, 74, 74); font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot;&gt;[6]&amp;nbsp;&lt;a href=&quot;http://blog.csdn.net/liaokailin/article/details/49107209&quot; title=&quot;spring boot实战：Spring boot Bean加载源码分析&quot; target=&quot;_blank&quot;&gt;spring boot实战：Spring boot Bean加载源码分析&lt;/a&gt;&lt;/p&gt;&lt;/div&gt; 					&lt;/div&gt;', 'http://blog.51cto.com/luecsc/1964056', '1', '51CTO', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('396', '018 final 关键字的用途', '', 'https://www.cnblogs.com/nnngu/p/8467440.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('397', 'java异常处理 throw RuntimeException时不需要同时方法中声明抛出throws 异常等待调用者catch进行捕获 子父类异常问题', '', 'https://www.cnblogs.com/qingyundian/p/8467348.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('398', 'spring框架学习笔记7：事务管理及案例', '', 'https://www.cnblogs.com/xuyiqing/p/8465095.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('399', 'IntelliJ IDEA 快捷键（window版）', '', 'https://www.cnblogs.com/zt19994/p/8463062.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('400', 'pdf增加图片的方法', '', 'https://www.cnblogs.com/zcy1996/p/8467246.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('401', '017 Java中的静态代理、JDK动态代理、cglib动态代理', '', 'https://www.cnblogs.com/nnngu/p/8466490.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('402', '在Arrays.asList()引发的问题中进一步学习集合与泛型等内容', '', 'https://www.cnblogs.com/young-z/p/8465198.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('403', '基于JDK1.8的ArrayList剖析', '', 'https://www.cnblogs.com/wenbochang/p/8466205.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('404', '[Java 教程 04] Java基础语法', '', 'https://www.cnblogs.com/damienzhong/p/8465710.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('405', 'WebSocket就是这么简单', '', 'https://www.cnblogs.com/Java3y/p/8465381.html', '1', '博客园', '2018-02-24 20:27:41');
INSERT INTO `article` VALUES ('406', 'spring框架学习笔记6：JDBC模板', '&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body&quot;&gt;&lt;p&gt;JDBC模板：Spring中对数据库的操作。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;这一部分对熟悉DBUtils的QueryRunner的开发者来说，非常简单&lt;/p&gt; &lt;p&gt;这是以前我简单写的dbutils的知识：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xuyiqing/p/8397428.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/xuyiqing/p/8397428.html&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;导包：&lt;/p&gt; &lt;p&gt;1.spring中的包&lt;/p&gt; &lt;p&gt;2.c3p0连接池包&lt;/p&gt; &lt;p&gt;3.数据库驱动包&lt;/p&gt; &lt;p&gt;最终导入这些包：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1312707/201802/1312707-20180224112804199-1857552095.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;2.准备数据库测试：&lt;/p&gt; &lt;p&gt;简单的测试：&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #000000&quot;&gt;    @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun1() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{                  &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;准备连接池&lt;/span&gt;         ComboPooledDataSource dataSource = &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; ComboPooledDataSource();         dataSource.setDriverClass(&lt;/span&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;span style=&quot;color: #000000&quot;&gt;);         dataSource.setJdbcUrl(&lt;/span&gt;&quot;jdbc:mysql:///mybase&quot;&lt;span style=&quot;color: #000000&quot;&gt;);         dataSource.setUser(&lt;/span&gt;&quot;root&quot;&lt;span style=&quot;color: #000000&quot;&gt;);         dataSource.setPassword(&lt;/span&gt;&quot;xuyiqing&quot;&lt;span style=&quot;color: #000000&quot;&gt;);         &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;1 创建JDBC模板对象&lt;/span&gt;         JdbcTemplate jt = &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; JdbcTemplate();         jt.setDataSource(dataSource);         &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;2 书写sql,并执行&lt;/span&gt;         String sql = &quot;insert into t_user values(null,&#039;Tom&#039;) &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         jt.update(sql);              }&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;接下来使用Spring框架管理对象：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;创建实体类：&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt;&lt;img id=&quot;code_img_closed_e7928707-58d1-4ced-924f-fd7e250c6346&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;&gt;&lt;img id=&quot;code_img_opened_e7928707-58d1-4ced-924f-fd7e250c6346&quot; class=&quot;code_img_opened&quot; style=&quot;display: none&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;&gt; &lt;div id=&quot;cnblogs_code_open_e7928707-58d1-4ced-924f-fd7e250c6346&quot; class=&quot;cnblogs_code_hide&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;package&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; bean;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; User {     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;private&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Integer id;     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;private&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; String name;     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Integer getId() {         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; id;     }     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; setId(Integer id) {         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;this&lt;/span&gt;.id =&lt;span style=&quot;color: #000000&quot;&gt; id;     }     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; String getName() {         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; name;     }     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; setName(String name) {         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;this&lt;/span&gt;.name =&lt;span style=&quot;color: #000000&quot;&gt; name;     }     @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; String toString() {         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt; &quot;User [id=&quot; + id + &quot;, name=&quot; + name + &quot;]&quot;&lt;span style=&quot;color: #000000&quot;&gt;;     }           }&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;数据库操作功能：&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;package&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; jdbctemplate;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; java.util.List;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; bean.User;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;interface&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; UserDao {      &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;增&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; save(User u);     &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;删&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; delete(Integer id);     &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;改&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; update(User u);     &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;查&lt;/span&gt; &lt;span style=&quot;color: #000000&quot;&gt;    User getById(Integer id);     &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;查&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; getTotalCount();     &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;查&lt;/span&gt;     List&amp;lt;User&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt; getAll(); }&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;package&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; jdbctemplate;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; java.sql.ResultSet; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; java.sql.SQLException; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; java.util.List;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.springframework.jdbc.core.JdbcTemplate; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.springframework.jdbc.core.RowMapper; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.springframework.jdbc.core.support.JdbcDaoSupport;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; bean.User; &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;使用JDBC模板实现增删改查&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;class&lt;/span&gt; UserDaoImpl &lt;span style=&quot;color: #0000ff&quot;&gt;extends&lt;/span&gt; JdbcDaoSupport &lt;span style=&quot;color: #0000ff&quot;&gt;implements&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; UserDao {     @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; save(User u) {         String sql &lt;/span&gt;= &quot;insert into t_user values(null,?) &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;super&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;.getJdbcTemplate().update(sql, u.getName());     }     @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; delete(Integer id) {         String sql &lt;/span&gt;= &quot;delete from t_user where id = ? &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;super&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;.getJdbcTemplate().update(sql,id);     }     @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; update(User u) {         String sql &lt;/span&gt;= &quot;update  t_user set name = ? where id=? &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;super&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;.getJdbcTemplate().update(sql, u.getName(),u.getId());     }     @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; User getById(Integer id) {         String sql &lt;/span&gt;= &quot;select * from t_user where id = ? &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;super&lt;/span&gt;.getJdbcTemplate().queryForObject(sql,&lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt; RowMapper&amp;lt;User&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;(){             @Override             &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; User mapRow(ResultSet rs, &lt;span style=&quot;color: #0000ff&quot;&gt;int&lt;/span&gt; arg1) &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; SQLException {                 User u &lt;/span&gt;= &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; User();                 u.setId(rs.getInt(&lt;/span&gt;&quot;id&quot;&lt;span style=&quot;color: #000000&quot;&gt;));                 u.setName(rs.getString(&lt;/span&gt;&quot;name&quot;&lt;span style=&quot;color: #000000&quot;&gt;));                 &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; u;             }}, id);              }     @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; getTotalCount() {         String sql &lt;/span&gt;= &quot;select count(*) from t_user  &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         Integer count &lt;/span&gt;= &lt;span style=&quot;color: #0000ff&quot;&gt;super&lt;/span&gt;.getJdbcTemplate().queryForObject(sql, Integer.&lt;span style=&quot;color: #0000ff&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;);         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; count;     }      @Override     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt; getAll() {         String sql &lt;/span&gt;= &quot;select * from t_user  &quot;&lt;span style=&quot;color: #000000&quot;&gt;;         List&lt;/span&gt;&amp;lt;User&amp;gt; list = &lt;span style=&quot;color: #0000ff&quot;&gt;super&lt;/span&gt;.getJdbcTemplate().query(sql, &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt; RowMapper&amp;lt;User&amp;gt;&lt;span style=&quot;color: #000000&quot;&gt;(){             @Override             &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; User mapRow(ResultSet rs, &lt;span style=&quot;color: #0000ff&quot;&gt;int&lt;/span&gt; arg1) &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; SQLException {                 User u &lt;/span&gt;= &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; User();                 u.setId(rs.getInt(&lt;/span&gt;&quot;id&quot;&lt;span style=&quot;color: #000000&quot;&gt;));                 u.setName(rs.getString(&lt;/span&gt;&quot;name&quot;&lt;span style=&quot;color: #000000&quot;&gt;));                 &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; u;             }});         &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; list;     }   }&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;现在就完成了数据库操作，接下来配置到Spring来管理对象&lt;/p&gt; &lt;p&gt;注意配置文件：&lt;/p&gt; &lt;p&gt;先写一个键值对配置文件：db.properties&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #000000&quot;&gt;jdbc.jdbcUrl=jdbc:mysql:///mybase jdbc.driverClass=com.mysql.jdbc.Driver jdbc.user=root jdbc.password=xuyiqing&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;xml配置文件：&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&quot;color: #ff00ff&quot;&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;?&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;beans &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;xmlns:xsi&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; xmlns&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; xmlns:context&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; xsi:schemaLocation&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd &quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span style=&quot;color: #008000&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; 指定spring读取db.properties配置 &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;context:property-placeholder &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;classpath:db.properties&quot;&lt;/span&gt;  &lt;span style=&quot;color: #0000ff&quot;&gt;/&amp;gt;&lt;/span&gt;  &lt;span style=&quot;color: #008000&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; 1.将连接池放入spring容器 &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;bean &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;jdbcUrl&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;${jdbc.jdbcUrl}&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;driverClass&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;${jdbc.driverClass}&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;user&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;${jdbc.user}&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;password&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;${jdbc.password}&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;bean&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span style=&quot;color: #008000&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt; 2.将UserDao放入spring容器 &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;bean &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;userDao&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;jdbctemplate.UserDaoImpl&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property &lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000&quot;&gt; ref&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;=&quot;dataSource&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;property&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;bean&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;       &lt;span style=&quot;color: #0000ff&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000&quot;&gt;beans&lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;测试：&lt;/p&gt; &lt;div class=&quot;cnblogs_code&quot;&gt; &lt;pre&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;package&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; jdbctemplate;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; java.beans.PropertyVetoException;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; javax.annotation.Resource;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.junit.Test; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.junit.runner.RunWith; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.springframework.jdbc.core.JdbcTemplate; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.springframework.test.context.ContextConfiguration; &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; com.mchange.v2.c3p0.ComboPooledDataSource;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; bean.User;  &lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000&quot;&gt;演示JDBC模板&lt;/span&gt; @RunWith(SpringJUnit4ClassRunner.&lt;span style=&quot;color: #0000ff&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt;) @ContextConfiguration(&lt;/span&gt;&quot;classpath:applicationContext.xml&quot;&lt;span style=&quot;color: #000000&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Demo {     @Resource(name&lt;/span&gt;=&quot;userDao&quot;&lt;span style=&quot;color: #000000&quot;&gt;)     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;private&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; UserDao ud;          @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun2() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{         User u &lt;/span&gt;= &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; User();         u.setName(&lt;/span&gt;&quot;tom&quot;&lt;span style=&quot;color: #000000&quot;&gt;);         ud.save(u);     }     @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun3() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{         User u &lt;/span&gt;= &lt;span style=&quot;color: #0000ff&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; User();         u.setId(&lt;/span&gt;2&lt;span style=&quot;color: #000000&quot;&gt;);         u.setName(&lt;/span&gt;&quot;jack&quot;&lt;span style=&quot;color: #000000&quot;&gt;);         ud.update(u);              }          @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun4() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{         ud.delete(&lt;/span&gt;2&lt;span style=&quot;color: #000000&quot;&gt;);     }          @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun5() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{         System.out.println(ud.getTotalCount());     }          @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun6() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{         System.out.println(ud.getById(&lt;/span&gt;1&lt;span style=&quot;color: #000000&quot;&gt;));     }          @Test     &lt;/span&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff&quot;&gt;void&lt;/span&gt; fun7() &lt;span style=&quot;color: #0000ff&quot;&gt;throws&lt;/span&gt;&lt;span style=&quot;color: #000000&quot;&gt; Exception{         System.out.println(ud.getAll());     }      }&lt;/span&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;', 'https://www.cnblogs.com/xuyiqing/p/8465069.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('407', 'spring框架学习笔记5：SpringAOP示例', '<div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>1.导包：</p> <p>导入spring中的这两个包</p> <p><img src=\"https://images2018.cnblogs.com/blog/1312707/201802/1312707-20180224100611179-1100271061.png\" alt=\"\"></p> <p> </p> <p>再导入其他包（网上下载）：</p> <p><img src=\"https://images2018.cnblogs.com/blog/1312707/201802/1312707-20180224100659513-819006764.png\" alt=\"\"></p> <p> </p> <p>2.准备目标对象：</p> <div class=\"cnblogs_code\"><img id=\"code_img_closed_5c8b1c8c-0e22-4143-8e89-3bc4ea894d4f\" class=\"code_img_closed\" src=\"https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\"><img id=\"code_img_opened_5c8b1c8c-0e22-4143-8e89-3bc4ea894d4f\" class=\"code_img_opened\" style=\"display: none\" src=\"https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\"> <div id=\"cnblogs_code_open_5c8b1c8c-0e22-4143-8e89-3bc4ea894d4f\" class=\"cnblogs_code_hide\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> service;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> UserServiceImpl <span style=\"color: #0000ff\">implements</span><span style=\"color: #000000\"> UserService {     @Override     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> save() {         System.out.println(</span>\"保存用户!\"<span style=\"color: #000000\">);     }     @Override     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> delete() {         System.out.println(</span>\"删除用户!\"<span style=\"color: #000000\">);     }     @Override     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> update() {         System.out.println(</span>\"更新用户!\"<span style=\"color: #000000\">);     }     @Override     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> find() {         System.out.println(</span>\"查找用户!\"<span style=\"color: #000000\">);     } }</span></pre> </div> <span class=\"cnblogs_code_collapse\">View Code</span></div> <p> </p> <p>3.准备通知：</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> springaop;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.ProceedingJoinPoint;  </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">通知类</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> MyAdvice {          </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">前置通知     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">        |-目标方法运行之前调用     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">后置通知(如果出现异常不会调用) </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">        |-在目标方法运行之后调用     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">环绕通知 </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">        |-在目标方法之前和之后都调用     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">异常拦截通知 </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">        |-如果出现异常,就会调用     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">后置通知(无论是否出现 异常都会调用) </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">        |-在目标方法运行之后调用 </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">----------------------------------------------------------------     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">前置通知</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> before(){         System.out.println(</span>\"这是前置通知!!\"<span style=\"color: #000000\">);     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">后置通知</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> afterReturning(){         System.out.println(</span>\"这是后置通知(如果出现异常不会调用)!!\"<span style=\"color: #000000\">);     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">环绕通知</span>     <span style=\"color: #0000ff\">public</span> Object around(ProceedingJoinPoint pjp) <span style=\"color: #0000ff\">throws</span><span style=\"color: #000000\"> Throwable {         System.out.println(</span>\"这是环绕通知之前的部分!!\"<span style=\"color: #000000\">);         Object proceed </span>= pjp.proceed();<span style=\"color: #008000\">//</span><span style=\"color: #008000\">调用目标方法</span>         System.out.println(\"这是环绕通知之后的部分!!\"<span style=\"color: #000000\">);         </span><span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> proceed;     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">异常通知</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> afterException(){         System.out.println(</span>\"出现异常了!\"<span style=\"color: #000000\">);     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">后置通知</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> after(){         System.out.println(</span>\"这是后置通知(出现异常也会调用)!\"<span style=\"color: #000000\">);     } }</span></pre> </div> <p> </p> <p> </p> <p>4.配置将通知织入目标对象</p> <p>（导入aop约束）</p> <p><img src=\"https://images2018.cnblogs.com/blog/1312707/201802/1312707-20180224102659973-795802276.png\" alt=\"\"></p> <p> </p> <p>bean包的user对象：</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> bean;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.annotation.PostConstruct; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.annotation.PreDestroy; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.annotation.Resource;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.junit.validator.PublicClassValidator; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.beans.factory.annotation.Autowired; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.beans.factory.annotation.Qualifier; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.beans.factory.annotation.Value; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Scope; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.stereotype.Component; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.stereotype.Controller; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.stereotype.Repository; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.stereotype.Service;  </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">代替的配置文件内容<bean name=\"user\" class=\"bean.User\"/> </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">    @Component(\"user\")</span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">四种本质相同，为了方便理解建议使用以下三种 </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">    @Service(\"user\")</span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">service层使用 </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">    @Controller(\"user\")</span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">web层使用</span>     @Repository(\"user\")<span style=\"color: #008000\">//</span><span style=\"color: #008000\">dao层使用 </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">指定对象的作用范围</span> @Scope(scopeName=\"singleton\"<span style=\"color: #000000\">) </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> User {     @Value(</span>\"Tom\")<span style=\"color: #008000\">//</span><span style=\"color: #008000\">赋值</span>     <span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> String name;          </span><span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> Integer age;          </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">@Autowired</span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">对象赋值，自动装配     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">存在问题：如果是多个类型一致的对象，无法分辨</span>     @Resource(name=\"car\")<span style=\"color: #008000\">//</span><span style=\"color: #008000\">这种方式可以明确指定（推荐）</span>     <span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> Car car;          </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Car getCar() {         </span><span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> car;     }     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> setCar(Car car) {         </span><span style=\"color: #0000ff\">this</span>.car =<span style=\"color: #000000\"> car;     }     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> String getName() {         </span><span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> name;     }     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> setName(String name) {         </span><span style=\"color: #0000ff\">this</span>.name =<span style=\"color: #000000\"> name;     }     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Integer getAge() {         </span><span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> age;     }     @Value(</span>\"20\")<span style=\"color: #008000\">//</span><span style=\"color: #008000\">也可以在set方法赋值，效果一样，但不破坏封装性</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> setAge(Integer age) {         </span><span style=\"color: #0000ff\">this</span>.age =<span style=\"color: #000000\"> age;     }     @Override     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> String toString() {         </span><span style=\"color: #0000ff\">return</span> \"User [name=\" + name + \", age=\" + age + \", car=\" + car + \"]\"<span style=\"color: #000000\">;     }          @PostConstruct</span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">初始化方法，当相于配置文件中的init-mothod</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> init(){         System.out.println(</span>\"初始化\"<span style=\"color: #000000\">);     }     @PreDestroy</span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">销毁方法</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> destory(){         System.out.println(</span>\"销毁\"<span style=\"color: #000000\">);     }      }</span></pre> </div> <p> </p> <p> </p> <p> </p> <p>xml配置文件：</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\"> xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\"> xmlns:context</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000\"> xmlns:aop</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000\"> xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd \"</span><span style=\"color: #0000ff\">></span>  <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 准备工作: 导入aop(约束)命名空间 </span><span style=\"color: #008000\">--></span> <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 1.配置目标对象 </span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"userService\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"service.UserServiceImpl\"</span> <span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 2.配置通知对象 </span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"myAdvice\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"springaop.MyAdvice\"</span> <span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 3.配置将通知织入目标对象 </span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:config</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 配置切入点              public void service.UserServiceImpl.save()   切点为save()方法              void service.UserServiceImpl.save()   public可以省略             * service.UserServiceImpl.save()   返回值不做要求，可以*代替             * service.UserServiceImpl.*()    为某类的所有空参方法                          * service.*ServiceImpl.*(..)    最终形态：从某包下找以serviceimpl结尾的类的所有方法             * service..*ServiceImpl.*(..)         </span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:pointcut </span><span style=\"color: #ff0000\">expression</span><span style=\"color: #0000ff\">=\"execution(* service.*ServiceImpl.*(..))\"</span><span style=\"color: #ff0000\"> id</span><span style=\"color: #0000ff\">=\"pc\"</span><span style=\"color: #0000ff\">/></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:aspect </span><span style=\"color: #ff0000\">ref</span><span style=\"color: #0000ff\">=\"myAdvice\"</span> <span style=\"color: #0000ff\">></span>             <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 指定名为before方法作为前置通知 </span><span style=\"color: #008000\">--></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:before </span><span style=\"color: #ff0000\">method</span><span style=\"color: #0000ff\">=\"before\"</span><span style=\"color: #ff0000\"> pointcut-ref</span><span style=\"color: #0000ff\">=\"pc\"</span> <span style=\"color: #0000ff\">/></span>             <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 后置 </span><span style=\"color: #008000\">--></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:after-returning </span><span style=\"color: #ff0000\">method</span><span style=\"color: #0000ff\">=\"afterReturning\"</span><span style=\"color: #ff0000\"> pointcut-ref</span><span style=\"color: #0000ff\">=\"pc\"</span> <span style=\"color: #0000ff\">/></span>             <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 环绕通知 </span><span style=\"color: #008000\">--></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:around </span><span style=\"color: #ff0000\">method</span><span style=\"color: #0000ff\">=\"around\"</span><span style=\"color: #ff0000\"> pointcut-ref</span><span style=\"color: #0000ff\">=\"pc\"</span> <span style=\"color: #0000ff\">/></span>             <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 异常拦截通知 </span><span style=\"color: #008000\">--></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:after-throwing </span><span style=\"color: #ff0000\">method</span><span style=\"color: #0000ff\">=\"afterException\"</span><span style=\"color: #ff0000\"> pointcut-ref</span><span style=\"color: #0000ff\">=\"pc\"</span><span style=\"color: #0000ff\">/></span>             <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 后置 </span><span style=\"color: #008000\">--></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:after </span><span style=\"color: #ff0000\">method</span><span style=\"color: #0000ff\">=\"after\"</span><span style=\"color: #ff0000\"> pointcut-ref</span><span style=\"color: #0000ff\">=\"pc\"</span><span style=\"color: #0000ff\">/></span>         <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">aop:aspect</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">aop:config</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p> </p> <p> </p> <p>测试类：</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> springaop;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.annotation.Resource;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.junit.Test; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.junit.runner.RunWith; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.ApplicationContext; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.support.ClassPathXmlApplicationContext; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.test.context.ContextConfiguration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> bean.User; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> service.UserService; @RunWith(SpringJUnit4ClassRunner.</span><span style=\"color: #0000ff\">class</span><span style=\"color: #000000\">) @ContextConfiguration(</span>\"classpath:springaop/applicationContext.xml\"<span style=\"color: #000000\">) </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> Demo {     @Resource(name</span>=\"userService\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> UserService us;          @Test     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> fun1(){         us.save();     }      }</span></pre> </div> <p> </p> <p> </p> <p>调用sava方法：控制台打印如下</p> <p><img src=\"https://images2018.cnblogs.com/blog/1312707/201802/1312707-20180224103951636-867790426.png\" alt=\"\"></p> <p> </p> <p> </p> <p> </p> <p> </p> <p>补充（这种方式不推荐，了解即可）：</p> <p>可以不使用xml配置文件，改为注解</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> annotationaop;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.ProceedingJoinPoint; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.After; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.AfterReturning; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.AfterThrowing; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.Around; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.Aspect; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.Before; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.aspectj.lang.annotation.Pointcut;  </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">通知类</span> <span style=\"color: #000000\">@Aspect </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">表示该类是一个通知类</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> MyAdvice {     @Pointcut(</span>\"execution(* service.*ServiceImpl.*(..))\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> pc(){}     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">前置通知     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">指定该方法是前置通知,并制定切入点</span>     @Before(\"MyAdvice.pc()\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> before(){         System.out.println(</span>\"这是前置通知!!\"<span style=\"color: #000000\">);     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">后置通知</span>     @AfterReturning(\"MyAdvice.pc()\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> afterReturning(){         System.out.println(</span>\"这是后置通知(如果出现异常不会调用)!!\"<span style=\"color: #000000\">);     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">环绕通知</span>     @Around(\"MyAdvice.pc()\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">public</span> Object around(ProceedingJoinPoint pjp) <span style=\"color: #0000ff\">throws</span><span style=\"color: #000000\"> Throwable {         System.out.println(</span>\"这是环绕通知之前的部分!!\"<span style=\"color: #000000\">);         Object proceed </span>= pjp.proceed();<span style=\"color: #008000\">//</span><span style=\"color: #008000\">调用目标方法</span>         System.out.println(\"这是环绕通知之后的部分!!\"<span style=\"color: #000000\">);         </span><span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> proceed;     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">异常通知</span>     @AfterThrowing(\"MyAdvice.pc()\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> afterException(){         System.out.println(</span>\"出现异常了!\"<span style=\"color: #000000\">);     }     </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">后置通知</span>     @After(\"MyAdvice.pc()\"<span style=\"color: #000000\">)     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> after(){         System.out.println(</span>\"这是后置通知(出现异常也会调用)!!\"<span style=\"color: #000000\">);     } }</span></pre> </div> <p> </p> <p>配置文件做相应修改：</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\"> xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\"> xmlns:context</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000\"> xmlns:aop</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000\"> xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd \"</span><span style=\"color: #0000ff\">></span>  <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 准备工作: 导入aop(约束)命名空间 </span><span style=\"color: #008000\">--></span> <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 1.配置目标对象 </span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"userService\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"service.UserServiceImpl\"</span> <span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 2.配置通知对象 </span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"myAdvice\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"annotationaop.MyAdvice\"</span> <span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\"> 3.开启使用注解完成织入 </span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">aop:aspectj-autoproxy</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">aop:aspectj-autoproxy</span><span style=\"color: #0000ff\">></span>  <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p> </p></div>', 'https://www.cnblogs.com/xuyiqing/p/8464465.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('408', '关于Mybatis的Example(and ,or )应用', '', 'https://www.cnblogs.com/FengLog/p/8464411.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('409', 'SSM+PageHelper 使用', '&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18px; color: #000000&quot;&gt;项目中使用了maven&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;font-size: 18px; color: #00ffff&quot;&gt;&amp;nbsp;&lt;span style=&quot;color: #993366&quot;&gt; 1 引入jar包&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;　&lt;span style=&quot;font-family: 宋体; font-size: 12px&quot;&gt;　&lt;strong&gt;首先需要引入PageHelper的jar包。&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;font-family: 宋体; font-size: 12px&quot;&gt;　　如果使用了maven，那么只要在pom.xml中引入该插件即可，引入如下：&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;font-family: 宋体; font-size: 12px&quot;&gt;　&lt;span style=&quot;font-size: 13px&quot;&gt;　&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span style=&quot;font-size: 13px&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;font-family: 宋体; font-size: 12px&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;font-size: 13px&quot;&gt;&amp;nbsp;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;groupId&amp;gt;com.github.pagehelper&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;font-family: 宋体; font-size: 13px&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;/code&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/em&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;artifactId&amp;gt;pagehelper&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;em id=&quot;__mceDel&quot; style=&quot;font-family: &amp;quot;Courier New&amp;quot;; font-size: 12px&quot;&gt;&lt;span style=&quot;font-size: 13px&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/em&gt;&lt;span style=&quot;font-size: 13px&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;version&amp;gt;4.1.4&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;version&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre name=&quot;code&quot; class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;   &amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;dependency&amp;gt;&lt;br&gt;   &lt;span style=&quot;color: #ff6600&quot;&gt;一定要注意：版本号不能太低，最开始用3点几的时候，报500的错误，不能正确分页。&lt;br&gt;&lt;strong&gt;&lt;span style=&quot;color: #993366; font-size: 18px&quot;&gt;2. &amp;nbsp;在sqlMapConfig.xml中配置：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;div class=&quot;dp-highlighter bg_html&quot;&gt; &lt;div class=&quot;bar&quot;&gt;&amp;nbsp;&lt;/div&gt; &lt;ol class=&quot;dp-xml&quot; start=&quot;1&quot;&gt; &lt;li class=&quot;alt&quot;&gt;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;配置分页插件&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;plugins&lt;span class=&quot;tag&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;plugin&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;interceptor=&lt;span class=&quot;attribute-value&quot;&gt;&quot;com.github.pagehelper.PageHelper&quot;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;设置数据库类型&amp;nbsp;Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;property&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;name=&lt;span class=&quot;attribute-value&quot;&gt;&quot;dialect&quot;&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;value=&lt;span class=&quot;attribute-value&quot;&gt;&quot;mysql&quot;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;该参数默认为false&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;和startPage中的pageNum效果一样--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;property&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;name=&lt;span class=&quot;attribute-value&quot;&gt;&quot;offsetAsPageNum&quot;&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;value=&lt;span class=&quot;attribute-value&quot;&gt;&quot;true&quot;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;该参数默认为false&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;设置为true时，使用RowBounds分页会进行count查询&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;property&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;name=&lt;span class=&quot;attribute-value&quot;&gt;&quot;rowBoundsWithCount&quot;&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;value=&lt;span class=&quot;attribute-value&quot;&gt;&quot;true&quot;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;3.3.0版本可用&amp;nbsp;-&amp;nbsp;分页参数合理化，默认false禁用&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;启用合理化时，如果pageNum&amp;lt;1会查询第一页，如果pageNum&amp;gt;pages会查询最后一页&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;禁用合理化时，如果pageNum&amp;lt;1或pageNum&amp;gt;pages会返回空数据&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;property&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;name=&lt;span class=&quot;attribute-value&quot;&gt;&quot;reasonable&quot;&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;value=&lt;span class=&quot;attribute-value&quot;&gt;&quot;true&quot;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;支持通过Mapper接口参数来传递分页参数&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;property&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;name=&lt;span class=&quot;attribute-value&quot;&gt;&quot;supportMethodsArguments&quot;&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;value=&lt;span class=&quot;attribute-value&quot;&gt;&quot;true&quot;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;comments&quot;&gt;&amp;lt;!--&amp;nbsp;always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;tag-name&quot;&gt;property&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;name=&lt;span class=&quot;attribute-value&quot;&gt;&quot;returnPageInfo&quot;&amp;nbsp;&lt;span class=&quot;attribute&quot;&gt;value=&lt;span class=&quot;attribute-value&quot;&gt;&quot;check&quot;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li class=&quot;alt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;tag-name&quot;&gt;plugin&lt;span class=&quot;tag&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;tag-name&quot;&gt;plugins&lt;span class=&quot;tag&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt;&lt;/div&gt; &lt;pre name=&quot;code&quot; class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;&lt;span style=&quot;color: #ff6600&quot;&gt;&lt;span style=&quot;color: #000000; font-size: 18px&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: #993366&quot;&gt;3 serviceImpl 中接收从mapper.xml中查到的结果，运用pagehelper分页&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;  example： 　　&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;public TbResult getArticleByType(String type,int pageNumber, int pageSize) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TbArticleExample example = new TbArticleExample();&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Criteria criteria = example.createCriteria();&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;criteria.andTypeEqualTo(type);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PageHelper.startPage(pageNumber, pageSize);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;List&amp;lt;TbArticle&amp;gt; art = articleMapper.selectByExampleWithBLOBs(example);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PageInfo&amp;lt;TbArticle&amp;gt; pageInfo = new PageInfo&amp;lt;&amp;gt;(art);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TbResult result =new TbResult();&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;result.setRows(art);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;result.setTotal(pageInfo.getTotal());&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return result;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/p&gt; &lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #ff6600&quot;&gt; &amp;nbsp;可以看出&amp;nbsp;PageHelper.startPage（pageNumber，&amp;nbsp;pageSize）；是在执行sql前出现， PageInfo 其实是已经分完的结果，我这里是把结果又分装到了一个TbResult类中，后来发现不需要这么写。pageInfo.getList()就是art ，所以其实直接返回pageInfo就行。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;color: #993366; font-size: 18px&quot;&gt;4&amp;nbsp; 在Controller层接收结果就可以了&lt;/span&gt;&lt;/p&gt; &lt;pre name=&quot;code&quot; class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-xml hljs  has-numbering&quot;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;', 'https://www.cnblogs.com/12344321hh/p/8464278.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('410', 'elasticsearch6  学习之并发控制', '', 'https://www.cnblogs.com/jalja/p/8340404.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('411', 'eclipse集成dorado5插件', '<div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>dorado5最好使用jdk1.6 32位，与eclipse j2ee indigo版本兼容最好。其他eclipse版本貌似view编辑时按钮点击事件不生效。。。</p> <p>现附上安装包链接（均为官方版本）：</p> <p> jdk1.6 (包含64位和32位) ： 链接：https://pan.baidu.com/s/1nwLjSHN 密码：xneq</p> <p> eclipse j2ee indigo 32位：链接：https://pan.baidu.com/s/1smCUmYD 密码：q4wx</p> <p> eclipse j2ee indigo 64位：链接：https://pan.baidu.com/s/1bqIM0MV 密码：p97a</p> <p> eclipse dorado5ide插件：链接：https://pan.baidu.com/s/1jJ0rqey 密码：umpq</p> <p>集成步骤（默认jdk环境和eclipse已正常安装）：</p> <p>1. 在eclipse安装目录下新建links目录，并在此目录下创建 com.bstek.dorado.link文件。</p> <p>2. 将eclipse dorado5ide插件下载后解压，并重组合并：</p> <p>解压后目录结构为：</p> <p><img src=\"https://images2018.cnblogs.com/blog/1160920/201802/1160920-20180224093737504-845234104.png\" alt=\"\"></p> <p>整合后目录结构为：</p> <p><img src=\"https://images2018.cnblogs.com/blog/1160920/201802/1160920-20180224093828805-1907816140.png\" alt=\"\"></p> <p>（整合是指：将aptana和dorado5文件夹下的features和plugins文件夹分别合并后保存在eclipse文件夹下）</p> <p>3. 编辑eclipse目录下links文件夹内的com.bstek.dorado.link文件，文件内容为：</p> <div class=\"cnblogs_code\"> <pre>path=E:\\plugins\\dorado5ide</pre> </div> <p>4. 至此，eclipse集成dorado5插件完成。启动eclipse。</p> <p><img src=\"https://images2018.cnblogs.com/blog/1160920/201802/1160920-20180224094423067-2038252309.png\" alt=\"\"></p> <p><img src=\"https://images2018.cnblogs.com/blog/1160920/201802/1160920-20180224094435450-1986892612.png\" alt=\"\"></p> <p><img src=\"https://images2018.cnblogs.com/blog/1160920/201802/1160920-20180224094447346-171051245.png\" alt=\"\"></p> <p>此时eclipse已可开发dorado5项目。</p> <p> </p> <p>附dorado5 studio客户端：链接：https://pan.baidu.com/s/1c2Wbu72 密码：s31z</p> <p> </p></div>', 'https://www.cnblogs.com/bearduncle/p/8462217.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('412', 'Java并发系列[5]----ReentrantLock源码分析', '<div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>在Java5.0之前，协调对共享对象的访问可以使用的机制只有synchronized和volatile。我们知道synchronized关键字实现了内置锁，而volatile关键字保证了多线程的内存可见性。在大多数情况下，这些机制都能很好地完成工作，但却无法实现一些更高级的功能，例如，无法中断一个正在等待获取锁的线程，无法实现限定时间的获取锁机制，无法实现非阻塞结构的加锁规则等。而这些更灵活的加锁机制通常都能够提供更好的活跃性或性能。因此，在Java5.0中增加了一种新的机制：ReentrantLock。ReentrantLock类实现了Lock接口，并提供了与synchronized相同的互斥性和内存可见性，它的底层是通过AQS来实现多线程同步的。与内置锁相比ReentrantLock不仅提供了更丰富的加锁机制，而且在性能上也不逊色于内置锁(在以前的版本中甚至优于内置锁)。说了ReentrantLock这么多的优点，那么下面我们就来揭开它的源码看看它的具体实现。</p> <p>1.synchronized关键字的介绍</p> <p>Java提供了内置锁来支持多线程的同步，JVM根据synchronized关键字来标识同步代码块，当线程进入同步代码块时会自动获取锁，退出同步代码块时会自动释放锁，一个线程获得锁后其他线程将会被阻塞。每个Java对象都可以用做一个实现同步的锁，synchronized关键字可以用来修饰对象方法，静态方法和代码块，当修饰对象方法和静态方法时锁分别是方法所在的对象和Class对象，当修饰代码块时需提供额外的对象作为锁。每个Java对象之所以可以作为锁，是因为在对象头中关联了一个monitor对象(管程)，线程进入同步代码块时会自动持有monitor对象，退出时会自动释放monitor对象，当monitor对象被持有时其他线程将会被阻塞。当然这些同步操作都由JVM底层帮你实现了，但以synchronized关键字修饰的方法和代码块在底层实现上还是有些区别的。synchronized关键字修饰的方法是隐式同步的，即无需通过字节码指令来控制的，JVM可以根据方法表中的ACC_SYNCHRONIZED访问标志来区分一个方法是否是同步方法；而synchronized关键字修饰的代码块是显式同步的，它是通过monitorenter和monitorexit字节码指令来控制线程对管程的持有和释放。monitor对象内部持有_count字段，_count等于0表示管程未被持有，_count大于0表示管程已被持有，每次持有线程重入时_count都会加1，每次持有线程退出时_count都会减1，这就是内置锁重入性的实现原理。另外，monitor对象内部还有两条队列_EntryList和_WaitSet，对应着AQS的同步队列和条件队列，当线程获取锁失败时会到_EntryList中阻塞，当调用锁对象的wait方法时线程将会进入_WaitSet中等待，这是内置锁的线程同步和条件等待的实现原理。</p> <p>2.ReentrantLock和Synchronized的比较</p> <p>synchronized关键字是Java提供的内置锁机制，其同步操作由底层JVM实现，而ReentrantLock是java.util.concurrent包提供的显式锁，其同步操作由AQS同步器提供支持。ReentrantLock在加锁和内存上提供的语义与内置锁相同，此外它还提供了一些其他功能，包括定时的锁等待，可中断的锁等待，公平锁，以及实现非块结构的加锁。另外，在早期的JDK版本中ReentrantLock在性能上还占有一定的优势，既然ReentrantLock拥有这么多优势，为什么还要使用synchronized关键字呢？事实上确实有许多人使用ReentrantLock来替代synchronized关键字的加锁操作。但是内置锁仍然有它特有的优势，内置锁为许多开发人员所熟悉，使用方式也更加的简洁紧凑，因为显式锁必须手动在finally块中调用unlock，所以使用内置锁相对来说会更加安全些。同时未来更加可能会去提升synchronized而不是ReentrantLock的性能。因为synchronized是JVM的内置属性，它能执行一些优化，例如对线程封闭的锁对象的锁消除优化，通过增加锁的粒度来消除内置锁的同步，而如果通过基于类库的锁来实现这些功能，则可能性不大。所以当需要一些高级功能时才应该使用ReentrantLock，这些功能包括：可定时的，可轮询的与可中断的锁获取操作，公平队列，以及非块结构的锁。否则，还是应该优先使用synchronized。</p> <p>3.获取锁和释放锁的操作</p> <p>我们首先来看一下使用ReentrantLock加锁的示例代码。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> doSomething() { </span><span style=\"color: #008080\"> 2</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">默认是获取一个非公平锁</span> <span style=\"color: #008080\"> 3</span>     ReentrantLock lock = <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> ReentrantLock(); </span><span style=\"color: #008080\"> 4</span>     <span style=\"color: #0000ff\">try</span><span style=\"color: #000000\">{ </span><span style=\"color: #008080\"> 5</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">执行前先加锁</span> <span style=\"color: #008080\"> 6</span> <span style=\"color: #000000\">        lock.lock();    </span><span style=\"color: #008080\"> 7</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">执行操作...</span> <span style=\"color: #008080\"> 8</span>     }<span style=\"color: #0000ff\">finally</span><span style=\"color: #000000\">{ </span><span style=\"color: #008080\"> 9</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">最后释放锁</span> <span style=\"color: #008080\">10</span> <span style=\"color: #000000\">        lock.unlock(); </span><span style=\"color: #008080\">11</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">12</span> }</pre> </div> <p>以下是获取锁和释放锁这两个操作的API。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\">1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">获取锁的操作</span> <span style=\"color: #008080\">2</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> lock() { </span><span style=\"color: #008080\">3</span> <span style=\"color: #000000\">    sync.lock(); </span><span style=\"color: #008080\">4</span> <span style=\"color: #000000\">} </span><span style=\"color: #008080\">5</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">释放锁的操作</span> <span style=\"color: #008080\">6</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> unlock() { </span><span style=\"color: #008080\">7</span>     sync.release(1<span style=\"color: #000000\">); </span><span style=\"color: #008080\">8</span> }</pre> </div> <p>可以看到获取锁和释放锁的操作分别委托给Sync对象的lock方法和release方法。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> ReentrantLock <span style=\"color: #0000ff\">implements</span><span style=\"color: #000000\"> Lock, java.io.Serializable { </span><span style=\"color: #008080\"> 2</span>      <span style=\"color: #008080\"> 3</span>     <span style=\"color: #0000ff\">private</span> <span style=\"color: #0000ff\">final</span><span style=\"color: #000000\"> Sync sync; </span><span style=\"color: #008080\"> 4</span>  <span style=\"color: #008080\"> 5</span>     <span style=\"color: #0000ff\">abstract</span> <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">class</span> Sync <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> AbstractQueuedSynchronizer { </span><span style=\"color: #008080\"> 6</span>         <span style=\"color: #0000ff\">abstract</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> lock(); </span><span style=\"color: #008080\"> 7</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\"> 8</span>      <span style=\"color: #008080\"> 9</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">实现非公平锁的同步器</span> <span style=\"color: #008080\">10</span>     <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">class</span> NonfairSync <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> Sync { </span><span style=\"color: #008080\">11</span>         <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> lock() { </span><span style=\"color: #008080\">12</span> <span style=\"color: #000000\">            ... </span><span style=\"color: #008080\">13</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">14</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">15</span>      <span style=\"color: #008080\">16</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">实现公平锁的同步器</span> <span style=\"color: #008080\">17</span>     <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">class</span> FairSync <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> Sync { </span><span style=\"color: #008080\">18</span>         <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> lock() { </span><span style=\"color: #008080\">19</span> <span style=\"color: #000000\">            ... </span><span style=\"color: #008080\">20</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">21</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">22</span> }</pre> </div> <p>每个ReentrantLock对象都持有一个Sync类型的引用，这个Sync类是一个抽象内部类它继承自AbstractQueuedSynchronizer，它里面的lock方法是一个抽象方法。ReentrantLock的成员变量sync是在构造时赋值的，下面我们看看ReentrantLock的两个构造方法都做了些什么？</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\">1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">默认无参构造器</span> <span style=\"color: #008080\">2</span> <span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> ReentrantLock() { </span><span style=\"color: #008080\">3</span>     sync = <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> NonfairSync(); </span><span style=\"color: #008080\">4</span> <span style=\"color: #000000\">} </span><span style=\"color: #008080\">5</span>  <span style=\"color: #008080\">6</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">有参构造器</span> <span style=\"color: #008080\">7</span> <span style=\"color: #0000ff\">public</span> ReentrantLock(<span style=\"color: #0000ff\">boolean</span><span style=\"color: #000000\"> fair) { </span><span style=\"color: #008080\">8</span>     sync = fair ? <span style=\"color: #0000ff\">new</span> FairSync() : <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> NonfairSync(); </span><span style=\"color: #008080\">9</span> }</pre> </div> <p>调用默认无参构造器会将NonfairSync实例赋值给sync，此时锁是非公平锁。有参构造器允许通过参数来指定是将FairSync实例还是NonfairSync实例赋值给sync。NonfairSync和FairSync都是继承自Sync类并重写了lock()方法，所以公平锁和非公平锁在获取锁的方式上有些区别，这个我们下面会讲到。再来看看释放锁的操作，每次调用unlock()方法都只是去执行sync.release(1)操作，这步操作会调用AbstractQueuedSynchronizer类的release()方法，我们再来回顾一下。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">释放锁的操作(独占模式)</span> <span style=\"color: #008080\"> 2</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">boolean</span> release(<span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> arg) { </span><span style=\"color: #008080\"> 3</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">拨动密码锁, 看看是否能够开锁</span> <span style=\"color: #008080\"> 4</span>     <span style=\"color: #0000ff\">if</span><span style=\"color: #000000\"> (tryRelease(arg)) { </span><span style=\"color: #008080\"> 5</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">获取head结点</span> <span style=\"color: #008080\"> 6</span>         Node h =<span style=\"color: #000000\"> head; </span><span style=\"color: #008080\"> 7</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果head结点不为空并且等待状态不等于0就去唤醒后继结点</span> <span style=\"color: #008080\"> 8</span>         <span style=\"color: #0000ff\">if</span> (h != <span style=\"color: #0000ff\">null</span> && h.waitStatus != 0<span style=\"color: #000000\">) { </span><span style=\"color: #008080\"> 9</span>             <span style=\"color: #008000\">//</span><span style=\"color: #008000\">唤醒后继结点</span> <span style=\"color: #008080\">10</span> <span style=\"color: #000000\">            unparkSuccessor(h); </span><span style=\"color: #008080\">11</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">12</span>         <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">true</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">13</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">14</span>     <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">15</span> }</pre> </div> <p>这个release方法是AQS提供的释放锁操作的API，它首先会去调用tryRelease方法去尝试获取锁，tryRelease方法是抽象方法，它的实现逻辑在子类Sync里面。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">尝试释放锁</span> <span style=\"color: #008080\"> 2</span> <span style=\"color: #0000ff\">protected</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">boolean</span> tryRelease(<span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> releases) { </span><span style=\"color: #008080\"> 3</span>     <span style=\"color: #0000ff\">int</span> c = getState() -<span style=\"color: #000000\"> releases; </span><span style=\"color: #008080\"> 4</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果持有锁的线程不是当前线程就抛出异常</span> <span style=\"color: #008080\"> 5</span>     <span style=\"color: #0000ff\">if</span> (Thread.currentThread() !=<span style=\"color: #000000\"> getExclusiveOwnerThread()) { </span><span style=\"color: #008080\"> 6</span>         <span style=\"color: #0000ff\">throw</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> IllegalMonitorStateException(); </span><span style=\"color: #008080\"> 7</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\"> 8</span>     <span style=\"color: #0000ff\">boolean</span> free = <span style=\"color: #0000ff\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\"> 9</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果同步状态为0则表明锁被释放</span> <span style=\"color: #008080\">10</span>     <span style=\"color: #0000ff\">if</span> (c == 0<span style=\"color: #000000\">) { </span><span style=\"color: #008080\">11</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">设置锁被释放的标志为真</span> <span style=\"color: #008080\">12</span>         free = <span style=\"color: #0000ff\">true</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">13</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">设置占用线程为空</span> <span style=\"color: #008080\">14</span>         setExclusiveOwnerThread(<span style=\"color: #0000ff\">null</span><span style=\"color: #000000\">); </span><span style=\"color: #008080\">15</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">16</span> <span style=\"color: #000000\">    setState(c); </span><span style=\"color: #008080\">17</span>     <span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> free; </span><span style=\"color: #008080\">18</span> }</pre> </div> <p>这个tryRelease方法首先会获取当前同步状态，并将当前同步状态减去传入的参数值得到新的同步状态，然后判断新的同步状态是否等于0，如果等于0则表明当前锁被释放，然后先将锁的释放状态置为真，再将当前占有锁的线程清空，最后调用setState方法设置新的同步状态并返回锁的释放状态。</p> <p>4.公平锁和非公平锁</p> <p>我们知道ReentrantLock是公平锁还是非公平锁是基于sync指向的是哪个具体实例。在构造时会为成员变量sync赋值，如果赋值为NonfairSync实例则表明是非公平锁，如果赋值为FairSync实例则表明为公平锁。如果是公平锁，线程将按照它们发出请求的顺序来获得锁，但在非公平锁上，则允许插队行为：当一个线程请求非公平的锁时，如果在发出请求的同时该锁的状态变为可用，那么这个线程将跳过队列中所有等待的线程直接获得这个锁。下面我们先看看非公平锁的获取方式。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">非公平同步器</span> <span style=\"color: #008080\"> 2</span> <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">class</span> NonfairSync <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> Sync { </span><span style=\"color: #008080\"> 3</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">实现父类的抽象获取锁的方法</span> <span style=\"color: #008080\"> 4</span>     <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> lock() { </span><span style=\"color: #008080\"> 5</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">使用CAS方式设置同步状态</span> <span style=\"color: #008080\"> 6</span>         <span style=\"color: #0000ff\">if</span> (compareAndSetState(0, 1<span style=\"color: #000000\">)) { </span><span style=\"color: #008080\"> 7</span>             <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果设置成功则表明锁没被占用</span> <span style=\"color: #008080\"> 8</span> <span style=\"color: #000000\">            setExclusiveOwnerThread(Thread.currentThread()); </span><span style=\"color: #008080\"> 9</span>         } <span style=\"color: #0000ff\">else</span><span style=\"color: #000000\"> { </span><span style=\"color: #008080\">10</span>             <span style=\"color: #008000\">//</span><span style=\"color: #008000\">否则表明锁已经被占用, 调用acquire让线程去同步队列排队获取</span> <span style=\"color: #008080\">11</span>             acquire(1<span style=\"color: #000000\">); </span><span style=\"color: #008080\">12</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">13</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">14</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">尝试获取锁的方法</span> <span style=\"color: #008080\">15</span>     <span style=\"color: #0000ff\">protected</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">boolean</span> tryAcquire(<span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> acquires) { </span><span style=\"color: #008080\">16</span>         <span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> nonfairTryAcquire(acquires); </span><span style=\"color: #008080\">17</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">18</span> <span style=\"color: #000000\">} </span><span style=\"color: #008080\">19</span>  <span style=\"color: #008080\">20</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">以不可中断模式获取锁(独占模式)</span> <span style=\"color: #008080\">21</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">void</span> acquire(<span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> arg) { </span><span style=\"color: #008080\">22</span>     <span style=\"color: #0000ff\">if</span> (!tryAcquire(arg) &&<span style=\"color: #000000\"> acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) { </span><span style=\"color: #008080\">23</span> <span style=\"color: #000000\">        selfInterrupt(); </span><span style=\"color: #008080\">24</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">25</span> }</pre> </div> <p>可以看到在非公平锁的lock方法中，线程第一步就会以CAS方式将同步状态的值从0改为1。其实这步操作就等于去尝试获取锁，如果更改成功则表明线程刚来就获取了锁，而不必再去同步队列里面排队了。如果更改失败则表明线程刚来时锁还未被释放，所以接下来就调用acquire方法。我们知道这个acquire方法是继承自AbstractQueuedSynchronizer的方法，现在再来回顾一下该方法，线程进入acquire方法后首先去调用tryAcquire方法尝试去获取锁，由于NonfairSync覆盖了tryAcquire方法，并在方法中调用了父类Sync的nonfairTryAcquire方法，所以这里会调用到nonfairTryAcquire方法去尝试获取锁。我们看看这个方法具体做了些什么。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">非公平的获取锁</span> <span style=\"color: #008080\"> 2</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">boolean</span> nonfairTryAcquire(<span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> acquires) { </span><span style=\"color: #008080\"> 3</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">获取当前线程</span> <span style=\"color: #008080\"> 4</span>     <span style=\"color: #0000ff\">final</span> Thread current =<span style=\"color: #000000\"> Thread.currentThread(); </span><span style=\"color: #008080\"> 5</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">获取当前同步状态</span> <span style=\"color: #008080\"> 6</span>     <span style=\"color: #0000ff\">int</span> c =<span style=\"color: #000000\"> getState(); </span><span style=\"color: #008080\"> 7</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果同步状态为0则表明锁没有被占用</span> <span style=\"color: #008080\"> 8</span>     <span style=\"color: #0000ff\">if</span> (c == 0<span style=\"color: #000000\">) { </span><span style=\"color: #008080\"> 9</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">使用CAS更新同步状态</span> <span style=\"color: #008080\">10</span>         <span style=\"color: #0000ff\">if</span> (compareAndSetState(0<span style=\"color: #000000\">, acquires)) { </span><span style=\"color: #008080\">11</span>             <span style=\"color: #008000\">//</span><span style=\"color: #008000\">设置目前占用锁的线程</span> <span style=\"color: #008080\">12</span> <span style=\"color: #000000\">            setExclusiveOwnerThread(current); </span><span style=\"color: #008080\">13</span>             <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">true</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">14</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">15</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">否则的话就判断持有锁的是否是当前线程</span> <span style=\"color: #008080\">16</span>     }<span style=\"color: #0000ff\">else</span> <span style=\"color: #0000ff\">if</span> (current ==<span style=\"color: #000000\"> getExclusiveOwnerThread()) { </span><span style=\"color: #008080\">17</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果锁是被当前线程持有的, 就直接修改当前同步状态</span> <span style=\"color: #008080\">18</span>         <span style=\"color: #0000ff\">int</span> nextc = c +<span style=\"color: #000000\"> acquires; </span><span style=\"color: #008080\">19</span>         <span style=\"color: #0000ff\">if</span> (nextc < 0<span style=\"color: #000000\">) { </span><span style=\"color: #008080\">20</span>             <span style=\"color: #0000ff\">throw</span> <span style=\"color: #0000ff\">new</span> Error(\"Maximum lock count exceeded\"<span style=\"color: #000000\">); </span><span style=\"color: #008080\">21</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">22</span> <span style=\"color: #000000\">        setState(nextc); </span><span style=\"color: #008080\">23</span>         <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">true</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">24</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">25</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果持有锁的不是当前线程则返回失败标志</span> <span style=\"color: #008080\">26</span>     <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">27</span> }</pre> </div> <p>nonfairTryAcquire方法是Sync的方法，我们可以看到线程进入此方法后首先去获取同步状态，如果同步状态为0就使用CAS操作更改同步状态，其实这又是获取了一遍锁。如果同步状态不为0表明锁被占用，此时会先去判断持有锁的线程是否是当前线程，如果是的话就将同步状态加1，否则的话这次尝试获取锁的操作宣告失败。于是会调用addWaiter方法将线程添加到同步队列。综上来看，在非公平锁的模式下一个线程在进入同步队列之前会尝试获取两遍锁，如果获取成功则不进入同步队列排队，否则才进入同步队列排队。接下来我们看看公平锁的获取方式。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">实现公平锁的同步器</span> <span style=\"color: #008080\"> 2</span> <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">class</span> FairSync <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> Sync { </span><span style=\"color: #008080\"> 3</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">实现父类的抽象获取锁的方法</span> <span style=\"color: #008080\"> 4</span>     <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> lock() { </span><span style=\"color: #008080\"> 5</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">调用acquire让线程去同步队列排队获取</span> <span style=\"color: #008080\"> 6</span>         acquire(1<span style=\"color: #000000\">); </span><span style=\"color: #008080\"> 7</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\"> 8</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">尝试获取锁的方法</span> <span style=\"color: #008080\"> 9</span>     <span style=\"color: #0000ff\">protected</span> <span style=\"color: #0000ff\">final</span> <span style=\"color: #0000ff\">boolean</span> tryAcquire(<span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> acquires) { </span><span style=\"color: #008080\">10</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">获取当前线程</span> <span style=\"color: #008080\">11</span>         <span style=\"color: #0000ff\">final</span> Thread current =<span style=\"color: #000000\"> Thread.currentThread(); </span><span style=\"color: #008080\">12</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">获取当前同步状态</span> <span style=\"color: #008080\">13</span>         <span style=\"color: #0000ff\">int</span> c =<span style=\"color: #000000\"> getState(); </span><span style=\"color: #008080\">14</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果同步状态0则表示锁没被占用</span> <span style=\"color: #008080\">15</span>         <span style=\"color: #0000ff\">if</span> (c == 0<span style=\"color: #000000\">) { </span><span style=\"color: #008080\">16</span>             <span style=\"color: #008000\">//</span><span style=\"color: #008000\">判断同步队列是否有前继结点</span> <span style=\"color: #008080\">17</span>             <span style=\"color: #0000ff\">if</span> (!hasQueuedPredecessors() && compareAndSetState(0<span style=\"color: #000000\">, acquires)) { </span><span style=\"color: #008080\">18</span>                 <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果没有前继结点且设置同步状态成功就表示获取锁成功</span> <span style=\"color: #008080\">19</span> <span style=\"color: #000000\">                setExclusiveOwnerThread(current); </span><span style=\"color: #008080\">20</span>                 <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">true</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">21</span> <span style=\"color: #000000\">            } </span><span style=\"color: #008080\">22</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">否则判断是否是当前线程持有锁</span> <span style=\"color: #008080\">23</span>         }<span style=\"color: #0000ff\">else</span> <span style=\"color: #0000ff\">if</span> (current ==<span style=\"color: #000000\"> getExclusiveOwnerThread()) { </span><span style=\"color: #008080\">24</span>             <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果是当前线程持有锁就直接修改同步状态</span> <span style=\"color: #008080\">25</span>             <span style=\"color: #0000ff\">int</span> nextc = c +<span style=\"color: #000000\"> acquires; </span><span style=\"color: #008080\">26</span>             <span style=\"color: #0000ff\">if</span> (nextc < 0<span style=\"color: #000000\">) { </span><span style=\"color: #008080\">27</span>                 <span style=\"color: #0000ff\">throw</span> <span style=\"color: #0000ff\">new</span> Error(\"Maximum lock count exceeded\"<span style=\"color: #000000\">); </span><span style=\"color: #008080\">28</span> <span style=\"color: #000000\">            } </span><span style=\"color: #008080\">29</span> <span style=\"color: #000000\">            setState(nextc); </span><span style=\"color: #008080\">30</span>             <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">true</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">31</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">32</span>         <span style=\"color: #008000\">//</span><span style=\"color: #008000\">如果不是当前线程持有锁则获取失败</span> <span style=\"color: #008080\">33</span>         <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008080\">34</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">35</span> }</pre> </div> <p>调用公平锁的lock方法时会直接调用acquire方法。同样的，acquire方法首先会调用FairSync重写的tryAcquire方法来尝试获取锁。在该方法中也是首先获取同步状态的值，如果同步状态为0则表明此时锁刚好被释放，这时和非公平锁不同的是它会先去调用hasQueuedPredecessors方法查询同步队列中是否有人在排队，如果没人在排队才会去修改同步状态的值，可以看到公平锁在这里采取礼让的方式而不是自己马上去获取锁。除了这一步和非公平锁不一样之外，其他的操作都是一样的。综上所述，可以看到公平锁在进入同步队列之前只检查了一遍锁的状态，即使是发现了锁是开的也不会自己马上去获取，而是先让同步队列中的线程先获取，所以可以保证在公平锁下所有线程获取锁的顺序都是先来后到的，这也保证了获取锁的公平性。<br>那么我们为什么不希望所有锁都是公平的呢？毕竟公平是一种好的行为，而不公平是一种不好的行为。由于线程的挂起和唤醒操作存在较大的开销而影响系统性能，特别是在竞争激烈的情况下公平锁将导致线程频繁的挂起和唤醒操作，而非公平锁可以减少这样的操作，所以在性能上将会优于公平锁。另外，由于大部分线程使用锁的时间都是非常短暂的，而线程的唤醒操作会存在延时情况，有可能在A线程被唤醒期间B线程马上获取了锁并使用完释放了锁，这就导致了双赢的局面，A线程获取锁的时刻并没有推迟，但B线程提前使用了锁，并且吞吐量也获得了提高。</p> <p>5.条件队列的实现机制</p> <p>内置条件队列存在一些缺陷，每个内置锁都只能有一个相关联的条件队列，这导致多个线程可能在同一个条件队列上等待不同的条件谓词，那么每次调用notifyAll时都会将所有等待的线程唤醒，当线程醒来后发现并不是自己等待的条件谓词，转而又会被挂起。这导致做了很多无用的线程唤醒和挂起操作，而这些操作将会大量浪费系统资源，降低系统的性能。如果想编写一个带有多个条件谓词的并发对象，或者想获得除了条件队列可见性之外的更多控制权，就需要使用显式的Lock和Condition而不是内置锁和条件队列。一个Condition和一个Lock关联在一起，就像一个条件队列和一个内置锁相关联一样。要创建一个Condition，可以在相关联的Lock上调用Lock.newCondition方法。我们先来看一个使用Condition的示例。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> BoundedBuffer { </span><span style=\"color: #008080\"> 2</span>  <span style=\"color: #008080\"> 3</span>     <span style=\"color: #0000ff\">final</span> Lock lock = <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> ReentrantLock(); </span><span style=\"color: #008080\"> 4</span>     <span style=\"color: #0000ff\">final</span> Condition notFull = lock.newCondition();   <span style=\"color: #008000\">//</span><span style=\"color: #008000\">条件谓词：notFull</span> <span style=\"color: #008080\"> 5</span>     <span style=\"color: #0000ff\">final</span> Condition notEmpty = lock.newCondition();  <span style=\"color: #008000\">//</span><span style=\"color: #008000\">条件谓词：notEmpty</span> <span style=\"color: #008080\"> 6</span>     <span style=\"color: #0000ff\">final</span> Object[] items = <span style=\"color: #0000ff\">new</span> Object[100<span style=\"color: #000000\">]; </span><span style=\"color: #008080\"> 7</span>     <span style=\"color: #0000ff\">int</span><span style=\"color: #000000\"> putptr, takeptr, count; </span><span style=\"color: #008080\"> 8</span>  <span style=\"color: #008080\"> 9</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">生产方法</span> <span style=\"color: #008080\">10</span>     <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> put(Object x) <span style=\"color: #0000ff\">throws</span><span style=\"color: #000000\"> InterruptedException { </span><span style=\"color: #008080\">11</span> <span style=\"color: #000000\">        lock.lock(); </span><span style=\"color: #008080\">12</span>         <span style=\"color: #0000ff\">try</span><span style=\"color: #000000\"> { </span><span style=\"color: #008080\">13</span>             <span style=\"color: #0000ff\">while</span> (count ==<span style=\"color: #000000\"> items.length) </span><span style=\"color: #008080\">14</span>                 notFull.await();  <span style=\"color: #008000\">//</span><span style=\"color: #008000\">队列已满, 线程在notFull队列上等待</span> <span style=\"color: #008080\">15</span>             items[putptr] =<span style=\"color: #000000\"> x; </span><span style=\"color: #008080\">16</span>             <span style=\"color: #0000ff\">if</span> (++putptr == items.length) putptr = 0<span style=\"color: #000000\">; </span><span style=\"color: #008080\">17</span>             ++<span style=\"color: #000000\">count; </span><span style=\"color: #008080\">18</span>             notEmpty.signal(); <span style=\"color: #008000\">//</span><span style=\"color: #008000\">生产成功, 唤醒notEmpty队列的结点</span> <span style=\"color: #008080\">19</span>         } <span style=\"color: #0000ff\">finally</span><span style=\"color: #000000\"> { </span><span style=\"color: #008080\">20</span> <span style=\"color: #000000\">            lock.unlock(); </span><span style=\"color: #008080\">21</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">22</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">23</span>  <span style=\"color: #008080\">24</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">消费方法</span> <span style=\"color: #008080\">25</span>     <span style=\"color: #0000ff\">public</span> Object take() <span style=\"color: #0000ff\">throws</span><span style=\"color: #000000\"> InterruptedException { </span><span style=\"color: #008080\">26</span> <span style=\"color: #000000\">        lock.lock(); </span><span style=\"color: #008080\">27</span>         <span style=\"color: #0000ff\">try</span><span style=\"color: #000000\"> { </span><span style=\"color: #008080\">28</span>             <span style=\"color: #0000ff\">while</span> (count == 0<span style=\"color: #000000\">) </span><span style=\"color: #008080\">29</span>                 notEmpty.await(); <span style=\"color: #008000\">//</span><span style=\"color: #008000\">队列为空, 线程在notEmpty队列上等待</span> <span style=\"color: #008080\">30</span>             Object x =<span style=\"color: #000000\"> items[takeptr]; </span><span style=\"color: #008080\">31</span>             <span style=\"color: #0000ff\">if</span> (++takeptr == items.length) takeptr = 0<span style=\"color: #000000\">; </span><span style=\"color: #008080\">32</span>             --<span style=\"color: #000000\">count; </span><span style=\"color: #008080\">33</span>             notFull.signal();  <span style=\"color: #008000\">//</span><span style=\"color: #008000\">消费成功, 唤醒notFull队列的结点</span> <span style=\"color: #008080\">34</span>             <span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> x; </span><span style=\"color: #008080\">35</span>         } <span style=\"color: #0000ff\">finally</span><span style=\"color: #000000\"> { </span><span style=\"color: #008080\">36</span> <span style=\"color: #000000\">            lock.unlock(); </span><span style=\"color: #008080\">37</span> <span style=\"color: #000000\">        } </span><span style=\"color: #008080\">38</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">39</span>      <span style=\"color: #008080\">40</span> }</pre> </div> <p>一个lock对象可以产生多个条件队列，这里产生了两个条件队列notFull和notEmpty。当容器已满时再调用put方法的线程需要进行阻塞，等待条件谓词为真(容器不满)才醒来继续执行；当容器为空时再调用take方法的线程也需要阻塞，等待条件谓词为真(容器不空)才醒来继续执行。这两类线程是根据不同的条件谓词进行等待的，所以它们会进入两个不同的条件队列中阻塞，等到合适时机再通过调用Condition对象上的API进行唤醒。下面是newCondition方法的实现代码。</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #008080\"> 1</span> <span style=\"color: #008000\">//</span><span style=\"color: #008000\">创建条件队列</span> <span style=\"color: #008080\"> 2</span> <span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Condition newCondition() { </span><span style=\"color: #008080\"> 3</span>     <span style=\"color: #0000ff\">return</span><span style=\"color: #000000\"> sync.newCondition(); </span><span style=\"color: #008080\"> 4</span> <span style=\"color: #000000\">} </span><span style=\"color: #008080\"> 5</span>  <span style=\"color: #008080\"> 6</span> <span style=\"color: #0000ff\">abstract</span> <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">class</span> Sync <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> AbstractQueuedSynchronizer { </span><span style=\"color: #008080\"> 7</span>     <span style=\"color: #008000\">//</span><span style=\"color: #008000\">新建Condition对象</span> <span style=\"color: #008080\"> 8</span>     <span style=\"color: #0000ff\">final</span><span style=\"color: #000000\"> ConditionObject newCondition() { </span><span style=\"color: #008080\"> 9</span>         <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> ConditionObject(); </span><span style=\"color: #008080\">10</span> <span style=\"color: #000000\">    } </span><span style=\"color: #008080\">11</span> }</pre> </div> <p>ReentrantLock上的条件队列的实现都是基于AbstractQueuedSynchronizer的，我们在调用newCondition方法时所获得的Condition对象就是AQS的内部类ConditionObject的实例。所有对条件队列的操作都是通过调用ConditionObject对外提供的API来完成的。有关于ConditionObject的具体实现大家可以查阅我的这篇文章《<a href=\"http://www.cnblogs.com/liuyun1995/p/8416340.html\" target=\"_blank\">Java并发系列[4]----AbstractQueuedSynchronizer源码分析之条件队列</a>》，这里就不重复赘述了。至此，我们对ReentrantLock源码的剖析也告一段落，希望阅读本篇文章能够对读者们理解并掌握ReentrantLock起到一定的帮助作用。</p></div>', 'https://www.cnblogs.com/liuyun1995/p/8462088.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('413', 'Servlet和JSP之自定义标签学习', '<div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>　　  此文章会讲述简单标签处理器，因为经典自定义标签处理器没有简单标签处理器方便使用，故在此不进行描述。</p> <p>         参考：慕课网的<a href=\"https://www.imooc.com/learn/480\">《JSP自定义标签》</a>视频;</p> <p>　　　　《Servlet、JSP和Spring MVC初学指南》的第六章;</p> <p>　　　　IBM的<a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-jsp2tag/\">《利用 JSP 2 提供的 SimpleTagSupport 开发自定义标签》</a>;</p> <p>　　　　菜鸟教程的<a href=\"http://www.runoob.com/jsp/jsp-custom-tags.html\">JSP自定义标签</a>文章。　　</p> <hr> <p>       <span style=\"font-size: 14pt\"><strong><span style=\"color: #ff0000\">自定义标签  </span></strong></span></p> <p>　　<span style=\"color: #008000; font-size: 16px\"><strong>自定义标签</strong></span></p> <p>         自定义标签就是将方法封装到自定义标签处理类中，然后使用方法与JSTL标签来达到，解决JSP中JavaBean的展现与业务实现分离问题。自定义标签提供了在JavaBean中所不能实现的便利，其中就包括，自定义标签允许访问JSP中隐藏的对象及它们的属性。</p> <p>         自定义标签的实现，叫做标签处理器，而简单标签处理器是指实现SimpleTag接口（或继承SimpleTagSupport类）实现的标签处理器，经典标签处理器是指实现BodyTag接口（或继承BodyTagSupport类）等实现的标签处理器。</p> <p> </p> <p>　　<span style=\"font-size: 16px\"><strong><span style=\"color: #008000\">自定义标签的继承结构</span></strong></span></p> <p>　　　　<strong><span style=\"color: #33cccc\">JSP</span></strong><----Tag <----IterationTag<----TagSupport<----BodyTagSupport<-----BodyTag</p> <p>　　　　<strong><span style=\"color: #33cccc\">JSP</span></strong><----SimpleTag<-----SimpleSupportTag</p> <p> </p> <p>         <span style=\"color: #008000; font-size: 16px\"><strong>简单标签处理器</strong></span></p> <p>         简单标签处理器有简单的生命周期，SimpleTag接口中用于标签触发的方法只有一个------doTag，并且该方法只会执行一次。业务逻辑、遍历及页面内容操作都在这里实现。简单标签处理器中的页面内容都在JspFragment类的实例中体现。</p> <p> </p> <p>         <span style=\"color: #008000; font-size: 16px\"><strong>简单标签的生命周期</strong></span>如下：</p> <p> </p> <p>1)       JSP容器通过简单标签处理器的无参数构造器创建它的实例，因此，简单标签处理器必须有无参数构造器（一般不用自己写， 用系统默认的就可以了）。</p> <p>2)       JSP容器通过setJspContext的方法，传入JspContext对象：该对象中最重要的方法是getOut()，它能返回JspWriter，通过JspWriter就可以把响应返回前端了。</p> <p>3)       如果自定义标签被另一个自定义标签所嵌套，JSP容器就会调用setParent的方法。</p> <p>4)       JSP容器调用该标签中所定义的每个属性的Set方法。</p> <p>5)       如果需要处理页面内容，JSP容器还会调用SimpleTag接口的setJspBody方法，把使用JspFragment封装的页面内容传过来。当然，如果没有页面内容，那么JSP容器不会调用该方法。</p> <p> </p> <p>　　接下来是<span style=\"color: #008000; font-size: 16px\"><strong>SimpleTag</strong><strong>接口的详解</strong></span>：</p> <p> </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> <tbody> <tr> <td valign=\"top\" width=\"198\"> <p align=\"center\"><span style=\"font-size: 14px\"><strong>方法</strong></span></p> </td> <td valign=\"top\" width=\"327\"> <p align=\"center\"><span style=\"font-size: 14px\"><strong>说明</strong></span></p> </td> </tr> <tr> <td valign=\"top\" width=\"198\"> <p><span style=\"font-size: 14px\">doTag()方法</span></p> </td> <td valign=\"top\" width=\"327\"> <p><span style=\"font-size: 14px\">是核心方法，用于编写标签处理逻辑。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"198\"> <p><span style=\"font-size: 14px\">setParent(JspTag)方法</span></p> </td> <td valign=\"top\" width=\"327\"> <p><span style=\"font-size: 14px\">将父标签处理器对象传递给标签处理器。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"198\"> <p><span style=\"font-size: 14px\">getParent()方法</span></p> </td> <td valign=\"top\" width=\"327\"> <p><span style=\"font-size: 14px\">获取当前标签的父标签对象。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"198\"> <p><span style=\"font-size: 14px\">setJspContext(JspContext)方法</span></p> </td> <td valign=\"top\" width=\"327\"> <p><span style=\"font-size: 14px\">将JSP页面的pageContext对象传递给标签处理器对象。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"198\"> <p><span style=\"font-size: 14px\">setJspBody(JspFragment)方法</span></p> </td> <td valign=\"top\" width=\"327\"> <p><span style=\"font-size: 14px\">将代表当前标签体的JspFragment对象传递给标签处理器对象。（JspFragment中的invoke(Writer)方法用于执行JspFragment对象所代表的代码段）</span></p> </td> </tr> </tbody> </table> <p>　　</p> <p>　　是不是看着上面的一大串文字，有点懵？没事儿，下面就是关于实现SimpleTagSupport类（跟实现SimpleTag接口的功用类似）的例子。</p> <p>　　首先需要准备一个SimpleTag的.tld文件，用于注册自定义标签，这个文件是在apache-tomcat文件里面，一般地址是在<strong><span style=\"color: #0000ff\">E:apache-tomcat-6.0.39webappsexamplesWEB-INFjsp</span></strong>里面，名称是<strong><span style=\"color: #ff00ff\">jsp2-example-taglib.tld</span></strong>。</p> <p>　　用一个显示当前时间的jsp页面来做为第一个例子：</p> <p> </p> <p>　　<span style=\"font-size: 16px\"><strong><span style=\"color: #008000\">自定义标签的创建步骤</span></strong></span>：</p> <p><strong><span style=\"font-size: 14px; color: #ff6600\">1)       创建标签处理类</span></strong></p> <div class=\"cnblogs_code\"> <pre><span style=\"font-size: 14px\"><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> com.ny.tag2; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> java.io.IOException; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> java.text.SimpleDateFormat; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> java.util.Date;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.servlet.jsp.JspException; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.servlet.jsp.JspWriter; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> javax.servlet.jsp.tagext.SimpleTagSupport;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> DisplayInfo <span style=\"color: #0000ff\">extends</span><span style=\"color: #000000\"> SimpleTagSupport{      @Override     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> doTag() <span style=\"color: #0000ff\">throws</span><span style=\"color: #000000\"> JspException, IOException {         SimpleDateFormat simpleDateFormat </span>= <span style=\"color: #0000ff\">new</span> SimpleDateFormat(\"yyyy-MM-dd  HH:mm:ss\"<span style=\"color: #000000\">);         String dateStr </span>= simpleDateFormat.format(<span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Date());         JspWriter jspWriter </span>=<span style=\"color: #000000\"> getJspContext().getOut();         jspWriter.write(dateStr);     } }</span></span></pre> </div> <p> </p> <p><strong><span style=\"font-size: 14px; color: #ff6600\">2)       创建标签库文件</span></strong></p> <p><span style=\"font-size: 14px\">　　在WEB-INF目录下创建一个.tld文件（如nyTag.tld），然后打开jsp2-example-taglib.tld文件，里面有我们需要的taglib配置，打开这个文件之后找到下面的代码段，复制到nyTag.tld中。</span></p> <p><span style=\"font-size: 14px\">　　如果tid文件位于WEB-INF文件下面，Tomcat会自动加载tld文件中的标签库。如果位于其他位置，其实也可以在web.xml中配置。</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\" </span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">taglib </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://java.sun.com/xml/ns/j2ee\"</span><span style=\"color: #ff0000\">     xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">     xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd\"</span><span style=\"color: #ff0000\">     version</span><span style=\"color: #0000ff\">=\"2.0\"</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">description</span><span style=\"color: #0000ff\">></span>A tag library exercising SimpleTag handlers.        <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">description</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">tlib-version</span><span style=\"color: #0000ff\">></span>1.0<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">tlib-version</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">short-name</span><span style=\"color: #0000ff\">></span>SimpleTagLibrary<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">short-name</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">uri</span><span style=\"color: #0000ff\">></span>/SimpleTagLibrary<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">uri</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">taglib</span><span style=\"color: #0000ff\">></span></pre> </div> <p><strong><span style=\"color: #ff6600\"> </span></strong></p> <p><strong><span style=\"font-size: 14px; color: #ff6600\">3)       在标签库文件中注册标签</span></strong></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\" </span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">taglib </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://java.sun.com/xml/ns/j2ee\"</span><span style=\"color: #ff0000\">     xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">     xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd\"</span><span style=\"color: #ff0000\">     version</span><span style=\"color: #0000ff\">=\"2.0\"</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">description</span><span style=\"color: #0000ff\">></span>A tag library exercising SimpleTag handlers.        <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">description</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">tlib-version</span><span style=\"color: #0000ff\">></span>1.0<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">tlib-version</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">short-name</span><span style=\"color: #0000ff\">></span>ny<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">short-name</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">uri</span><span style=\"color: #0000ff\">></span>/ny-tag<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">uri</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">tag</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">name</span><span style=\"color: #0000ff\">></span>dateInfo<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">name</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">tag-class</span><span style=\"color: #0000ff\">></span>com.ny.tag2.DisplayInfo<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">tag-class</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">body-content</span><span style=\"color: #0000ff\">></span>empty<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">body-content</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">tag</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">taglib</span><span style=\"color: #0000ff\">></span></pre> </div> <p>① <short-name>：指明推荐使用的prefix（这个属性会在jsp页面中引入标签的时候出现）。</p> <p>② <uri>：指明引用这个标签库时使用的uri（注意哦<strong>是uri不是url</strong>）。</p> <p>③ <tag>：指明要定义标签的信息。</p> <p>其中，<strong>tag可以设置的属性</strong>如下：</p> <p> </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> <tbody> <tr> <td valign=\"top\" width=\"104\"> <p align=\"center\"><span style=\"font-size: 14px\"><strong>属性</strong></span></p> </td> <td valign=\"top\" width=\"421\"> <p align=\"center\"><span style=\"font-size: 14px\"><strong>说明</strong></span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">name</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">定义属性的名称，每个标签的属性名称必须是唯一的。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">tag-class</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">指定映射的Java类。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">required</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">指定属性是否是必须的或者可选的，如果是必须的就设置为true。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">rtexprvalue</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">声明在运行表达式时，标签属性是否有效，有效则为true。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">type</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">定义该属性的Java类类型，默认指定为String。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">decription</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">描述信息</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">fragment</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">如果声明了该属性，属性值将被视为一个JspFragment。</span></p> </td> </tr> <tr> <td valign=\"top\" width=\"104\"> <p><span style=\"font-size: 14px\">bodycontent</span></p> </td> <td valign=\"top\" width=\"421\"> <p><span style=\"font-size: 14px\">指明标签体的限定，可以有以下几种取值（想了解更多可以在”参考”中查找到）：a) empty：指定该标签只能作用空标签使用；b) scriptless：指定该标签的标签体可以是静态HTML元素、表达式语言，但不允许出现JSP脚本。</span></p> </td> </tr> </tbody> </table> <p> </p> <p><strong><span style=\"font-size: 14px; color: #ff6600\">4)       在页面中引入标签库</span></strong></p> <p> </p> <div class=\"cnblogs_code\"> <pre><span style=\"background-color: #ffff00; color: #000000\"><%</span><span style=\"background-color: #f5f5f5; color: #000000\">@ taglib prefix</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">ny</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #000000\"> uri</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">/ny-tag</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #ffff00; color: #000000\">%></span></pre> </div> <p> </p> <p><strong><span style=\"font-size: 14px; color: #ff6600\">5)       在页面中使用标签</span></strong></p> <p> </p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">imooc:dateInfo</span><span style=\"color: #0000ff\">/></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">></span></pre> </div> <p> </p> <p>　　所以JSP页面中的代码就是：</p> <div class=\"cnblogs_code\"> <pre><span style=\"background-color: #ffff00; color: #000000\"><%</span><span style=\"background-color: #f5f5f5; color: #000000\">@ page language</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">java</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #000000\"> contentType</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">text/html; charset=UTF-8</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #000000\">     pageEncoding</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">UTF-8</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #ffff00; color: #000000\">%></span> <span style=\"background-color: #ffff00; color: #000000\"><%</span><span style=\"background-color: #f5f5f5; color: #000000\">@ taglib prefix</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">imooc</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #000000\"> uri</span><span style=\"background-color: #f5f5f5; color: #000000\">=</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span><span style=\"background-color: #f5f5f5; color: #800000\">/imooc-tag2</span><span style=\"background-color: #f5f5f5; color: #800000\">\"</span> <span style=\"background-color: #ffff00; color: #000000\">%></span> <span style=\"color: #0000ff\"><!</span><span style=\"color: #ff00ff\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">html</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">head</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">meta </span><span style=\"color: #ff0000\">http-equiv</span><span style=\"color: #0000ff\">=\"Content-Type\"</span><span style=\"color: #ff0000\"> content</span><span style=\"color: #0000ff\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">title</span><span style=\"color: #0000ff\">></span>Insert title here<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">title</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">head</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">imooc:dateInfo</span><span style=\"color: #0000ff\">/></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">html</span><span style=\"color: #0000ff\">></span></pre> </div> <p>　　</p> <p>　　是不是感觉还挺简单的呢？ 其实自定义标签的用法不止这些哦，加油吧！</p> <p> </p></div>', 'https://www.cnblogs.com/NYfor2018/p/8463776.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('414', '字符串元音字母反转，其他的不变', '&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt; font-family: 黑体; background-color: #ffffff; color: #ff0000;&quot;&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto;&quot; src=&quot;https://images2018.cnblogs.com/blog/932056/201802/932056-20180223235810387-1165524087.png&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;  &lt;p&gt;&amp;nbsp;&lt;/p&gt;  &lt;p&gt;&lt;span style=&quot;font-size: 14pt; font-family: 黑体; background-color: #ffffff; color: #ff0000;&quot;&gt;思路:用ArrayList存放元音字母（因为有个contains方法），并记录元音的序号和放进栈里面（反转类似栈先进后出），里面用到string与char数组的转换&lt;/span&gt;&lt;/p&gt;  &lt;div class=&quot;cnblogs_code&quot;&gt;  &lt;pre&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; java.util.ArrayList;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; java.util.List;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; java.util.Scanner;  &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; java.util.Stack;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; reverseWords {           &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; String reverseVowels(String s) {          Stack&lt;/span&gt;&amp;lt;String&amp;gt; replace=&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Stack&amp;lt;String&amp;gt;(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;利用栈先进后出&lt;/span&gt;          List&amp;lt;Character&amp;gt; contain=&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Character&amp;gt;(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;存储元音字母&lt;/span&gt;          &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; count=0; &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;元音字母个数&lt;/span&gt;          contain.add(&#039;a&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;e&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;i&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;o&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;u&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;A&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;E&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;I&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;O&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          contain.add(&lt;/span&gt;&#039;U&#039;&lt;span style=&quot;color: #000000;&quot;&gt;);          &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;char&lt;/span&gt;[] ch=&lt;span style=&quot;color: #000000;&quot;&gt;s.toCharArray();          &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;s.length();i++&lt;span style=&quot;color: #000000;&quot;&gt;){              &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(contain.contains(ch[i]))                  count&lt;/span&gt;++&lt;span style=&quot;color: #000000;&quot;&gt;;          }          &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;(count&amp;lt;2) &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; s; &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;元音小于2个不用反转&lt;/span&gt;          &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;[] num=&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;[count]; &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;记录元音字母位置&lt;/span&gt;          &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; j=-1&lt;span style=&quot;color: #000000;&quot;&gt;;          &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;ch.length;i++&lt;span style=&quot;color: #000000;&quot;&gt;){              &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(contain.contains(ch[i])){                  num[&lt;/span&gt;++j]=&lt;span style=&quot;color: #000000;&quot;&gt;i;                  replace.push(String.valueOf(ch[i])); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;进栈&lt;/span&gt;  &lt;span style=&quot;color: #000000;&quot;&gt;            }             }          &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;count;i++&lt;span style=&quot;color: #000000;&quot;&gt;){                  ch[num[i]]&lt;/span&gt;=replace.pop().charAt(0&lt;span style=&quot;color: #000000;&quot;&gt;);          }          &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; String.valueOf(ch);   &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;char数组转string不可以用toString() &lt;/span&gt;  &lt;span style=&quot;color: #000000;&quot;&gt;    }      &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; main(String[] args) {          &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; TODO Auto-generated method stub&lt;/span&gt;          Scanner scanner=&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Scanner(System.in);           &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(scanner.hasNext()){             String str&lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt;scanner.next();             System.out.println(reverseVowels(str));         }      }  }&lt;/span&gt;&lt;/pre&gt;  &lt;/div&gt;  &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;', 'https://www.cnblogs.com/tk55/p/8463884.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('415', 'Spring基础篇——通过Java注解和XML配置装配bean', '<div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>　　<span style=\"font-family: 楷体; font-size: 18px\">自动化装配的确有很大的便利性，但是却并不能适用在所有的应用场景，比如需要装配的组件类不是由自己的应用程序维护，而是引用了第三方的类库，这个时候自动装配便无法实现，Spring对此也提供了相应的解决方案，那就是通过显示的装配机制——Java配置和XML配置的方式来实现bean的装配。</span></p> <h2><span style=\"font-family: 楷体; font-size: 18px\">　　Java配置类装配bean</span></h2> <p><span style=\"font-family: 楷体; font-size: 18px\">　　我们还是借助上篇博文中的老司机开车的示例来讲解。Car接口中有开车的drive方法，该接口有两个实现——QQCar和BenzCar</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.impl;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> QQCar <span style=\"color: #0000ff\">implements</span><span style=\"color: #000000\"> Car {     @Override     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> drive() {         System.out.println(</span>\"开QQ车\"<span style=\"color: #000000\">);     } }</span></pre> </div> <p><span style=\"font-family: 楷体; font-size: 18px\">　　既然是通过Java代码来装配bean,那就是不是我们上一篇讲的通过组件扫描的方式来发现应用程序中的bean的自动装配机制了，而是需要我们自己通过配置类来声明我们的bean。我们先通过@Configuration注解来创建一个Spring的配置类，该类中包含了bean的创建细节——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Configuration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.QQCar;  </span><span style=\"color: #008000\">/**</span><span style=\"color: #008000\">  * @Configuration 表明该类是Spring的一个配置类，该类中会包含应用上下文创建bean的具体细节  * @Bean 告诉Spring该方法会返回一个要注册成为应用上下文中的bean的对象  </span><span style=\"color: #008000\">*/</span><span style=\"color: #000000\"> @Configuration </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> CarConfig {      @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Car laoSiJi() {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> QQCar();     } }</span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">以上类中创建的bean实例默认情况下和方法名是一样的，我们也可以通过@Bean注解的name属性自定义ID,例如 <span class=\"cnblogs_code\">@Bean(name = \"chenbenbuyi\")</span> ，那么在获取bean的时候根据你自己定义的ID获取即可。接着我们测试</span><span style=\"font-family: 楷体; font-size: 18px\">——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.test;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.junit.Test; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.ApplicationContext; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.AnnotationConfigApplicationContext; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.config.CarConfig; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> CarTest {     @Test     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> carTest() {         ApplicationContext context </span>= <span style=\"color: #0000ff\">new</span> AnnotationConfigApplicationContext(CarConfig.<span style=\"color: #0000ff\">class</span><span style=\"color: #000000\">);         </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">根据ID从容器容获取bean</span>         Car car = (Car) context.getBean(\"<span style=\"font-family: 楷体; font-size: 18px\"><span class=\"cnblogs_code\">chenbenbuyi</span></span>\"<span style=\"color: #000000\">);         car.drive();     } }</span></pre> </div> <p><span style=\"font-family: 楷体; font-size: 18px\">　　以上测试能够成功输出，这就表明我们能够获取到QQCar的实例对象的，而这也是最简单的基于Java配置类来装配bean的示例了。但是你可能会说，明明是我们自己创建的Car的实例，怎么就成了Spring为我们创建的呢？好吧，我们把@Bean注解拿开，测试当然是无法通过，会抛NoSuchBeanDefinitionException异常。这里，你可能需要好好理解<strong>控制反转</strong>的思想了：因为现在对于bean创建的控制权我们是交给了Spring容器的，如果没有@Bean注解，方法就只是一个普通方法，方法体返回的实例对象就不会注册到应用上下文（容器）中，也就说，Spring不会为我们管理该方法返回的实例对象，当我们在测试类中向容器伸手要对象的时候，自然就找不到。</span></p> <p><span style=\"font-family: 楷体; font-size: 18px\">　　上述示例过于简单，现在，我们要更进一步，给简单的对象添加依赖，来完成稍微复杂一点的业务逻辑。车是需要老司机来开的，于是我们同上篇一样定义一个Man类，Man的工作就是开车——<br></span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.impl;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> Man {      </span><span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> Car car;</span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man(Car car) {         </span><span style=\"color: #0000ff\">this</span>.car =<span style=\"color: #000000\"> car;     }      </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> work() {         car.drive();     } }</span></pre> </div> <p>　　<span style=\"font-size: 18px; font-family: 楷体\">Car的对象实例是通过构造器注入，而Car的实例对象在配置类中通过方法laoSiJi()返回,所以我们在配置类中可以直接调用laoSiJi方法获取bean注入到Man的实例对象——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.config;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Bean; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Configuration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.BenzCar; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.Man;  @Configuration </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> CarConfig {      @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Car laoSiJi() {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> BenzCar();     }      @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man work() {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Man(laoSiJi());     } }</span></pre> </div> <p><span style=\"font-size: 18px; font-family: 楷体\">　　测试类中通过上下文对象的getBean(\"work\")方法就可以获取到Man的实例对象，从而完成对老司机开车的测试。或许，你会觉得，work方法是通过调用laoSiJi方法才获取的Car的实例的，实际上并非如此。因为有了@Bean注解</span><span style=\"font-family: 楷体; font-size: 18px\">，<strong>Spring会拦截所有对该注解方法的调用，直接返回该方法创建的bean，也即容器中的管理的bean</strong>。也就是说，laoSiJi方法返回的bean交给了Spring容器管理后，当其他地方需要实例对象的时候，是直接从容器中获取的第一次调用方法产生的实例对象，而不会重复的调用laoSiJi方法。我们可以如下测试——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.config;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Bean; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Configuration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.BenzCar; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.Man;  @Configuration </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> CarConfig {      @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Car laoSiJi() {         System.out.println(</span>\"方法调用\"<span style=\"color: #000000\">);         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> BenzCar();     }      @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man work() {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Man(laoSiJi());     }      @Bean        </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man work2() {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Man(laoSiJi());     } }</span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">如上测试你会发现，虽然我定义了两个方法来获取Man实例，但是控制台只输出了一次调用打印，即证明方法只在最初返回bean的时候被调用了一次，而后的实例获取都是直接从容器中获取的。这也就是默认情况下Spring返回的实例都是单例的原因：一旦容器中注册了实例对象，应用程序需要的时候，就直接给予，不用重复创建。当然，很多情况下我们不会如上面的方式去引入依赖的bean,而可能会通过参数注入的方式，这样你就可以很灵活的使用不同的装配机制来满足对象之间的依赖关系，比如下面这种自动装配的方式给Man的实例注入依赖的Car对象——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.config;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Bean; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.ComponentScan; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Configuration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.Man;  @Configuration @ComponentScan(</span>\"spring.impl\"<span style=\"color: #000000\">) </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> CarConfig {      @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man work(Car car) {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Man(car);     } }</span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">当然，如果你喜欢去简就繁，也可以通过XML配置文件配置依赖的bean。下面再来看看XML的方式如何装配bean。</span></p> <h2><span style=\"font-family: 楷体; font-size: 18px\">　　XML配置文件装配bean</span></h2> <p><span style=\"font-family: 楷体; font-size: 18px\">　　使用XML配置文件的方式装配bean，首要的就是要创建一个基于Spring配置规范的XML文件，该配置文件以<beans>为根元素（相当于Java配置的@Configuration注解），包含一个或多个<bean>元素(相当于配置类中@Bean注解)。针对上文的汽车示例，如果改成XML配置就是这样——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span style=\"color: #0000ff\">></span>          <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">通过类的全限定名来声明要创建的bean</span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p>　　然后，从基于XML的配置文件中加载上下文定义，我们就能根据ID获取到对应的bean了——</p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.test;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.junit.Test; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.ApplicationContext; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.support.ClassPathXmlApplicationContext; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> CarTest {     @Test     </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> carTest() {         ApplicationContext context </span>= <span style=\"color: #0000ff\">new</span> ClassPathXmlApplicationContext(\"resource/applicationContext.xml\"<span style=\"color: #000000\">);         </span><span style=\"color: #008000\">//</span><span style=\"color: #008000\">XML的方式如果没有明确给定ID，默认bean的ID会根据类的全限定名来命名，以#加计数序号的方式命名。</span>         Car car = (Car)context.getBean(\"spring.impl.BenzCar#0\"<span style=\"color: #000000\">);         car.drive();     } }</span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">当然，示例中使用自动化的命名ID看起来逼格满满，但其实并不实用，如果需要引用bean的实例就有点操蛋了，实际应用中当然还是要借助<bean>的id属性来自定义命名。</span></p> <h4><span style=\"font-family: 楷体; font-size: 18px\">　　构造器注入</span></h4> <p><span style=\"font-family: 楷体; font-size: 18px\">　　给<bean>元素设置id属性，在构建另外的对象实例的时候，就可以很方便的引用，譬如上面基于Java的配置中的构造器注入，XML中的同样这样实现——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span style=\"color: #0000ff\">></span>      <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"car\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">通过Man的构造器注入Car的实例对象</span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">constructor-arg </span><span style=\"color: #ff0000\">ref</span><span style=\"color: #0000ff\">=\"car\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">而有时候我们并不一定都是将对象的引用装配到依赖对象中，也可以简单的注入字面值——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.impl;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> Man {      </span><span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> Car car;     </span><span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> String str;<br></span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man(String str ,Car car) {         </span><span style=\"color: #0000ff\">this</span>.car =<span style=\"color: #000000\"> car;         </span><span style=\"color: #0000ff\">this</span>.str =<span style=\"color: #000000\"> str;     }      </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> work() {         System.out.println(str);         car.drive();     } }</span></pre> </div> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span style=\"color: #0000ff\">></span>      <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"car\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">分别注入字面值和对象的应用</span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">constructor-arg </span><span style=\"color: #ff0000\">value</span><span style=\"color: #0000ff\">=\"陈本布衣\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">constructor-arg </span><span style=\"color: #ff0000\">ref</span><span style=\"color: #0000ff\">=\"car\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">接着，我们继续对已有代码做些改动，将注入的参数改为Car的List集合——</span></p> <div class=\"cnblogs_code\"> <pre> <span style=\"color: #0000ff\">public</span> Man(List<Car><span style=\"color: #000000\"> cars) {         </span><span style=\"color: #0000ff\">this</span>.cars =<span style=\"color: #000000\"> cars;  }</span></pre> </div> <p><span style=\"font-family: 楷体; font-size: 18px\">　  那么配置文件就可以这样配置——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span style=\"color: #0000ff\">></span>      <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"qqCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.QQCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">通过<list>子元素实现List集合对象的装配</span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">ref </span><span style=\"color: #ff0000\">bean</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #0000ff\">/></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">ref </span><span style=\"color: #ff0000\">bean</span><span style=\"color: #0000ff\">=\"qqCar\"</span><span style=\"color: #0000ff\">/></span>             <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p>　　<span style=\"font-family: 楷体; font-size: 18px\">如果是需要注入集合中的字面值，写法如下——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span style=\"color: #0000ff\">></span>      <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"qqCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.QQCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">通过<list>子元素实现List集合字面值的装配</span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>这里直接填写字面值<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>陈本布衣<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p><span style=\"font-family: 楷体; font-size: 18px\">　　我们可以采用同样的方式装配Set集合，只是<strong>Set集合会忽略掉重复的值，而且顺序也不保证</strong>。此处不做演示。</span></p> <h4><span style=\"font-family: 楷体; font-size: 18px\">　　属性注入</span></h4> <p><span style=\"font-family: 楷体; font-size: 18px\">　　构造器注入是一种强依赖注入，而很多时候我们并不倾向于写那种依赖性太强的代码，而属性的Setter方法注入作为一种可选性依赖，在实际的开发中是应用得非常多的。上面Man类如果要通过属性注入的方式注入Car的实例，就该是这样子——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.impl;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car;  </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> Man {      </span><span style=\"color: #0000ff\">private</span><span style=\"color: #000000\"> Car car;      </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> setCar(Car car) {         </span><span style=\"color: #0000ff\">this</span>.car =<span style=\"color: #000000\"> car;     }      </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span><span style=\"color: #000000\"> work() {         car.drive();     } }</span></pre> </div> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span style=\"color: #0000ff\">></span>      <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"qqCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.QQCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">通过属性注入的方式注入Car的实例</span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">property </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"car\"</span><span style=\"color: #ff0000\"> ref</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p>　<span style=\"font-family: 楷体; font-size: 18px\">　以上示例中，XML配置文件中属性注入的属性名必须要和Java类中Setter方法对应的属性名一致。而对于字面量的注入，和上面构造器的方式类似，只不过使用的元素名换成了<property>而已，下面仅做展示——</span></p> <div class=\"cnblogs_code\"> <pre>    <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">property </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"str\"</span><span style=\"color: #ff0000\"> value</span><span style=\"color: #0000ff\">=\"字面量的注入\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">property </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"list\"</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>集合的字面量注入1<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>集合的字面量注入2<span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">value</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span></pre> </div> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.BenzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"qqCar\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.QQCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">属性注入的方式注入集合</span><span style=\"color: #008000\">--></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">property </span><span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=\"cars\"</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">ref </span><span style=\"color: #ff0000\">bean</span><span style=\"color: #0000ff\">=\"qqCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">ref</span><span style=\"color: #0000ff\">></span>                 <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">ref </span><span style=\"color: #ff0000\">bean</span><span style=\"color: #0000ff\">=\"benzCar\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">ref</span><span style=\"color: #0000ff\">></span>             <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">list</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span></pre> </div> <h2><span style=\"font-family: 楷体; font-size: 18px\"> 　 三种装配方式的混合使用</span></h2> <p> 　　<span style=\"font-family: 楷体; font-size: 18px\">在同一个应用程序中，Spring常见的这三种装配方式我们可能都会用到，而对于不同的装配方式，他们之间如何实现相互引用从而整合到一起的呢？我们先看看Java配置类的引用问题。试想如果Java配置类中的bean数量过多，我们可能会考虑拆分。在本文的示例中，Man类实例的创建必须通过构造器注入Car的实例，如果把两个实例的产生分成两个配置类，那么在依赖注入的配置类中可以通过@Import注解引入被依赖的配置类——<br></span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.config;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Bean; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Configuration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Import; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.Man;  @Configuration @Import(CarConfig.</span><span style=\"color: #0000ff\">class</span>) <span style=\"color: #008000\">//</span><span style=\"color: #008000\">通过@Import注解引入产生Car实例的配置类</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> ManConfig {     @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man work(Car car) {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Man(car);     } }</span></pre> </div> <p><span style=\"font-size: 18px; font-family: 楷体\">　　但是如果Car的实例不是通过Java类配置的，而是通过XML方式配置的方式配置，我们只需通过@ImportResource注解将配置bean的XML文件引入即可，只不过这个时候要保证XML中被依赖的bean的id要和Java配置类中的形参保持一致——</span></p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\">package</span><span style=\"color: #000000\"> spring.config;  </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Bean; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.Configuration; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> org.springframework.context.annotation.ImportResource; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.facade.Car; </span><span style=\"color: #0000ff\">import</span><span style=\"color: #000000\"> spring.impl.Man;  @Configuration @ImportResource(</span>\"classpath:resource/applicationContext.xml\"<span style=\"color: #000000\">) </span><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span><span style=\"color: #000000\"> ManConfig {     @Bean     </span><span style=\"color: #0000ff\">public</span><span style=\"color: #000000\"> Man work(Car car) {         </span><span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">new</span><span style=\"color: #000000\"> Man(car);     } }</span></pre> </div> <p>　　　<span style=\"font-family: 楷体; font-size: 18px\">而如果bean是采用XML进行装配，如果需要装配的bean过多，我们当然还是会根据业务拆分成不同的配置文件，然后使用<improt>元素进行不同XML配置文件之间的引入，形如： <span class=\"cnblogs_code\"><<span style=\"color: #0000ff\">import</span> resource=\"classpath:xxx.xml\" /></span> ；而如果要在XML中引入Java配置，只需将Java配置类当成普通的bean在XML中进行声明即可，但是在测试的时候要注意开启组件扫描，因为加载XML配置的上下文对象只会加载XML配置文件中的bean定义，无法让基于Java配置类产生bean的装配机制自动生效——</span></p> <p> </p> <div class=\"cnblogs_code\"> <pre><span style=\"color: #0000ff\"><?</span><span style=\"color: #ff00ff\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff\">?></span> <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">beans </span><span style=\"color: #ff0000\">xmlns</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000\">        xmlns:xsi</span><span style=\"color: #0000ff\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000\">        xmlns:context</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000\">        xsi:schemaLocation</span><span style=\"color: #0000ff\">=\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd <br>　　　　http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"</span><span style=\"color: #0000ff\">></span>      <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">开启组件扫描，在测试的时候配置类才能向容器中注册类中声明的bean</span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">context:component-scan </span><span style=\"color: #ff0000\">base-package</span><span style=\"color: #0000ff\">=\"spring\"</span><span style=\"color: #0000ff\">/></span>     <span style=\"color: #008000\"><!--</span><span style=\"color: #008000\">XML中引入Java配置类：将配置类声明为bean</span><span style=\"color: #008000\">--></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">class</span><span style=\"color: #0000ff\">=\"spring.config.CarConfig\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">bean </span><span style=\"color: #ff0000\">id</span><span style=\"color: #0000ff\">=\"man\"</span><span style=\"color: #ff0000\"> class</span><span style=\"color: #0000ff\">=\"spring.impl.Man\"</span><span style=\"color: #0000ff\">></span>         <span style=\"color: #0000ff\"><</span><span style=\"color: #800000\">constructor-arg </span><span style=\"color: #ff0000\">ref</span><span style=\"color: #0000ff\">=\"laoSiJi\"</span><span style=\"color: #0000ff\">></</span><span style=\"color: #800000\">constructor-arg</span><span style=\"color: #0000ff\">></span>     <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">bean</span><span style=\"color: #0000ff\">></span> <span style=\"color: #0000ff\"></</span><span style=\"color: #800000\">beans</span><span style=\"color: #0000ff\">></span></pre> </div> <p><span style=\"font-family: 楷体; font-size: 18px\">　　最后说一点，不管是Java配置还是XML配置，有个通常的做法就是创建一个比所有配置都更高层次的根配置类/文件，该配置不声明任何的bean，只用来将多个配置组合在一起，从而让配置更易于维护和扩展。好了，以上便是两种bean的装配方式的简单讲解，如有纰漏，欢迎指正，不胜感激。</span></p></div>', 'https://www.cnblogs.com/chenbenbuyi/p/8457700.html', '1', '博客园', '2018-02-24 20:27:42');
INSERT INTO `article` VALUES ('416', 'Java 商户管理系统 客户管理 库存管理 销售报表 SSM项目源码', '', 'http://d171293.iteye.com/blog/2412441', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('417', 'JDK8中LinkedList的工作原理剖析', '', 'http://qindongliang.iteye.com/blog/2412348', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('418', 'java学习就两个问题', '', 'http://caotianyin.iteye.com/blog/2412309', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('419', 'java  内存诊断', '', 'http://x125858805.iteye.com/blog/2412499', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('420', '捋一捋dubbo配置', '', 'http://huangjinjin520.iteye.com/blog/2412456', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('421', '记录一次壮烈牺牲的阿里巴巴面试', '', 'http://2667747158.iteye.com/blog/2412428', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('422', 'Oracle官方并发教程之线程池', '', 'http://lintaozhou.iteye.com/blog/2412357', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('423', '为什么java.util.concurrent 包里没有并发的ArrayList实现？', '', 'http://lintaozhou.iteye.com/blog/2412354', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('424', 'JDK8中LinkedList的工作原理剖析', '', 'http://qindongliang.iteye.com/blog/2412348', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('425', 'java学习就两个问题', '', 'http://caotianyin.iteye.com/blog/2412309', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('426', '大话架构”阿里架构师分享的Java程序员需要突破的技术要点', '', 'http://2187956196.iteye.com/blog/2412289', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('427', '属性文件读取方式', '', 'http://getthrough.iteye.com/blog/2412262', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('428', '从百度离职后，我是如何演进公司的技术架构', '', 'http://2187956196.iteye.com/blog/2412225', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('429', '手写 reactor( netty reactor 模型)', '', 'http://knight-black-bob.iteye.com/blog/2412115', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('430', 'NoSuchMethodError: javax.servlet.ServletContext.getVirtualServerName()Ljava/lang', '', 'http://knight-black-bob.iteye.com/blog/2412105', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('431', 'java 进销存系统 crm 库存管理 销售报表 商户管理 springmvc SSM项目', '', 'http://rtyeee22.iteye.com/blog/2412100', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('432', '【集成代码生成器】 单表 多表 树形表 一对多 springmvc spring mybatis SSM 后台框架', '', 'http://rtyeee22.iteye.com/blog/2412098', '1', 'ITEYE', '2018-03-08 15:13:41');
INSERT INTO `article` VALUES ('433', '对HashMap的思考及手写实现荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2084056', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('434', 'springboot1.5.9 + mybatis + layui + shiro后台权限管理系统荐 ', '', 'http://blog.51cto.com/wyait/2082803', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('435', '理解数据库连接池底层原理之手写实现荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2069971', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('436', '透彻理解Spring事务设计思想之手写实现荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2068761', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('437', '设计模式之观察者模式荐 ', '', 'http://blog.51cto.com/zero01/2066623', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('438', 'Java高级特性——注解，这也许是最简单易懂的文章了荐 ', '', 'http://blog.51cto.com/13586365/2065324', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('439', 'Java定时任务调度详解荐 ', '', 'http://blog.51cto.com/zhangfengzhe/2064092', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('440', '那一定都是你的错！- 一次FastDFS并发问题的排查经历荐 ', '', 'http://blog.51cto.com/ityouknow/2054992', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('441', 'spring rest 容易被忽视的后端服务 chunked 性能问题荐 ', '', 'http://blog.51cto.com/wangqingpei557/2044336', '1', '51CTO', '2018-03-08 15:13:42');
INSERT INTO `article` VALUES ('442', '三分钟读懂TT猫分布式、微服务和集群之路荐 ', '', 'http://blog.51cto.com/itstyle/1972470', '1', '51CTO', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('443', 'java 基础词汇 必须 第九天', '', 'https://www.cnblogs.com/qingyundian/p/8528550.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('444', 'SSM整合开发', '', 'https://www.cnblogs.com/ainyi/p/8527984.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('445', 'Maven中setting.xml配置Demo', '', 'https://www.cnblogs.com/lxcy/p/8527890.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('446', '进行简单的四则运算（限制：小学水平）', '', 'https://www.cnblogs.com/Doraemon12138/p/8527853.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('447', '浅谈java编译机制和运行机制', '', 'https://www.cnblogs.com/songyajian/p/8527775.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('448', 'Hibernate【映射】知识要点', '', 'https://www.cnblogs.com/Java3y/p/8527718.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('449', '01 Maven构建的项目中，把.xml等配置文件添加到编译目录', '', 'https://www.cnblogs.com/nnngu/p/8527701.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('450', 'java 打印流 递归复制子文件子文件夹 不同编码文件复制到同一文件中 序列化流反序列化流', '', 'https://www.cnblogs.com/qingyundian/p/8527522.html', '1', '博客园', '2018-03-08 15:13:43');
INSERT INTO `article` VALUES ('451', 'java 堆 栈 常量池', '', 'https://www.cnblogs.com/huangyin/p/8527418.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('452', '漫漫人生路，学点Jakarta基础-重写（覆盖）、重载', '', 'https://www.cnblogs.com/mm15732621582/p/8526668.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('453', 'Hibernate 学习（二）', '', 'https://www.cnblogs.com/zt19994/p/8522176.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('454', '【原】无脑操作：IDEA + maven + SpringBoot + JPA + Thymeleaf实现CRUD及分页', '', 'https://www.cnblogs.com/iflytek/p/8526182.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('455', 'Java中的clone方法-理解浅拷贝和深拷贝', '', 'https://www.cnblogs.com/JamesWang1993/p/8526104.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('456', '使用Mac自带svn搭建服务器，并使用idea进行连接', '', 'https://www.cnblogs.com/gdwkong/p/8424456.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('457', 'Core Java(一)', '', 'https://www.cnblogs.com/wcoding/p/8526001.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('458', 'JAVA简便解析json文件', '', 'https://www.cnblogs.com/xtuxiongda/p/8525969.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('459', 'Java基础--day02', '', 'https://www.cnblogs.com/wsty/p/8525424.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('460', 'maven是干什么的？', '', 'https://www.cnblogs.com/lilala-world/p/8525489.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('461', 'Spring源码学习：第1步--在Spring源码中添加最简单的Demo代码', '', 'https://www.cnblogs.com/cyhbyw/p/8525441.html', '1', '博客园', '2018-03-08 15:13:44');
INSERT INTO `article` VALUES ('462', '2018年线程与多线程面试必知必会内容', '', 'https://www.cnblogs.com/lfs2640666960/p/8525327.html', '1', '博客园', '2018-03-08 15:13:44');

-- ----------------------------
-- Table structure for `favorite`
-- ----------------------------
DROP TABLE IF EXISTS `favorite`;
CREATE TABLE `favorite` (
  `artiTitle` varchar(255) CHARACTER SET utf8 NOT NULL,
  `artiFrom` varchar(255) CHARACTER SET utf8 NOT NULL,
  `artiType` int(2) NOT NULL,
  `artiId` int(5) NOT NULL,
  `userEmail` varchar(255) CHARACTER SET utf8 NOT NULL,
  `addTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of favorite
-- ----------------------------
INSERT INTO `favorite` VALUES ('', '', '0', '319', '1234', '2018-02-12 00:53:24');
INSERT INTO `favorite` VALUES ('', '', '0', '0', '', '2018-02-12 00:52:24');
INSERT INTO `favorite` VALUES ('解决PPTP错误：ppp:compressor dropped pkt荐 ', '51CTO', '3', '306', '123', '2018-02-13 22:35:53');
INSERT INTO `favorite` VALUES ('MySQL高可用解决方案MMM荐 ', '', '1', '318', '123', '2018-02-13 22:11:23');
INSERT INTO `favorite` VALUES ('wordpress博客安装redis缓存荐 ', '51CTO', '1', '305', '123', '2018-02-13 22:24:34');
INSERT INTO `favorite` VALUES ('在编程中为所欲为[圣诞版]荐 ', 'CSDN', '1', '307', '123', '2018-02-13 22:24:35');
INSERT INTO `favorite` VALUES ('Linux运维必会的MySQL企业面试题大全荐 ', 'CSDN', '1', '1', '123', '2018-02-13 22:24:36');
INSERT INTO `favorite` VALUES ('爬取一个天气预报结合微信公总号发送荐 ', '51CTO', '1', '3', '123', '2018-02-13 22:24:38');
INSERT INTO `favorite` VALUES ('Apache POI处理excel文档荐 ', 'ITEYE', '1', '302', '123', '2018-02-13 22:24:39');
INSERT INTO `favorite` VALUES ('配置思科路由器Telnet 登陆荐 ', 'ITEYE', '1', '300', '123', '2018-02-13 22:24:40');
INSERT INTO `favorite` VALUES ('基于heartbeat v2 crm实现HA高可用性的 LAMP+wordpress荐 ', 'CSDN', '1', '304', '123', '2018-02-13 22:24:42');
INSERT INTO `favorite` VALUES ('迁移Exchange队列至其它服务器继续传送队列邮件荐 ', '51CTO', '1', '319', '123', '2018-02-13 14:29:56');
INSERT INTO `favorite` VALUES ('迁移Exchange队列至其它服务器继续传送队列邮件荐 ', '51CTO', '1', '319', '123@163dfa.com', '2018-02-13 14:31:17');
INSERT INTO `favorite` VALUES ('python根据nagios配置文件将监控的服务联系人等信息导出到excel表格荐 ', '51CTO', '1', '301', '123', '2018-02-13 14:36:40');
INSERT INTO `favorite` VALUES ('Amazon aws云主机安装配置pptp，轻松实现FQ荐 ', 'CSDN', '1', '299', '123', '2018-02-13 14:37:05');
INSERT INTO `favorite` VALUES ('如何写出一份高逼格的简历？新技能 get√ 荐 ', '', '2', '315', '123', '2018-02-13 22:42:37');
INSERT INTO `favorite` VALUES ('字符串元音字母反转，其他的不变', '博客园', '1', '414', '123', '2018-03-07 10:19:47');
INSERT INTO `favorite` VALUES ('Laravel 5.4.36 session 生效问题', '博客园', '4', '369', '123', '2018-03-07 11:13:40');

-- ----------------------------
-- Table structure for `user`
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(3) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) CHARACTER SET utf8 NOT NULL,
  `username` varchar(255) CHARACTER SET utf8 NOT NULL,
  `intro` varchar(255) CHARACTER SET utf8 NOT NULL,
  `focus` varchar(255) CHARACTER SET utf8 NOT NULL,
  `password` varchar(255) NOT NULL,
  `personpic` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', '123', 'RoyRocco', '这是简介，这是修改版的', 'Java-Android-', '123', 'img/personPic/15187594250.jpg');
INSERT INTO `user` VALUES ('2', '475@12.com', '456', '12345', 'Java-', '12', 'img/personPic/15179294430.jpg');
INSERT INTO `user` VALUES ('3', '123@163.com', 'roy', 'sdafa', 'Web-', '123', 'img/personPic/15181912870.jpg');
INSERT INTO `user` VALUES ('4', '456@123.com', '你好啊', '这是我的简介，现在我试下用中文看看会不会乱码先', 'Web-', '123', 'img/personPic/15184183750.jpg');
INSERT INTO `user` VALUES ('5', '123@163dfa.com', '456', 'dfad', 'Java-Web-', '123', 'img/personPic/15185034480.jpg');
